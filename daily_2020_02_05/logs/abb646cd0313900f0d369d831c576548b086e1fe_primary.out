cset: moving following pidspec: 8836
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.429512742 seconds)
loading group "string"... done (took 0.608030015 seconds)
loading group "linalg"... done (took 7.967429045 seconds)
loading group "parallel"... done (took 0.183908387 seconds)
loading group "find"... done (took 1.21409594 seconds)
loading group "tuple"... done (took 2.004844514 seconds)
loading group "dates"... done (took 1.316862241 seconds)
loading group "micro"... done (took 0.249387161 seconds)
loading group "io"... done (took 0.97779169 seconds)
loading group "scalar"... done (took 40.500259172 seconds)
loading group "sparse"... done (took 12.686566335 seconds)
loading group "broadcast"... done (took 0.983854951 seconds)
loading group "union"... done (took 13.149970263 seconds)
loading group "simd"... done (took 4.773548434 seconds)
loading group "random"... done (took 9.381814762 seconds)
loading group "problem"... done (took 1.844143934 seconds)
loading group "array"... done (took 21.529405726 seconds)
loading group "misc"... done (took 1.704856238 seconds)
loading group "sort"... done (took 3.43947894 seconds)
loading group "collection"... done (took 17.952104023 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527060582 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129298381 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131900774 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124055757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152005741 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118262847 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130515529 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090232952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.823108514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153464975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123079431 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440873567 seconds)
done (took 5.251257814 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177506264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087229019 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086553199 seconds)
  done (took 1.299033257 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069670488 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12938339 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070106394 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070033401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070295076 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069372146 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069519702 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069749868 seconds)
  done (took 1.672909256 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076726539 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072195937 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070373246 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071891442 seconds)
  done (took 1.416091599 seconds)
done (took 5.768447621 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807943493 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219868232 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192473307 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.428641643 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133397949 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163817084 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656747101 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323349915 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193224361 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085079712 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112966774 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352321517 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113674936 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638373113 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081931292 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09444232 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142379022 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41341517 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070795333 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085555891 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092066581 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132349379 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093233065 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077755804 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147874492 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071581238 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141043109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08318324 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069816139 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224309109 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176034656 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68500067 seconds)
  done (took 10.46907237 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104031945 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104547962 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072426377 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129879718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10410575 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073248403 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079092631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071549681 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094413876 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13576994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096137609 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107631815 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06923189 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072619467 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088666981 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210005534 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087285844 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08538847 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075088081 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083611436 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112318946 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082145153 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084698772 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084709799 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133169555 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184050456 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103604472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103442346 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072545721 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088126918 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117959433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134717664 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071346107 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070871442 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131949447 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098432025 seconds)
  done (took 4.78032221 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.049369793 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149086391 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095742184 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140226589 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06849173 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113829784 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069334558 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085505869 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215959265 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357868805 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638108955 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114772234 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110955742 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071456414 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072344968 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070572988 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.581883547 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101483957 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111968165 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086039739 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075393393 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073118338 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363431967 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07244156 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068125505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07204991 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060919912 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130670859 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071677972 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.987591388 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168898647 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071239561 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104427079 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171532392 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.244288556 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093864694 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069346423 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148967493 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073355531 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068895185 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161318896 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068406416 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074139718 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070087218 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088546428 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107582678 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12237474 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071621862 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070675483 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169489357 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068820123 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084369225 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.10098635 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158650256 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083249077 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068991066 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26376747 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093081011 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073867739 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068473278 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188631265 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070138207 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129992959 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071180794 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070222904 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071871925 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073007474 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363344423 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069392607 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.848262438 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074401369 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079398342 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073272604 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073749206 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077220595 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076502863 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092314046 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069827371 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078781519 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069439395 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070184299 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0703971 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086625661 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405775811 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070611563 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071776543 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068137214 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093382945 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.200144344 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072228804 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069373853 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103164057 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072805237 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070292801 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113024541 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070912312 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086499993 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073917522 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116601483 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071301066 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098152114 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07173709 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100271443 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073754644 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101699997 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083933307 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072217799 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449613842 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068992611 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069080152 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072088333 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069032982 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071478455 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070983812 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083736142 seconds)
  done (took 22.154800578 seconds)
done (took 39.577815093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269041601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077199918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077289519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077313363 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077501271 seconds)
  done (took 1.798404639 seconds)
done (took 2.998063283 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128040107 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104656482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068270921 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101665968 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067750367 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106478419 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105831183 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081127942 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104977449 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068255872 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102058396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067819518 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068367773 seconds)
  done (took 2.397967074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087949173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088421189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074452618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087829718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067675885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087545772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086028261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092880808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085881677 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076825113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067124364 seconds)
  done (took 2.096725905 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086677068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089499291 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073445474 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086446424 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067713341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086293967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085599245 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090180452 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086143569 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077944568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067485755 seconds)
  done (took 2.085862863 seconds)
done (took 7.769725341 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080955761 seconds)
  done (took 1.260655511 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607908139 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.122973093 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085655726 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115542376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197470194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122512135 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275927254 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090594444 seconds)
  done (took 8.985879133 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108610209 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075332632 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074726208 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073128803 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074546284 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072100234 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071943805 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072884665 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073739083 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076845336 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072535937 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075977191 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074296132 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074393933 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074913115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073357153 seconds)
  done (took 2.471483802 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097540481 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096083008 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077006122 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078327707 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075611371 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075083926 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07789654 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077832927 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074674548 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076301343 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077749335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076859513 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07562537 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06828703 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076997994 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078529042 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074629731 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076639252 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07783308 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07922196 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078248646 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067807467 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075407277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07807734 seconds)
  done (took 3.161928919 seconds)
done (took 17.06748339 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110385184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070627308 seconds)
  done (took 1.371269339 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085026274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087885199 seconds)
  done (took 1.370927861 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08677685 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069189879 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093697888 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082131281 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069540544 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069335669 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09164809 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069193749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068998692 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069786282 seconds)
  done (took 1.968988372 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071480425 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081050667 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07506945 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084764134 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076940907 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067375623 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075427808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070937113 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080819164 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066404556 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074429842 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086906598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074811847 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088362229 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075690372 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071945789 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07441281 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070836076 seconds)
  done (took 2.569530199 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068806811 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070462625 seconds)
  done (took 1.340368681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070045978 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067400316 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070682912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070133653 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066799996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066208135 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06807224 seconds)
  done (took 1.677317973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392135389 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118822623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324357787 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074971206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085869849 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269376655 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069823922 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074391528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074951514 seconds)
  done (took 2.726936488 seconds)
done (took 14.229721623 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084209766 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091063576 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100956257 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394296218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095454723 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069727649 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116834877 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195073496 seconds)
done (took 2.358781715 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217525501 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.722758477 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445730024 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219004383 seconds)
  done (took 2.589670378 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357539264 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092402892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062539767 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071426054 seconds)
  done (took 1.795861971 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070661465 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072952094 seconds)
  done (took 1.355463813 seconds)
done (took 7.167466657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06989093 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069997134 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06827739 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069886583 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.068057132 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06891995 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069594473 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09033079 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069187967 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067283468 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069521197 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069608277 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069585487 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067021367 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066885149 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069520541 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067088995 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067211817 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06678695 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067628106 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069105697 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067105909 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067391901 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069473217 seconds)
  done (took 2.914194818 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089023119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070113333 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07463123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074917768 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072722485 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074338465 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074546107 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069555935 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074546743 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071273657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07269022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072254359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072277619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072917743 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071454883 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072571349 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074809246 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069331623 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072655416 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073485038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.182886387 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06970096 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072915834 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074496422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072383787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072471802 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071776588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069652696 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074384333 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072469899 seconds)
  done (took 3.524708855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073581172 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066732732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068019451 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074457867 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066654646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067529013 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066449963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067894436 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067837828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066552207 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068036806 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066514506 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066886357 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067442508 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067537999 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070328441 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08265103 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06714295 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068399026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067387778 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070195412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067160409 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06696558 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066461648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066593637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066893022 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067003281 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066419426 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067512874 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066555626 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070957295 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07023447 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066470093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075336782 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070959228 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066967441 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071054373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06688578 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067575706 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066968722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066752933 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067172539 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067260847 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073955131 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067530223 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068638313 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067055858 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067763261 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067623565 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069260439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066733547 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066941668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069180518 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067848162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071166456 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06679774 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067893531 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067494755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067720856 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066361508 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067048093 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066507721 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069458442 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067819044 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082911007 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074699502 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067361315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069361587 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067793904 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069967148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069045039 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081694671 seconds)
  done (took 6.181900589 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093471209 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090744581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068518498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068883594 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065225257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067439237 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07309212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067542894 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068681388 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085676367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067277159 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06884474 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068893663 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070797452 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067433342 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068805621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076261729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065397997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067783796 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071392279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067729094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073218264 seconds)
  done (took 2.814804601 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158839388 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073615726 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110442678 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078684507 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073886288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07856726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073334618 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073310341 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073583489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071362968 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070962889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073418151 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073945814 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071531691 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071095884 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070844371 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073307562 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071205796 seconds)
  done (took 2.667689491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081289873 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070006148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09032081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07047874 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069695103 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071931792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073480301 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077397907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07217905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069605036 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078005008 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07171115 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071967178 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069557467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072508455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069772522 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072334115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069632784 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078018682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073466526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073654095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077827741 seconds)
  done (took 2.85170942 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082846197 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071587998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085425681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071838865 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065209398 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068551835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073752008 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068847428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073682276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071285383 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069352151 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068078032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072422195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06910606 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072958917 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069063981 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071178753 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069425693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071120498 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06520502 seconds)
  done (took 2.660213847 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090769417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072547311 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071748956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078997477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071891898 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071216093 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078667692 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071350531 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070856126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092210924 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071610632 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072290687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079696654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075623949 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071436518 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078621286 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078564672 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078528603 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071421679 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07174099 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092443579 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071569031 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078927754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071772524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071354414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071719538 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071588388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076147973 seconds)
  done (took 3.35482996 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070814475 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069702385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067813341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067542227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067110671 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067785689 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06682326 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06724117 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069529384 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066957062 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069918317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070153436 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070206677 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06996011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069615103 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069750108 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069825184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066915745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067003343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067544252 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069968292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070237055 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069554265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067069494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067585044 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069385408 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067795956 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06720239 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069524925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067103835 seconds)
  done (took 3.290866234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079898959 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077627759 seconds)
  done (took 1.391791547 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06624014 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083905963 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067005166 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074629099 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073439663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070813736 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07672695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073032208 seconds)
  done (took 1.8159054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086335069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080960689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070954768 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083155433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080980769 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08753972 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142128428 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070626084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076371941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068029536 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085936627 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069518279 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076724787 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070615144 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076174777 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077651856 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067331963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075559013 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072276577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068307056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070858966 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080040791 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073268826 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065408148 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071347712 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093531388 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08191468 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069727641 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073257419 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077960719 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076617269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063973745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070319741 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070092785 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067494756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080357565 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085013854 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072848565 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078951778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070669168 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079270863 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064723032 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074558521 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076991542 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080439854 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070799093 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070183776 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064921828 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068574285 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075025753 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064646406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071043081 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064562566 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077141436 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074357115 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08154433 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069543956 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071895093 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072988074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073495378 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07706522 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07267889 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073002171 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069887538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080246754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074921849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078982687 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064923403 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064097149 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068759947 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079705493 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094221094 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076575002 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070751378 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071717414 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06762553 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073330287 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071851841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075817165 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077149983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070541615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075632477 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077904662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070722277 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073223117 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077920524 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068397234 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072765347 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068267686 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087133637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069634363 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068169549 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069008049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080733494 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073366664 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070229597 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067860757 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076868825 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063432874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069181991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069909016 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069900862 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080157593 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073211465 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07367924 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07815371 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076672151 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069173259 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072147453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065676233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069897065 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068354283 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076564889 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062861304 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.194986211 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071952511 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072318912 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07951467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069519938 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070269249 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078669612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077101573 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068859591 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067232166 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073007581 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070449929 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073530903 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0791875 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069181919 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065272912 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06565014 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074170916 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070264133 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07455834 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0747006 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0738144 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065516773 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068491994 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075768985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079118842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070507047 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071906645 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076805079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072113435 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070779509 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077052653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072516572 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069351086 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076122053 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070891496 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06556053 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073116248 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07330419 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069148754 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074232101 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074148921 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072090446 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071176747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069029996 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077094752 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071291783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068853634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070902721 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069750214 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08113076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072043968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065365638 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067415579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078580481 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068424458 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069810684 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06977847 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072643658 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071065068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068913543 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070375335 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072875776 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080181365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073783214 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071132073 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075453918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082592014 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070197022 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072820857 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069356916 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071156568 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07032956 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078499693 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076316886 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074970689 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072432137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06766768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075449057 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07812262 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070393873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067705438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069232999 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073775584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075752509 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074174123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071327601 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068355304 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071472077 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073517795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073267367 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069716346 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069683943 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075933892 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069061675 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076388196 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071389051 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080457596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073723884 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064963229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072374245 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067955695 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076225606 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06482093 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067364133 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069134114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069930289 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0688666 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072092221 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063062808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076643936 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076950755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070223192 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068774103 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068473031 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080365437 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071018714 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073026683 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072777704 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202763778 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082404269 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070953536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075140914 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082018536 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071239276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065474817 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076444737 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069126879 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06913509 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071107518 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068496949 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074282219 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079577897 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077209045 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064021092 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073573079 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069202662 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070176795 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066445569 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075495625 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073565738 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072473801 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078016999 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07207001 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070945081 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075283447 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070570266 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070741112 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072144725 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072924706 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071243696 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073065628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069596794 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073890804 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069914013 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068795969 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072307778 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070839423 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071873065 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075488065 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069593084 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070788904 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073302157 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070346025 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071087768 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070909913 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06962797 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073947386 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071369745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071024161 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072716349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06484448 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078110994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070227261 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078378738 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07136973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067066124 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076356721 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073017458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075091058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070767971 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071505423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070897509 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070485286 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073604507 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07749099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068601325 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081099149 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07815855 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071575356 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073215994 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07090502 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07223617 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06946176 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071589407 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070426442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071105303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070267039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075397485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073531629 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070783957 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072294798 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070960869 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071128456 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072439098 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064749861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069922423 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070222255 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072254975 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079935783 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071099974 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070020128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069929878 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071087712 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069983263 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066947363 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078431287 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078564842 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070970358 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077609053 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06952572 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072096943 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080363398 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063963047 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068024711 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067436776 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067569486 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077378233 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070167563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078618782 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069329095 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068400092 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065874519 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069450212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067339347 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063045161 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066638205 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073003171 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068191678 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068328011 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.19791493 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073531901 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072680368 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081173997 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070293356 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07201397 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070656719 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068192315 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070667044 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070313056 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075296617 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071727199 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068917169 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067980434 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070477522 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071362074 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072228258 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071548677 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072525923 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077994684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070709446 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074508006 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073371376 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065670555 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074465105 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07084417 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069821544 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069115853 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074932907 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073944403 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072138679 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080044586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070335976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07161256 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071101757 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067923018 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070318876 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069495883 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070644624 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069684874 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071777271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078074149 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067936651 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073647737 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070333144 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07162511 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077330068 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070949531 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073326665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076219915 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070907882 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072692527 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079257712 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074232922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074401967 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071050237 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072226468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076246681 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069989001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078186698 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071098792 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071403415 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072847056 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068437399 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070650827 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07035104 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069295078 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07672847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070931236 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069458585 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069476569 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067567444 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070158161 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072703017 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078335524 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072400647 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073590065 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065018247 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067122907 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070356669 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068186317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071636955 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073460293 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07612069 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072557098 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071143144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069168734 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080024691 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075957053 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073998837 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06875047 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074085587 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070950866 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073220855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072041037 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070700734 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071698788 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074542997 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072095136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070528997 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077501442 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073742134 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071147653 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07195368 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070726955 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070133465 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064517572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069700155 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071806669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075395271 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072227241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069650946 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079909767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067364296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069522716 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071766078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067879315 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073704436 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063996692 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070848996 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069580939 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06988928 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.192983436 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070561429 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069686968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073379078 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070640358 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06502131 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081366589 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080402165 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073680845 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069694285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068938389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065469291 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065686536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070192611 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071518192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073215986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080889685 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070226919 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070220718 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065573136 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070575905 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074167934 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073598322 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06786227 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066051994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069782057 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073839819 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075887609 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069972165 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070151065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074033474 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072671856 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067620597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073675356 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06726329 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074665691 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082600741 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070510185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07245812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076044472 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079230017 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070643876 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064728153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070465001 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07373898 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071719145 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071371799 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07084058 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086197073 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073905362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069912048 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06935245 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072840879 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070219236 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079045563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070872279 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071051644 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075360375 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072344307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078865141 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073542377 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078658167 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073511571 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073827998 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069896683 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070398702 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068159393 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069819429 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070615936 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070866618 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074458213 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076917341 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069243865 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080841607 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079392868 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072076059 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066921534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069922224 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069722143 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065077912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070819373 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068043759 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068399458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068633686 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068959357 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07161313 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075404157 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071333484 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070880576 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070201306 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064239189 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073427907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072628603 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07150331 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066761895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070160413 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070801993 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07435188 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073286554 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06820911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07174262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071988293 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070551644 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065764636 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076825703 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069095715 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07220762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069215008 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070149704 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070331502 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073316139 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074012129 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070519654 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071589991 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073083121 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070917279 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066122234 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066297033 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074421679 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066961954 seconds)
  done (took 44.882466557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105012827 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066852764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065842261 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065494869 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077211884 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066634236 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065227604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066775337 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065992355 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068641836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064834055 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065163657 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073347529 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081228934 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076237605 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069541717 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065071447 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066699458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06517149 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065881839 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073663859 seconds)
  done (took 2.816376731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077403421 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080845637 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079729966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085488451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074187263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073661645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078320195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073538563 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081559774 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07583829 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081382471 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073502199 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075553496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075892631 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075863357 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073590418 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083694153 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074032706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074015663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078423751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074008695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07806724 seconds)
  done (took 3.003325012 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07047117 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069534655 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071312649 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064457746 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069560955 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063968166 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07249694 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067565116 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072279849 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068995615 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068701531 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068673153 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07156142 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064542084 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069515865 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067353432 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110648706 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072846912 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069260605 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069965649 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064504439 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071607889 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0652064 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064808498 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069185197 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073781427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070191351 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067578319 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070119931 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068812783 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06932298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067809443 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07131722 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069671563 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068751423 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068560752 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069000306 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069533948 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06485558 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067976438 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070728174 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065079417 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070305507 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070688802 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067475615 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067630508 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072609547 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069549508 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064379712 seconds)
  done (took 4.720764935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081950607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114275938 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07056454 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09314777 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082553415 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075890823 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072994218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093681786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066846615 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067200431 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08451545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082042921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068584643 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073527557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076213919 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069125295 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070402755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068032827 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072402 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068124453 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072919977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075435376 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082851138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081156053 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072447871 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06783908 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067955262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073105889 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080741106 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072816305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073473028 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07392142 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083336493 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070564322 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068257301 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071620946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084502917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069063559 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071620593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066446609 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07122297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072812778 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075420006 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084912077 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069324471 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07410645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068562728 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066296286 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080915026 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070992712 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076324568 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082729508 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07259546 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068982389 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073133318 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082914307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06856837 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066897261 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072771149 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080952326 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066605118 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072669822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081889849 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071021148 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076204913 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082007035 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074414285 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07330606 seconds)
  done (took 6.56035412 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079779805 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099073728 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087632783 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086683274 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079788166 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079238463 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079091695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078855116 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078979305 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082942435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079082562 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119082201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074123886 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081112161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078605797 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078929279 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078905044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078664421 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07978165 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07908093 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079395565 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086201733 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079075038 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086246961 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09062313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074994665 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079239929 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079171043 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08656189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078582648 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082410566 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078725863 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078789005 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085950868 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083197699 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078562577 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068807052 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078742551 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079351073 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078604511 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074517887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085907148 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078505217 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074370765 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078907825 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078450319 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086340571 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082666169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080715447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083306872 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079778391 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086420727 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07855895 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07893553 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085958341 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088815057 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086123105 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086434908 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078882029 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088349139 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086690494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089057607 seconds)
  done (took 6.419266296 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087006807 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077372788 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085131594 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064695434 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067293039 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075137779 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067553847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067530171 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076968641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07737317 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079233035 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074811728 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077848568 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079511101 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075714648 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077619013 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074837513 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074711656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077210954 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074870445 seconds)
  done (took 2.841305903 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078332964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086571104 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070201928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075836168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072229885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074932461 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072247847 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073018061 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070005023 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072287848 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079086315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079017702 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070266589 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074659794 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079180599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074373521 seconds)
  done (took 2.523626924 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087298519 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076665491 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083645904 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070319334 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070252345 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065614604 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068803173 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064769536 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065309324 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081319492 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069243218 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079510012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069119525 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068380457 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06584932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074948756 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065545352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066600168 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068604216 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08141712 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073033787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068070015 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072518364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069010405 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072182972 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073280402 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068655995 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069269137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065979491 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069500848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07195589 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072414737 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06637861 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067017221 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069054002 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066133658 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06964815 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069462552 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074234666 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069222561 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067586523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071314948 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068808501 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071257709 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065795301 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06971805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065621836 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071182757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067151111 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071748208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069204013 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071724233 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070882785 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076089858 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072718816 seconds)
  done (took 5.213932233 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083645062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073147983 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065274925 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068198213 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073158326 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070786597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07271104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070194377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070627076 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067465388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070594343 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07198851 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070552594 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073163453 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070870196 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072801983 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06524589 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07064302 seconds)
  done (took 2.614743357 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074956484 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069543901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076443641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069400164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069836131 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07185221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065029564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067998793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067929707 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069201734 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069419466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071956978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070033096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071749622 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069562966 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069831685 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071642361 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068011802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069276089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065037431 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071213999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068252174 seconds)
  done (took 2.865926583 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098318107 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086521576 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146195606 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083520881 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088831533 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074957 seconds)
  done (took 1.908068189 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094756702 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104431867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069868826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072980165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078898255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074138044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074409475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073554504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081785396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079195548 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073617364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082101582 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082078459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081257881 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079465888 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079375608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073363479 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07326445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069512023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087019537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073646557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082266474 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074397995 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073631293 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073717018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080771199 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081711654 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078991165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073409191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081667995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079913275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073730021 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081708262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078835355 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072883412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082139991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073803936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086835802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079635472 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080985796 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072375661 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078985825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081908254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078232989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081902037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073766919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078189294 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073938965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073870859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089631553 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079188951 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080871124 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079170882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082429177 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081369062 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088832648 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079429543 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080848518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079142876 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07958686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081303893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079373354 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080672965 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079511509 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079367966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081239188 seconds)
  done (took 6.556938993 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108667119 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070621025 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074593836 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079100266 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081497442 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073891784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074128123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073792396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073603642 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07093153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111832275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073876724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081018704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081055608 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073981882 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073838935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073983642 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081224644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070765923 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088781867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073585272 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080945156 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080960966 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081022839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079444651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079476173 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073753851 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073815954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073459196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073720935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078081624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074056217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081208083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070859945 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081582899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073845892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07346115 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078639099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073487681 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079627021 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081498822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086924188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073724331 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073910306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078959208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073799253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07374119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070767409 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073881423 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071371974 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079240853 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079656362 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079137052 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081253448 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074042807 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073325574 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073444604 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073867748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073488741 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079221503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081121242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073521619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088908079 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073554418 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073638916 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081166444 seconds)
  done (took 6.469236998 seconds)
done (took 134.073862591 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193190407 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172858026 seconds)
  done (took 1.690928813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071786181 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102888018 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080883113 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131408818 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069874569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103851271 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102714455 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081469413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070065642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070402921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069751323 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072231255 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13523196 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070346995 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070339815 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07302739 seconds)
  done (took 2.713375964 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104500453 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169874347 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106385321 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069210404 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10377012 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076648358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069062526 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079297547 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074678565 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068748878 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076569468 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074453918 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068841637 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074323664 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074172568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076091283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068775576 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076537859 seconds)
  done (took 2.851503363 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102342628 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095340181 seconds)
  done (took 1.541351336 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158383628 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137078655 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208169777 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.358017919 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164447486 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151935521 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147102794 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14601955 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117064034 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142205741 seconds)
  done (took 3.070225969 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104487574 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159535449 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278995833 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122985027 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077186967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09691373 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124509074 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081942604 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084059525 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083753093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084315408 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08048386 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104339115 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076838497 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078628471 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080570778 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108462443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076598325 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078877745 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079563483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105334883 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069555665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077283181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076475842 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080921505 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080756412 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069432135 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069877242 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079877373 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078407433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080116954 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095883895 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080861725 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110750096 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07528882 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111511592 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081083878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076529558 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079037087 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076949711 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082022325 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081234633 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076872371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080156968 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069864524 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080936577 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070091807 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069730457 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081687133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071402201 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080808364 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079761804 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110479743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070805466 seconds)
  done (took 6.18696187 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109025722 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112133415 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076155573 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11896598 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108715874 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076026643 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109647324 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102384756 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109937708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073919307 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071669855 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073810116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085622105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086184232 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121277115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113377121 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077069602 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074576384 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112399363 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111468899 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071900864 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103581751 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09819757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109128915 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070808097 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073973023 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071511095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073659012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079860451 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08137725 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073155497 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084413656 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088097436 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081709754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070865964 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071295663 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072240075 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082995717 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08354944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08210573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081818623 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071371951 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071696423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07383968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07365845 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072079299 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082705948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084182621 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08261289 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073210212 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074245732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074072335 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073454931 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083620768 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081565913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084884809 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083715003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07242306 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072065353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076840988 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084244102 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082474991 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082700458 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07330038 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082880875 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072153608 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083662951 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087509893 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07223028 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073770406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072176833 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073340878 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073545954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082207888 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081713626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073214957 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073313219 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07205319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083194983 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082958679 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072110338 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081076296 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071979684 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072427644 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073566421 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073381608 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08100796 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083044455 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073266086 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071950546 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072663322 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071993588 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070708212 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079871349 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081978849 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081346364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081089492 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072572399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081760237 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080968899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07283227 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081563372 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071054971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072858395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072115688 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080714154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079520051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081288015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07208655 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070784542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08005975 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082072334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070823665 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080079471 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082124503 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080868616 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070908737 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082927618 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070754399 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081432549 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072501318 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081465201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071208216 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081505167 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070986452 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070418515 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071082082 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081332962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073378528 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07134003 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072286438 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072486014 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080747959 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084104497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072800478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079097016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078685792 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071773634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078583106 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070200645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078899041 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071034467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071615867 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068885989 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081234128 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072341847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07055236 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070557024 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080083714 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069593077 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079827764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077854894 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069895032 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081403137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079609643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077472484 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080811009 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072022057 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070198061 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070480668 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070232313 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078150106 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079289875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072389214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070293872 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077747053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079564651 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069725482 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077960094 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078932925 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079113468 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069865446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070760322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080503168 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081642996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078110159 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078557596 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078045438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070248007 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077422643 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077975306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070581087 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08398638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070185556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082661486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078632515 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077328601 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078537658 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081065127 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080809736 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080255603 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082854302 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070342853 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071138472 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079355792 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069516346 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071213019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078149646 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071790352 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071074625 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083933714 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070102887 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079958445 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070161854 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079312238 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069288278 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071910563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319546738 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074337529 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075696398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086568789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07638963 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084712613 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086521452 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08378748 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074640941 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076748595 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085182194 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084853512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073934604 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074522697 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075668474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083640592 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083284135 seconds)
  done (took 19.257315147 seconds)
done (took 38.658449938 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222714334 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161644297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182483543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125246692 seconds)
  done (took 2.168443541 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123285448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10776953 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098389935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070247524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104939296 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070207298 seconds)
  done (took 1.982700101 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321856568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218836168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196362194 seconds)
  done (took 2.142553383 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217229198 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200826632 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463226678 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285563445 seconds)
  done (took 2.687576595 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150838011 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093307941 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0718012 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089791967 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138845422 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165339213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104775679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130796898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084205938 seconds)
  done (took 2.490784206 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154663854 seconds)
done (took 13.041093864 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.196049417 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.155223154 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135590262 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 0.159134474 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.237896708 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098172775 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084344741 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140806315 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081452896 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227091138 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.188472915 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087794284 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.179310343 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187842381 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083719585 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121411591 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078508483 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110322971 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078324635 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.213586826 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119357568 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08527791 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.10649617 seconds)
    (24/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.196301313 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213467397 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079070573 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.228846686 seconds)
    (28/309) benchmarking ("sort", Float32, false)...
    done (took 0.139314034 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157872839 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.163357132 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079134536 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070529613 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149065054 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.091203512 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079355431 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076995881 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080115398 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.170468208 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10804803 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098420908 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0780495 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082838022 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172569771 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146864057 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095373299 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085525706 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08138095 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117861579 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133505558 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163374362 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078240574 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.201953015 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096046287 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094399558 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097718161 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077800989 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14706223 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077810926 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17123906 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160832753 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.164113188 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.412003207 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069903362 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078147596 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10994613 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072211106 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077316014 seconds)
    (68/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06779304 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.225901416 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099788974 seconds)
    (71/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077275612 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212904261 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057348159 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187033545 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191169275 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20773009 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093924228 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082762603 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080427537 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.070893834 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097370994 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.26142031 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056464601 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.162067409 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083326933 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158283686 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079894872 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098814008 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203376773 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073894284 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070044268 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131799681 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203091204 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071081277 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095717896 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083557758 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195861004 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196632987 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077142217 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.113799239 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096810533 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054610567 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073361351 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054606842 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078617568 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.07089529 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067513972 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055802709 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154528433 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.097401231 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096918998 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156620597 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055612663 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076748976 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215835874 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.14543713 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079065689 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097038554 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077596241 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080528917 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082243821 seconds)
    (122/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054785809 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076649342 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090136648 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076366478 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203604974 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164582448 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058253787 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076895127 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168834886 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19017667 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054595234 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173084982 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078045274 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055158899 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09771286 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121803086 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069114017 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077653184 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068162727 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081490237 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076646678 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054658765 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10451689 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054813143 seconds)
    (146/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07785316 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162644662 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073540841 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083969887 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067855124 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.172017674 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077425218 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054742959 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069955769 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054491126 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071435551 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107031303 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096044691 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068492178 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094573838 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071624476 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056005913 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096323398 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068203882 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115545095 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074295741 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076906283 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054607868 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070755939 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093169892 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071399964 seconds)
    (172/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.171732116 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080580681 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054827083 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069144132 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077304663 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193333161 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0546991 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069183655 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115894695 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068815118 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079050476 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071857894 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055771681 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055964328 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066441815 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077641652 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069556162 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091667208 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053671716 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09192957 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115272688 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.248445731 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095404694 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057932219 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069436043 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139912913 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072613319 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057111006 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143487734 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070257089 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07316006 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067578118 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074312276 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055320101 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098685428 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174596323 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055247402 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081023868 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078396335 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058369694 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099115871 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069822963 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162831717 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109209943 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082804826 seconds)
    (217/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056401566 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121241368 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05428847 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069851636 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096564798 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077960554 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082004289 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076443011 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069779434 seconds)
    (226/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067743202 seconds)
    (227/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067567622 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07259648 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054900217 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06804281 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070232753 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076595287 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055500743 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146701613 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055258436 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077854718 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076600306 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055902322 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055553293 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055994433 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071008689 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093779051 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080193846 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055879939 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080324944 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08409454 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091261354 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07110733 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076982591 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102606711 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091971927 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054822235 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069409265 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05614442 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056050631 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.107252868 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071297233 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078082849 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054568344 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069410923 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069327418 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135763597 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076569399 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055527344 seconds)
    (265/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069759219 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078077575 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07861441 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054145197 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065697822 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054407826 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069360946 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065489131 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069556866 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06950576 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160678885 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070002418 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055826724 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072762161 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07427724 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069061639 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077501212 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092245223 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075051646 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055356267 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067714702 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055748442 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06831732 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054151782 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067946293 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076881849 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.115293498 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054624845 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189878372 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068873492 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156345186 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075790927 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054287703 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 0.149185806 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136086051 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071853437 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084206422 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054213466 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075154074 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069444362 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05411565 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.178374394 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.180325194 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055979554 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055609393 seconds)
  done (took 32.683700705 seconds)
done (took 34.101682557 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089031733 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097076389 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079152113 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097498518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08587206 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080344878 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077236021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082920033 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084780451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085755377 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082460061 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057914012 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078874815 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079382656 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078917355 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095643639 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083247007 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080141105 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077446144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068578704 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077170037 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069538384 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070753571 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057915942 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08226119 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075482599 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076093537 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077997022 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06955708 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070200071 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072996292 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078514691 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069187938 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082372329 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076665822 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077663526 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079263582 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080835585 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071256829 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069840448 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078342933 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069668494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077218514 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077434429 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075913358 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076218294 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077662096 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081361817 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09479916 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072008495 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078609006 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08038774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079390677 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077231084 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07352673 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076726889 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0741671 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095208435 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077573552 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071305396 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078590351 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078467949 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075414551 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076823061 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07694003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079154776 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080207557 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075045137 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078968627 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075695063 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069258799 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076952405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07354553 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070032775 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080084396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082003252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067970423 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076004933 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076815702 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075058578 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068805994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071255007 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072798953 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076073454 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071290644 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057986109 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073629911 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075909183 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068097584 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077926784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076777447 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077028497 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070747092 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080009627 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068343727 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074437083 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069673538 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070145186 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071027712 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073349154 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069507804 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071167586 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078670613 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070539561 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075981491 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083272041 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069644862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076759259 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06842117 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068109364 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08285701 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07857858 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069014994 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071168235 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067929646 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076447042 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068100418 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068705403 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068892416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069337941 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075558999 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069861617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070752619 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0759223 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08258766 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068987507 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072981565 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071150817 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068831673 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075420797 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.202889798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070377513 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072207762 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0673456 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071972806 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070158183 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077337596 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072147848 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077436127 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071822273 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078888058 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075534863 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075912996 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074795871 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068087865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0625548 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072500692 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071257782 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07125151 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073903751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071127007 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068832447 seconds)
done (took 13.101962102 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070528944 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145020683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10164479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09975597 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089348843 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070078877 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079640955 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103759261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071405779 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104891313 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09179882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090341777 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118920575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068848357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069686612 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07407679 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07093762 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.0851061 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104214626 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09174727 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119440581 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069113325 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096489841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093294178 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092156005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107566189 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070481008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07403169 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073564011 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096952784 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092763702 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07386907 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070372476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102338467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098188163 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08784222 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069968819 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08709971 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07031794 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069977235 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07133207 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103314375 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084573768 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084859739 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074391057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080318877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070757637 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08877317 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094423665 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082903912 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089863584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106126956 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072586288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088125886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068468196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090975352 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080866648 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072121112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070096713 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077942666 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069942144 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073600286 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084655324 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084264514 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074443422 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089433563 seconds)
  done (took 7.121056026 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087833179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096654707 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088349662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088367753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069314443 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070223102 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069878901 seconds)
  done (took 2.078256624 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071632308 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092657008 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093189379 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093043789 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085321114 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092685972 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079905903 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070660209 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092519586 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07141819 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09206022 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105296103 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073472226 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077717579 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094994359 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070372967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096061314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070444097 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073802565 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095334002 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072932344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100908271 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073689879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070731245 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084580899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070355202 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118990211 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075076437 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072133953 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073805427 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068354547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112487801 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084661977 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078464646 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070578902 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085444005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085307331 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068702074 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087645903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078939127 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084678586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070969373 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071225518 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06871964 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074855755 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080960157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071115461 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0707933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07300204 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090890981 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07075779 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084472289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073109806 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076314757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071582665 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076955025 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080841472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071126877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091358866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072040676 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08798297 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08686488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084725196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087143338 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073375776 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084416674 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08460435 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073106192 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07263094 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07368066 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087223187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068922704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072669808 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081225423 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072583611 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094782265 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094311572 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071931537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084362358 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070869972 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071263816 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070518155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094172606 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075787671 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070492802 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074817216 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073941971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068590385 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069332958 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074684498 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06849747 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072155275 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073381771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073383009 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073249124 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087372702 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075732628 seconds)
  done (took 9.22350234 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072270527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071941692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072565177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070818659 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071558982 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072548703 seconds)
  done (took 1.955990401 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097777199 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073063603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083627471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076094754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109940893 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091131378 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091382703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081356017 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087503214 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082786093 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090972724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091614486 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095813448 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075687319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091196483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075164907 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09122911 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078144033 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082172452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076370109 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08953283 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076148047 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076143702 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085644614 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079472445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075331458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081662681 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082853883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082696221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081785728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075805097 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079789599 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073834227 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08118637 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091246972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074475498 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075505168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080723218 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075285473 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079021317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092010917 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076121372 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077476308 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080883135 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081617773 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074431652 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08055864 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08313685 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090995075 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080519528 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080393762 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075175217 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078826029 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080825261 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074416401 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081284433 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08072886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091003091 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076544377 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0742592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072290742 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080126204 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080808536 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080195244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084315857 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080628168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074110262 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075998073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076447548 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075154145 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080922466 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072413115 seconds)
  done (took 7.370611213 seconds)
done (took 29.2427609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545454817 seconds)
  done (took 2.038727595 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635062118 seconds)
  done (took 2.152499901 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.505267485 seconds)
  done (took 8.022638493 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403682537 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510930367 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.754818869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138690609 seconds)
  done (took 3.365084053 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731789493 seconds)
  done (took 2.256340765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233843385 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219763613 seconds)
  done (took 1.990233889 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383936497 seconds)
  done (took 1.897403127 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.148524863 seconds)
  done (took 2.66632268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266376144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183831373 seconds)
  done (took 1.970902049 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489984168 seconds)
  done (took 2.007792836 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.877783714 seconds)
  done (took 6.400924432 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220660435 seconds)
  done (took 1.791934768 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243455123 seconds)
  done (took 1.766986184 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765810926 seconds)
  done (took 3.290714529 seconds)
done (took 43.140855476 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086113924 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088503173 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089089892 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084895357 seconds)
  done (took 1.858901835 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079942808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076273682 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079172933 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075432496 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080376022 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075957826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077499026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078853714 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075843601 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076010542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075563927 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075501118 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078354377 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077418836 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074161016 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078871072 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079587739 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076102369 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079177708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075672514 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073935286 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078280219 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077865578 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075106514 seconds)
  done (took 3.37664913 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081497676 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076436064 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079286211 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075442514 seconds)
  done (took 1.844279144 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081157863 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095429929 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093125372 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082133946 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095912596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090260397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073000611 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072158416 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073978656 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081298478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071425849 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099110906 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091932894 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081460077 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08300428 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06907388 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071353416 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090949656 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081901757 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08235825 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073568397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08140407 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071331904 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092131674 seconds)
  done (took 3.506343236 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089952534 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109696083 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084593114 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092773271 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09633356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068945995 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091334884 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094841781 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130750621 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068662524 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074227086 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069298067 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077182512 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068716818 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084772217 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112012485 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116078467 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072631961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100987864 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068981024 seconds)
  done (took 3.308506654 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077089504 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073171367 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072039651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069571399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081344099 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076368474 seconds)
  done (took 1.987438999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071695808 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071666882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070712974 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070382794 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076259765 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071053886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06919479 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071466359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071344398 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070682998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069795116 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069179763 seconds)
  done (took 2.387142304 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204768834 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071725879 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071958915 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069009969 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074580806 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069524571 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084605477 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071725962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095687821 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069934489 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070259461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071380545 seconds)
  done (took 2.560505181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211396126 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079758308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242904702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155657202 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114237288 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119766998 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116939104 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117187568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145765869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10425889 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170996924 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170982111 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111209582 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140865408 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092973848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103180195 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158045692 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167298729 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110665003 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171399297 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149815623 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13004532 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151124401 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106097248 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109571031 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126156139 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07509831 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083809324 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175925937 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137399074 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148420794 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115484775 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096154325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180444668 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176975586 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14533297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151935958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088338388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106461755 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138237845 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205425298 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092985542 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166921558 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11268797 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083052034 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134170387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120124935 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121123747 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105409439 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091728929 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145019043 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180879247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136394137 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088755384 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124739423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113182452 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113829078 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11395669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17963049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160105908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126791216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073061132 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109313606 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150992281 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132693106 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108807365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124365908 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092459624 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134028891 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153342013 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122570493 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142876964 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117539029 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089878641 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118657193 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139295102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126511716 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159250531 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123801433 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074356876 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123146596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101846858 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081637555 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148966837 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07666045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17304276 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100378471 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106945399 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126528278 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109765371 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109830717 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157945478 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144271986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10243564 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.316847627 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111768378 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126866486 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152267251 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091914364 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114546787 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121837109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0829913 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142423205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080734759 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129426234 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078668012 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129102513 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134586738 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081880408 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127743476 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108706439 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103655252 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13919102 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163314012 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092527003 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086079432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172988796 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12774832 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107361573 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148231368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160277932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103626223 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105120104 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155013121 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184134441 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093609459 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16782371 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111295003 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088513268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092207533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127623298 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115934027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127393546 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085250738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122545777 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173172803 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078716447 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100421661 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137695758 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082940106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08458245 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108440675 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107873543 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099259592 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103897141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106018288 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139520573 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127427899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108373514 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128150805 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2442189 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177003784 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091309266 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106174275 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108625424 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073574292 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139244889 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159984771 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083311232 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168431589 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124831253 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121155923 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121526933 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087320353 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144309572 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083553137 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073937576 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149391759 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113135848 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112947586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153117822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119747252 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129327302 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123808326 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135517566 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134400183 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132528553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109131221 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091829266 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11440968 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130396868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076474856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093993027 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083088995 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108254458 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098953374 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087007694 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144831577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13006562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113465961 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114825871 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100019023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149436966 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079556761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132303297 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12358013 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100055901 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154627431 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155326291 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135345145 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10235432 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14108982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073972635 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077335311 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091577492 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.27034175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08673569 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087771629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119242267 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150568063 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132904376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141605446 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127610172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124368828 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158801269 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073025817 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124361197 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149793578 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124368581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107488659 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094268767 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102807182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146172901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111550084 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185569802 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115797794 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125638223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155683042 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104317013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082841725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10582509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137843592 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107195256 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145713449 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102576997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091257832 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112244824 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077687181 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101709011 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130423153 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121400581 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137033626 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118515164 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13616154 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080768532 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119343045 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124883268 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124696086 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067609796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123026557 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164215509 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098475001 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12084546 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155919256 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08229556 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138975219 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178031407 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290614835 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090527501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113415978 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124439244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131913382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122507889 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144957751 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112400864 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139859735 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114287848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088704696 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091984296 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101934319 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108848414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098964814 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10833582 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118519732 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099300177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136687463 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106757754 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113602971 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119759211 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103060221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094601597 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099792675 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17867194 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120871948 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173892016 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102629305 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145895634 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166313995 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077923009 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082110952 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081485104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143424248 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08731053 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133099144 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111371871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121350368 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126878861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144988445 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098426114 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071741992 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113438068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136464641 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128347729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101957541 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107200536 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1661254 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103792232 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082878001 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117082351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119897136 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106505628 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174171934 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064710656 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11019694 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220792831 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084220658 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130983654 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157359002 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083005919 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106950392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121974276 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119008955 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13150879 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10392497 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112812346 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131054444 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154932365 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131718892 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0931348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116152234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131730381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158291227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10896889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100519427 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175557709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153954655 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161928409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090814424 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1161462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115740589 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111220818 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139824669 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086484365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166065493 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085157174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140151851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106331568 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09161344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132296104 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113009846 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091689037 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150305654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120826389 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086177492 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082038137 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121432397 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122731764 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109794827 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078914396 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141392404 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07708514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134748164 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163503818 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083823194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107932438 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099429705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082742539 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252627246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106223064 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091063596 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102927558 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174568942 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089271569 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151987646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137012241 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115476658 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138281198 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10546702 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643786961 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081997808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154701853 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11940668 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178120951 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103546862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120269493 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111656979 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124879382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148343675 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106379728 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187783208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13574933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118261582 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082633067 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104970255 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106848613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091304098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11129574 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115683603 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11760353 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095761907 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118905667 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126422614 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084980481 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0993008 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158313431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119785197 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147283602 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144106285 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089390054 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119992172 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140584259 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083148984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123564713 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155960785 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108990553 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10352007 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084186571 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103822804 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305722767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076866462 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164421134 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122691106 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112766785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114850249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116910459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134335994 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111253872 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125509337 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095833476 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111923538 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116826636 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084825248 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082886649 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111371462 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116306123 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10111859 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101261691 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102335237 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152830737 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075675879 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102431089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11905445 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146577082 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176980529 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091536732 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087122347 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121227829 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117087737 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115380212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124523967 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081750027 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084903521 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082861811 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081325888 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112004551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115769378 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117938097 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113534831 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166177771 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086943298 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240524367 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09859934 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108021188 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073092789 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081582581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099354382 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101423268 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110866587 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114801387 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163142389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099052892 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093134837 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094068784 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077544439 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086290762 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13120114 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112927539 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264720795 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105724864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066413404 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111307391 seconds)
  done (took 60.538362746 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111613985 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086340524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098754051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147729744 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126032349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204786163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156359375 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193185189 seconds)
  done (took 2.793650291 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071817517 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100100756 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106750711 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086599589 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070394746 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073137872 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234366225 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085314597 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069405785 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099830387 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081569858 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072371247 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438485052 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069196573 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07134778 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065115153 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070369637 seconds)
  done (took 3.527872422 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.403974436 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626379586 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360507072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079249294 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.897681569 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092770438 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.136119814 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136016233 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080656939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524733446 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412607081 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131517754 seconds)
  done (took 18.555328014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083717221 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077620502 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091971783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092760536 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080959911 seconds)
  done (took 2.093909902 seconds)
done (took 109.898104911 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08446707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.614961427 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055957065 seconds)
  done (took 2.368374293 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086659111 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089044245 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08834636 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086340025 seconds)
  done (took 2.028844385 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077404348 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080788269 seconds)
  done (took 1.831057247 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239031306 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169088465 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100291533 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086167896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082515235 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082842269 seconds)
  done (took 1.928531401 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07534736 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078184136 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07599571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079544893 seconds)
  done (took 1.982106562 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080200259 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054610659 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057449274 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060359632 seconds)
  done (took 1.926801411 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090110227 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082715288 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081380739 seconds)
  done (took 1.928853581 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104729076 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090545078 seconds)
  done (took 1.870561377 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085322404 seconds)
  done (took 1.761626015 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097687273 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104954068 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136184903 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114087337 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143002891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112264306 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087934957 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089361069 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079739387 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089539818 seconds)
  done (took 2.728826523 seconds)
done (took 22.61493896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082507887 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371778643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363859582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094015329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671150804 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359779466 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973636507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09600421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118869423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070510834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08801274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653760658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964270054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326868531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951726618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323468932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651207881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071303375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070856812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070508167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958790432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070492667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071395838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072025804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651981547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376020286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071338245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322674697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070952242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073045787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358713721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071965665 seconds)
  done (took 16.204524494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074241514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124414981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076566778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088131314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072989896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072675234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073963421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072180533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138736158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0712593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088233699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071237342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075164825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071377133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091368732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071408061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071884957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071952453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071731991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072233043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090067553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07049736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071188054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071888022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071626294 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083719207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071402686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071318326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071659469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073409049 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074535432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072011643 seconds)
  done (took 4.201532826 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118287164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128694307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076608852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108304287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115026438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072859876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146691514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096742188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130275369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070889865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08871319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071698633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105848983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071873113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09219146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0718181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072004398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071368556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0714912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071753596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090886894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071332514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071543941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072080725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071874056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085574132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07251091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071916397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07218836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074073683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074857293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072070312 seconds)
  done (took 4.442003163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075292895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078417566 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08651256 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087348178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072589848 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075524752 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076420774 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072605818 seconds)
  done (took 2.315199876 seconds)
done (took 28.842145295 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082866151 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072344686 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076575618 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085298807 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076969197 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082001024 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069854185 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078727568 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075570919 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076421014 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078213331 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070082293 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074027496 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069720245 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077037473 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070729814 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083029926 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075320166 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082284469 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082941291 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073182474 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076705537 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078919548 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082476336 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082583141 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082363322 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08078576 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076320898 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071972583 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074025686 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081044294 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087401315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071661123 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082705124 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070936117 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071741517 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075308006 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070789659 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082153632 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079566594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072759143 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079378826 seconds)
  done (took 4.914851776 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091753922 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096074469 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088736447 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064390206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070021465 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069623667 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092241324 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062723492 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062523454 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091711625 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058815095 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062362857 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066200992 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056841282 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063868588 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060003781 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0648405 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058393274 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063230448 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062845257 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092931852 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056603023 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080879288 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066852329 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058827779 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064901878 seconds)
  done (took 3.525227683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077098712 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088070096 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093237803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134492732 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109268354 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083406898 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082396136 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098787581 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092372706 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070363199 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07428593 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.0960374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093150872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077656068 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070684013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089941948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086949772 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072605062 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076893807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09770164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091146006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089305132 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099423779 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086776572 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069958211 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072827486 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074547129 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084841572 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073865345 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080818487 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074089512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074435503 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07316084 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082984902 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073838599 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072392917 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098828833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081133603 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083165516 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071202725 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078906551 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071674662 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096298107 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131478117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06994523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077306111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074853653 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081375405 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.081646478 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09135054 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086840473 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070795213 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074157426 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070857127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070276147 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073643428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072211646 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073228649 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07939838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077457245 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09572553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075294708 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086989345 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069980599 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079014089 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070291164 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071698627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069544371 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099281364 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072331781 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115337325 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071835286 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071919143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080133867 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078721524 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077220214 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072287714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087990579 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081138065 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074919517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079123219 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075082693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074721034 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09454865 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073026955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072450738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072494557 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076653616 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073898531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071972466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084213354 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070231753 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073609369 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088278288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070862521 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07176758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076506226 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075496783 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07028069 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082957941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075715406 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071793347 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081501108 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071694034 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07385944 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083768027 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077934731 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070551695 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075390894 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077483995 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07164078 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073400049 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073121923 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072559285 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079728533 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07792206 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075065971 seconds)
  done (took 11.090819124 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168737229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162358534 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073682451 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152790089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079548484 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08277311 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155806204 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098544209 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071219073 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071510521 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072428743 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114521968 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109747306 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120551191 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081907065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07092956 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088008821 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118652015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158010104 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151935025 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088272543 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08116102 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073198358 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072080586 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073622467 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081749889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089323572 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082156288 seconds)
  done (took 4.570848889 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084307548 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10906199 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077777085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094979319 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094538034 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071820065 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073199067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073155995 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085442713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081637729 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070730156 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076387588 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077363683 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074004408 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071901436 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078469861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078553635 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072589399 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074617103 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076623372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082183307 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095654149 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074657955 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070131434 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076177095 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070526599 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0671451 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087564799 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071593836 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099188628 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069042695 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076572491 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086405544 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0724858 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071400787 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071271791 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071167338 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070765676 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072745604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06962281 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069803525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06062962 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070329048 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082436976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078843713 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060229534 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076478519 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077362728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076575339 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068648423 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074240632 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074316742 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0746178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07926633 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075817524 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076799595 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07269654 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077784851 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080594772 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070854908 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067954874 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069985724 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076063863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068186386 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080319613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075682643 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069743767 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070670778 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073917464 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078435592 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071148997 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076212876 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068927084 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073455932 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075785347 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073165719 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072308911 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069626239 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070662005 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072113081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058880163 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071584139 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056313775 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074115241 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069024583 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069376784 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071238806 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076071966 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082916724 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072275175 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076858652 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072348342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070160413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074492773 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063125137 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073724192 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082666465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085987528 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071665509 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069070846 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085042552 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075934871 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070396776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059080294 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075462237 seconds)
  done (took 9.585971273 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095278283 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07359476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087694816 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093590091 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091137228 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078668158 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081016441 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072297305 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086973267 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077197699 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080345637 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071220439 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081619126 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081148267 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073545733 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081456797 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076270549 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088119419 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086539654 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071864283 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080200912 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084122227 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093927538 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085735077 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084118765 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085361017 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094075954 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080843728 seconds)
  done (took 4.052635386 seconds)
done (took 39.424197011 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.770896876 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.033203863 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777478772 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.159101516 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857215442 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.999032791 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.872685552 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.783300358 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.037688083 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.806012526 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.020780079 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.941537894 seconds)
done (took 65.762911279 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.820162893 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912767725 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009037242 seconds)
  done (took 5.627743325 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.977418775 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.335993716 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018063094 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767850246 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774796034 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.087903875 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575174689 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28823253 seconds)
  done (took 30.554136095 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.950136303 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.987558616 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.47962068 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.501738014 seconds)
  done (took 15.680377472 seconds)
done (took 63.447748915 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.790451737 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.808377989 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.782538599 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.753337888 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.831656366 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.777733121 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.041827229 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.787110059 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.770156575 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.763465905 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.772336634 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.242623106 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.775567263 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.036138228 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.76873729 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.780317189 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.837884548 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.223488905 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.929770237 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.777006124 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.779296784 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.826588799 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.770541239 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.781601269 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.819341457 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.773218339 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.149460043 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784310477 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.600199371 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.777886225 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.822456474 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.271670846 seconds)
  done (took 204.112626482 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.772513383 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.714734316 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.804922319 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.812771386 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.163973236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.954244561 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.87616783 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.205663758 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.777929777 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.802245024 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.005922278 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.773280094 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.011726885 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.772198064 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.809988958 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.882219381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.965263097 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.011872239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.808086406 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931678799 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.80086579 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.813767564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.777120481 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.972519981 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.814217459 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.789504088 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796042375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.794933043 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.973516629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.949586456 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81991486 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.778466538 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.968752957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.646165971 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.783184016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.777497469 seconds)
  done (took 169.823069635 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.956593232 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.774196544 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.773110166 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773510566 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.780845589 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773358784 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.900779028 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903046367 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.393072765 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.507496788 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.829364415 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5930424 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.774620883 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843230435 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.787734595 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.77512218 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789222057 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801138561 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776072393 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773814548 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90059 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.786837537 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.899061533 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781786247 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.777250395 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7803377 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.145602322 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775031274 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780322771 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.01625953 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.775580201 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.775529364 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627297284 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.010618772 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777419314 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856785396 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.77487504 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.77769078 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781348266 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.777969908 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.993411066 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.775662013 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776747846 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.777141172 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.78051446 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917275963 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.77853068 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897147091 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78001782 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267063492 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.778581024 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777385346 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.748926038 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.389665205 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779077748 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.775446518 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.778500031 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775905709 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778093399 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.78318175 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.524686099 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.779049658 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.84862261 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.778614741 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.779643921 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78400963 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.778620439 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.012221876 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777928544 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.427061874 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.828992052 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.908945489 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898547643 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781891574 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.842770945 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870970215 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.77787028 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.77726686 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776556625 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.778683408 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.858709688 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.777561016 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.903711081 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.785336273 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.779335651 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.828877395 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.846809209 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.778845702 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618742417 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.781723251 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.778164855 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060072296 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842961528 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.779099112 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.778465444 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778868269 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.903380374 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900466934 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505183682 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781758644 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.544623743 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78027103 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912961734 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778863852 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.925690192 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.782168879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860790408 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783693306 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.78031665 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.779420594 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.810531803 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.781277504 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.839807705 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.778923637 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.153555912 seconds)
  done (took 403.826292218 seconds)
done (took 781.478322431 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433221064 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.396370969 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.499736809 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413499571 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395229023 seconds)
  done (took 13.854000908 seconds)
done (took 15.568770055 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.869009417 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.874457307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80509693 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.871340427 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801401391 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.871777538 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.855398665 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804427889 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842315237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.806504389 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848395035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806505431 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792601671 seconds)
  done (took 25.565411856 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015297955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009242015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.851665749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.042128112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831063874 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.010663328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942846257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.934918989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933576462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797867478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794476492 seconds)
  done (took 22.882628948 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.011734378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015458646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858694633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015358657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.832605214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.010824692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945114442 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.937190395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933407205 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799040426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794959119 seconds)
  done (took 22.872115425 seconds)
done (took 73.036228213 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.789843231 seconds)
  done (took 3.50752447 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.817594273 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.983668211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.797170342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.794413522 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.789978216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790814981 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793051305 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.790191356 seconds)
  done (took 16.276482958 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.790436452 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.790208831 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.789636619 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785887226 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.789556985 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.788708788 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.792175971 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.78733229 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787433699 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.791163073 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.787174608 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.790728023 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.787712655 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.790263873 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.789943286 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787142495 seconds)
  done (took 30.344214673 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.78986411 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787403352 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788762091 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.789117624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786980185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.788123027 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789290217 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787741211 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787439462 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788017434 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788936393 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787527417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788852183 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787341253 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788246118 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789346279 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788946595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.789118334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.792464747 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.78843162 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.788677295 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.787939578 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.788376391 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.788846848 seconds)
  done (took 44.647834673 seconds)
done (took 96.492395657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.526151111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.684791973 seconds)
  done (took 9.931310458 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793572742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.792569595 seconds)
  done (took 5.372786795 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.792380155 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792066528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792303571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.79207841 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.793080459 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.79234953 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.792340912 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792932773 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.79330894 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.792342624 seconds)
  done (took 19.646933673 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.794439651 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79467809 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.792299859 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.794454487 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.794462358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.791857153 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.795164732 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.795809387 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.795390674 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.792755241 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795692931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793449753 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796323323 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.794181735 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.796528047 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.79294144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.792524735 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.793734912 seconds)
  done (took 34.018541096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.795029545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796592085 seconds)
  done (took 5.314794852 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.793603219 seconds)
    (2/7) benchmarking "second"...
    done (took 1.793713392 seconds)
    (3/7) benchmarking "month"...
    done (took 1.793101645 seconds)
    (4/7) benchmarking "year"...
    done (took 1.794076393 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.794130829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.794568056 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.795028529 seconds)
  done (took 14.282344193 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.797129799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.954332409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.023683129 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.434234342 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.797088507 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.799937769 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.747383124 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.801415752 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.802620608 seconds)
  done (took 19.882539895 seconds)
done (took 110.1685932 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.617982104 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793326605 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.031092903 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.849305663 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.83930911 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.089073782 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.808304282 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.106198651 seconds)
done (took 42.859701272 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.794256869 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.188070629 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.18746396 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.818243972 seconds)
  done (took 16.919860093 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.778153107 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.311606262 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.832053028 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.380328743 seconds)
  done (took 20.061111726 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163912512 seconds)
    (2/2) benchmarking "read"...
    done (took 2.144239677 seconds)
  done (took 6.039771662 seconds)
done (took 51.542428601 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799333123 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.79785029 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.795486555 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.798535693 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.7959417 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.795245035 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.798916445 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.797977097 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.798754086 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.79562999 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.798889393 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.799702858 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799844702 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797348012 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797589427 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799476876 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.797046291 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797188062 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797135862 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.798649479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799226941 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.796203471 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.798801087 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.800071481 seconds)
  done (took 44.878222552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799105743 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.798338857 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.799311259 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.801489511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.797462968 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799651021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.801043414 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.797941779 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.799791589 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.801415728 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798279293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797089857 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800150689 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.797679626 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802103913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797929982 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.80033395 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799062698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80012277 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.797462949 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.801864891 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797940316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.798167948 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800700058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.798740075 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798431574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.80159168 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.799260738 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800672048 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.798995412 seconds)
  done (took 55.711224482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.806254865 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.808243757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.801401574 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.801200952 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.801536754 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802635424 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.801551634 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80133502 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.801515314 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.801529811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.801656465 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.802594771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.802122736 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.802480113 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.801742042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.801606233 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.80331293 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802096505 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.802630594 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.802950584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.80167097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.803636899 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.802756186 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80249094 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.802099764 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.802783169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80303305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.803153954 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.803394034 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.803128077 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.802870753 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.802751069 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.802689947 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80368449 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.802462979 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.802485397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.806708496 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.810306653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.802883947 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.803552844 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.802907641 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.80356987 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.802202087 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.803048365 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.803867651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803745549 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804263131 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.804091263 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.804868826 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.804020849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.80313176 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.803212477 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.804129418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.804146107 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.804513856 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.803615952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804460117 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80373715 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.803592666 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.803434737 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.804099613 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804541433 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.803992276 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.804108723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.805323412 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.804800917 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.804213337 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.803969023 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.803642828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.805733501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.803225549 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.804221485 seconds)
  done (took 131.576245273 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.804647874 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802243644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802498904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801284595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80209953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805073805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.80224613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804656305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802658771 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805858683 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802620511 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801819828 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806091106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804876945 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.802338887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805733648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802494857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805073662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806281822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805662462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804151792 seconds)
  done (took 41.419217894 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806304206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80565439 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.803919608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806130265 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803372259 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806421381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805686784 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805750325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806585206 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803693118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803513571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806890849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803259474 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803031957 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802696483 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804589152 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806355017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804029573 seconds)
  done (took 34.222193656 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.804063465 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.805162145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.806559844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.804139901 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.804137073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.806558581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804113049 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.807233715 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.807347823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.804278306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.806771824 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806775635 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.808096864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804057685 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807169429 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.804640513 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.808497227 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804940084 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808563027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805653928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.805206691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807903069 seconds)
  done (took 41.467662498 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807798105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809556374 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804635619 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805147945 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80559723 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808407262 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.808771781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.805423505 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.808330459 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.807705078 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80656975 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.808453359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.806486849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806335822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.806079392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804762601 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808023381 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805926874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808743969 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.80541557 seconds)
  done (took 37.875137408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808652584 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808574368 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.810818558 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810078357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810898459 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.809434999 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810360291 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.81066012 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809091904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81000043 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810341415 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809561818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809857382 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809826285 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810242083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809562593 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810040373 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810255787 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810555431 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811289903 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811316022 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811718217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810842486 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811021776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810846407 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81166518 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811807093 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810653291 seconds)
  done (took 52.426838679 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811445299 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810560711 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.807566245 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.808094852 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.808049621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.808204038 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.809063051 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.807779743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810591193 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808811026 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.811473044 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.811070304 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810624597 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.811459079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809908358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.810937657 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810795577 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.808280173 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809263582 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808179104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810562583 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81088321 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.811935036 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808454705 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808138758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.811230994 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808993508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809540885 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810607857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808478099 seconds)
  done (took 56.029967059 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.829525087 seconds)
    (2/2) benchmarking "in"...
    done (took 1.829725937 seconds)
  done (took 5.397935215 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.808976002 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812494485 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.812404942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809164151 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808557614 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.8129752 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810990597 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809031481 seconds)
  done (took 16.223870259 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.811312389 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.812778709 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.812961233 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.812501441 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81345389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.812944731 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819457667 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.813395157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.814208055 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814206958 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818894531 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.820200117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.816304233 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813704976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.812706744 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813791141 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.813423076 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.814645581 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.814506696 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.813495993 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814534834 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814272902 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814193228 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.809905851 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81553369 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.822664933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.817702591 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.814243417 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814045254 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.817766854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.813376769 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.810472565 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.814886068 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.815202746 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.814885769 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.816457475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821640681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814667822 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.819533402 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814711708 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815453806 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.81116113 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.816936792 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.815182905 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815223241 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81413207 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.8160219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.81234729 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.814732568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819336177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.819757702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814941981 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.812245269 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818094378 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.816701309 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820519443 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.816302751 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.81885267 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.823365375 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.824662908 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.828573558 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.822003228 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81686822 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816885439 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826342699 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.8372429 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821646399 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.812922396 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.814821239 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816159847 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.822296492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829232413 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.825484449 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.817245684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817259552 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816114957 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817836282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816865814 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.823436054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.820054437 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.816326787 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81710162 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825765837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838459932 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.81671871 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.817903246 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.817047956 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.818078843 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.818287703 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826356345 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.818290701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.817382898 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.817418858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.818276927 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.818952826 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817697344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.816597644 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818107586 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.815835916 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.817559411 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819267976 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820450589 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.82575513 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818253493 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81780191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.823036083 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819080211 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817640118 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.824203743 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.818165773 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.817434832 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.819138216 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.824807206 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.814948237 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821240836 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.826225281 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.819651035 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.820097837 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.818791383 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.819095685 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828100409 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.844152181 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.8200428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.819390561 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.823923022 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.83014912 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819870379 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.822104584 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.821073076 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.815992172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.815842168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.819865816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.818673787 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.820965537 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82030704 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821655749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.81689077 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.818988877 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.819627361 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.820804578 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.821092953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.819874103 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.820406857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.821826655 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.820376473 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.822026202 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.82615636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.820400145 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.820516067 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.82182946 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.818890683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820832065 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.821076578 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.82231884 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.821246398 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82028192 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.820536965 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.821404796 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821058835 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.819850341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820443908 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.822161946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824389437 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821812861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.823516724 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.820297985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.818729562 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.821925023 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.822315377 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.822944959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.821973645 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.820377401 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.824200652 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82928629 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.821246448 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.821876602 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.823829032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821374195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823430324 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82254546 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.825022687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.828727748 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.823592922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.829335278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.822825106 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822152796 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.822006645 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.823007912 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.82218477 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.823078766 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.82588668 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829217906 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834848421 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82990806 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.824074438 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.82622232 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.823950073 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.826507373 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.825962306 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.824264625 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.823129278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822622418 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822304266 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.823055917 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.82347842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.824717721 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.821967857 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.823301973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.823694355 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.823901743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82374173 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.823942831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824115351 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.820921358 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823596812 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824593126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.823610462 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82076893 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823556335 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82342074 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.824227351 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824918443 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.82948781 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.822290727 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824373806 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824500085 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.823683552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.824306462 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.824201752 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826530729 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.825085574 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829779978 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826417145 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.82591225 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83090892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.825030514 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.824684556 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.826899616 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.825320277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822356757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.827743828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.832502955 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.825158435 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.826036871 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.825718216 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825231736 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825711813 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.831360911 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823453929 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.824720385 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.825233429 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.826167136 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.821843915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.825875996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.827943814 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.825712202 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827126861 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.825633907 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.826092639 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826555072 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.827266169 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.826553984 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.826025417 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828042595 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.833819432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.831365421 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.826078314 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.827373949 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.826181356 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.830019031 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826333376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.827741273 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.825941033 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839432095 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.833610597 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832149102 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.827969731 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.827267216 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831780854 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.828564097 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.830891498 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827177059 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827952773 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.82765864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.826974144 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.824450189 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.828147174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.827873365 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828047224 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.828705788 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.830637646 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.827691822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.826761277 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.828633619 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.828578168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.827636361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.827071219 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.827717193 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.830095656 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829270043 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826127956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.827634846 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833787855 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827577403 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.829008936 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.827269789 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.828474847 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.827439613 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829853518 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.828752567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.831457697 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.836733549 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.831217238 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836650423 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830839687 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837410844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.829112541 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.831542094 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.837049632 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.825692783 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.828052431 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.828557927 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.829530638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836228799 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.829429735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.83043915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.8331837 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829709666 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.829551725 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828982563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.829266727 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831279776 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.829932864 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83668452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.831318762 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833043834 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832647213 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.827462979 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.831105203 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.829621077 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.830195098 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833104652 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.831261531 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.831257889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.829569991 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.830442553 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.830532051 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.832934649 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.831146273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.828085489 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.830572867 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837318996 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.831255314 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836113456 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.831622562 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837719164 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831468786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837848192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.831715551 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.831454482 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.831768998 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.832266881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.832172184 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.8306449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.833642106 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831546138 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.832115198 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.835122332 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.831911763 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83365858 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.830816769 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.832639653 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.831706145 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840607372 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854252626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833290447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.835553393 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.828593769 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.83302597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.837062014 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.833469537 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.830717619 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.835937767 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842938056 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839716761 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.833523341 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.833274617 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833720795 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833209914 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.832811156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.833480832 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.833365944 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.833009206 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83451085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.833486499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836616829 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.833828454 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.835254098 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834484222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.834671723 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.843297441 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.833932599 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835390393 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833715315 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.833332153 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.833450823 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.833948452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.834437875 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833711037 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834250282 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.834346811 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841324775 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.841635694 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.837992846 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.833715843 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.83431214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834887496 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.834717603 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834981522 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.83454365 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834962662 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835195425 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.834564221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.834656145 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.833073993 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.833936875 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.835113383 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83510335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836586335 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.842839474 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835202032 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.83246374 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.834844775 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835363126 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834581799 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.835324929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.841593997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83770945 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.845418293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.842529786 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.840021311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.836485433 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838622281 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.844034703 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.834325106 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.836398277 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837683849 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.837129318 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.836342132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838982003 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836269109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.843113399 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.836489567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.836513733 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843361746 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.837907181 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.837393689 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.837164652 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.840444675 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.837503433 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.83372439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.837632224 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.837786105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843567297 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.839686756 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837168339 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837635168 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.83635265 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838274126 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.840774002 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837058601 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.837584185 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.834179624 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837467581 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836852815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837654235 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.833847972 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.836953329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837580388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.841039567 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.844240507 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.834671952 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840978443 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.838716551 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.837907255 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.83869019 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837791284 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.834446898 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835498035 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.838205183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838618369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.838005663 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.840873093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.837916567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.839875997 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.839902433 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838567148 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841122058 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.848337648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.845802974 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.83671022 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838037938 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.83968683 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.841186137 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.840396244 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.839988842 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839106457 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.840196323 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.83898909 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.839694266 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.839226049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.842882596 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.856051747 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.838720877 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838650193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.840470392 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843270466 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.83998288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.836981908 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.839616862 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.84105497 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.842544212 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845743786 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.839412589 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845802826 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839544604 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.840645312 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.843605657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.842304952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.84906493 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.842850126 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.840791753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.839887054 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.844166677 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.854434127 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.839935324 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850405628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86786503 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.84079264 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.84197993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84127168 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839855369 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.840148199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.842734994 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.841921872 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.84243412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840618958 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.841496714 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.841320931 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.848367486 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.841671709 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.841224478 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.840654038 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.841041407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.842883732 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.837556157 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.84219848 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.841867547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.842009184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.842073486 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.843334776 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.842271036 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.854428311 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.850551401 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.841549706 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.842712688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.839484859 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.845016214 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.84544152 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851963041 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.848735752 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.842998183 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.84255647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.844098738 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843431066 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.839033074 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.843627161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.842255233 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842421799 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83955025 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.85439221 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851399893 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.846387072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.842821515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843492625 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.84248476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843311742 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843521541 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843055018 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.845290263 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844754997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847747761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.843375359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.843819385 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.845902843 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851199554 seconds)
  done (took 1092.33565991 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841136083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841740729 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840717287 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841577349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840905385 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840104476 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841335325 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840421689 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.841508946 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840096813 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840373564 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840883875 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841536788 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842176767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841723864 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841485117 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842013077 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.841574774 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840313462 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841596908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842306698 seconds)
  done (took 40.436592333 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.844796076 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.842491189 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841738562 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845100693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841532311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845892988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843640122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844550032 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845999675 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842948753 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845787258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845972141 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.842497129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.842305608 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842139259 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846471647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846953362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842382117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.845730211 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844650304 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845550035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.843114203 seconds)
  done (took 42.344823718 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847065104 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.84618315 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.845146973 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.842966919 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.847281642 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.843011422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.846555831 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.84597334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.845886873 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.846074045 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.845840113 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.846714357 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.853186708 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.85226308 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.847706517 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.846561885 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.991451451 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.846935425 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.847184889 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.846169316 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.843698632 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.851505596 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.845167596 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.845180559 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.84652343 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.847916187 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.8471356 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.846722566 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.848584307 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848218587 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852098452 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847747915 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.847453513 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.849050446 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.847060018 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.848869383 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.851456403 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.849370392 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.844005316 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846859166 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.856147584 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.866568542 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849119016 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.854746227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.848937364 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.848340604 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.850601973 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.855743857 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845232491 seconds)
  done (took 92.48568096 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.848047606 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.848395998 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.845612775 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849190029 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.84883467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.847823415 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.849300057 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847775421 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.846947331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846451218 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.848755832 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.847067993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846683619 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.849005068 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850646032 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84790205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846604646 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845704582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.847734403 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849730746 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.846603271 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.848502753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.849836891 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.847521634 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849313358 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84749912 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847413942 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.850734872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847997851 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.846973897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.850757969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849747093 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.849854816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848062317 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.846831885 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.850579791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.849985646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.84738895 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850533637 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.848950326 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.850556842 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851083397 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.851501808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.851086426 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848872661 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.848882866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849691493 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.848291689 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.853777747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.850967777 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.850390823 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.847917555 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.85153623 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847965359 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.850618249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.851468314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.848924262 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.848543191 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.850848941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.849474589 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.848392664 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851675691 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.849952471 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.851438677 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.852376761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.849687819 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.848907247 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851176481 seconds)
  done (took 127.517653766 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851427493 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.852064764 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852652999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851437798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853383271 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.852396867 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852089819 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.852212834 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853153212 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852123434 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852846779 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.85472119 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.853136807 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852984816 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854370527 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.853737576 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854472626 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853151239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854122073 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853955909 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.854806079 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.853845956 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853712663 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.854035356 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854424408 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.852667192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855182542 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.854794761 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854614461 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.853845148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854472847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.855218479 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.854125721 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854438816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.854216463 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.854571487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854574516 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854682796 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.854293578 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854884391 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.853948801 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854480383 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855478074 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854905001 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854892971 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.854809392 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.854899971 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.855282979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.854634448 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85556428 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.855288612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854800212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855402191 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854906317 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855561297 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.855208381 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855153561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855695612 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855629544 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856060804 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855895271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.85515134 seconds)
  done (took 116.742715947 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855298124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856338412 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.853221325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.853176087 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.856096253 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853704924 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.858105895 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.855541253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855601768 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854949777 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856402978 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855668162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85384034 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856834192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853872269 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85468696 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85268618 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853304965 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85628876 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854093254 seconds)
  done (took 38.881864749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.854529553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.857101415 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.85353925 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854231015 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.856361338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854696022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.856858486 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85750341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854771859 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856346172 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857687562 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.856949192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855284579 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.854526668 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857226344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.854672602 seconds)
  done (took 31.476329852 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.855470961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.857557797 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.85830472 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.85798519 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.856512553 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.854756309 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.858758018 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.855004154 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.855269588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.857808635 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.858616603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.858154285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.858764258 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.858753688 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.856170529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.858264231 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.855016653 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.855805033 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.858529998 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.858858561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.85679842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856287178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.858145887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.859098926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.856020153 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.857207382 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.856949011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.857250626 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85651744 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.858773425 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.857512489 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85762673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.856211631 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.856708415 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.85964983 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.856985071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.860400321 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859872886 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.860862696 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859172399 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.859480153 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857384562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.859787997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.860200062 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.856800119 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86007381 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.856917375 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.858028462 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857040357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857709264 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.859489761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.86070015 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.8613618 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.86178824 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.860999061 seconds)
  done (took 103.975831731 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860593699 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86060739 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857267147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.860136649 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.860306047 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858589617 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860172438 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.856867842 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858141042 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.860305345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858823932 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859284434 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857476689 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860474321 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858603833 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861189714 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.857736998 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858171879 seconds)
  done (took 35.251557865 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.858279312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.858592034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.861134216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858646073 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859218443 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861958977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858999525 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.861896205 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861663602 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.859386403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858278502 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.86170854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861760091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86130875 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860604884 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859357052 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.861494221 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861686401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.858966907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858574091 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862036883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861747864 seconds)
  done (took 42.715184473 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.860763901 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.860439815 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.877905792 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.883260809 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.883036419 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.896758117 seconds)
  done (took 13.05065349 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861404322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862768875 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859942823 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863277061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862076467 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859769933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859892618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859927879 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863556376 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859670753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861486428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862787307 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863603784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861635941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862944078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86324997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861771118 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860890629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86066334 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863102693 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860465279 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863003506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860676377 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861016175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861804253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860964006 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863819924 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862479516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862962297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863858701 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864069085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861543027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86465454 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862022175 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863866489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864837084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862710839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865387171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864423188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862745863 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865108251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864150252 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864660267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862150526 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86452992 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862594896 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862519507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862086749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862497036 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865725188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865582889 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862079943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864824513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864925723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865436563 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865973561 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863133491 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863399791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86545902 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863399756 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862771951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865363318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863109397 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864510956 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865050821 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863821385 seconds)
  done (took 124.747389994 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86448214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863870766 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862318827 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86352755 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863320539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863475068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863436809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863863764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863645525 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864000672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867424578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86291907 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864856985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864030024 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867254586 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864429252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864766882 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863750379 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864559483 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867738713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865360783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865721677 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865818871 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865758169 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864752213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868094479 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865026672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864944266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864719344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864720617 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865369588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864113825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865382234 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865032132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865934434 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865820849 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864782772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864929573 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865816721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868039662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865986778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867693187 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864990995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865719907 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865714232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865864082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866334667 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865497295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865460607 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865676955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867290082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865911781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867097856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866693938 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866018412 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866149774 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866456504 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865967794 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866534093 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868956802 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866727749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867626685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870050657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866259441 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867172357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866804385 seconds)
  done (took 124.922848122 seconds)
done (took 2545.839378678 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.892933914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.930237051 seconds)
  done (took 15.618365936 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.033191625 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.984564038 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.868569004 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902610744 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.867703703 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.887013878 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.880846653 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.868812975 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.867231477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.867146386 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.868286374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.054345035 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.8687728 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.868710268 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.868042103 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.963442434 seconds)
  done (took 52.320191139 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.87046426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871706676 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.883038074 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.874036508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.871339453 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.883562651 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906202607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.873560091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.905231591 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.885895427 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940802631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.882973423 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.871060968 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.921657151 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.887459274 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.887235197 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965709964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.950100753 seconds)
  done (took 35.928175588 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.951336115 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.88077923 seconds)
  done (took 10.636173017 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.896666426 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.865546543 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.909528574 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.876279131 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.870482772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.882080592 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.889981409 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.889889499 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.893305139 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.890646825 seconds)
  done (took 70.664792213 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.87628922 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.871770836 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.871287965 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.869258779 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.862914318 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.870545985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.870963691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.867065433 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541503126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.908520384 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.878837421 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875217211 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.870466876 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.872893062 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.869142067 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.894205934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.964924562 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.868303187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868218786 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.876503206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.871702022 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.923715448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.885842567 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874022307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.900742282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541007979 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.878750688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.877882133 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.963593948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867951089 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870901956 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.87298737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.87390538 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.267868088 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.138335127 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.871740901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.886942176 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879378018 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.868945804 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.973427137 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.872289268 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.877695926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.50514779 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.115636104 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.965680619 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.913211581 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.199182321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.890219253 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.873683578 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.89893684 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.874869379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.873137688 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.885848107 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.355041053 seconds)
  done (took 132.240128393 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867155052 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.220300735 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.039263901 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867564661 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.158117944 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081462966 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869068512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918912176 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870820659 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.102028189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123580868 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98003683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869340672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.867983761 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869697423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866193697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028993088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.943431514 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870468614 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.867935629 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901241339 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114699679 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998351673 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870392123 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.900082515 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085059416 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996225897 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978647905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.666501591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86678936 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936832448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871078426 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.866887494 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865962089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028493931 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968254617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956286842 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870155948 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867617367 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.86864849 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.541739384 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072339797 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.9699471 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013963434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071473306 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081236884 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.655145908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.867999623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.613894459 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038059506 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.104837278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104447272 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.996875212 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871951325 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.201702929 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868307303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867895352 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.124865734 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018398103 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974667431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871651564 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870488111 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868994532 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120920629 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871712359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.971948238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872122905 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869906372 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.970790062 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976267506 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.014585881 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087734593 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905749452 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.763840884 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.405086967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.122097035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941689326 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125801404 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874030155 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867879792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953004475 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.716873691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129211593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124001637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.127750781 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910246323 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599183702 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.869472674 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.101048949 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096659753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.123129483 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075778549 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.112521358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.191446358 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.866960692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.867382239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.099166059 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006498561 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871062736 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221173144 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105416792 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.4388329 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890643508 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181918691 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002798627 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868718102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.510212809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866350223 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.092372356 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.910840963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866942896 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865343455 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088476486 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.839087924 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863031201 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.725411916 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.929188332 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866067725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100482571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866859441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127688785 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864527969 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102785704 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.038265784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897268258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.040278936 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.068399317 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.864020715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111147123 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109348746 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979294662 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138718752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.769935573 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863328392 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152295073 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.862901402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.859192622 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034043624 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86008968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009152481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862962644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149698944 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886047265 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096090563 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861583014 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116141965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8957856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912762033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859646045 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987792508 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860022276 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694718281 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019093463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861276887 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856177354 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.41957543 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858422815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018604428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095034038 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884907133 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934004534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.531376818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854928323 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947436471 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885254954 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.245260883 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.856043305 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.108369558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.858204834 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854754158 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.853662897 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101818298 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099218036 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859178828 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.857360483 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.755909619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.856163581 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8569065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.043847283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.223277956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.858787732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064354424 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863387443 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990757487 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860341702 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.936116172 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198197235 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857571721 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.858345903 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.857128743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.856563681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858925704 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07279702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888840325 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.40522091 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998986586 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13110027 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.172283306 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.109601524 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906011731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86168879 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118536152 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859512467 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925619574 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858858138 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883502687 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093810961 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861419967 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124861302 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139542558 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.898271362 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908406352 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.860032123 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856685181 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854694685 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007875583 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950343225 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.857334405 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.855550664 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974943533 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985931963 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071697955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.85668545 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.94437795 seconds)
  done (took 902.833321708 seconds)
done (took 1222.035868849 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.854650848 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854218885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.843011228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856719259 seconds)
  done (took 29.197767531 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.862021007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859340853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.862283675 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.858317843 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.861601881 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857635082 seconds)
  done (took 12.94783177 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.937795087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853902399 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854962277 seconds)
  done (took 21.432816125 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927120936 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24344343 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.96792306 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.28175525 seconds)
  done (took 10.208477943 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.860734241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858317423 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858635248 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.86029457 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861036698 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862346859 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858546281 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860856739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.861133022 seconds)
  done (took 18.530741999 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.326314061 seconds)
done (took 98.432424503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987455957 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.958004977 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.032086157 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 5.686003772 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.309772149 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.898193205 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.880218274 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.998714796 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.880956666 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.044387099 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.968654077 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014653509 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.88545293 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.888717821 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.924152049 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.954888203 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.90632702 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.719464516 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.91353755 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.19335959 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.575279608 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.572532023 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.029246261 seconds)
    (24/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.510918188 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.169803677 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.032015724 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.865984869 seconds)
    (28/309) benchmarking ("sort", Float32, false)...
    done (took 5.677300586 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.034185417 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.088303868 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.882391123 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.80326571 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.351141392 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.082509017 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.011543876 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13009307 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.882240981 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.262838824 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.692614764 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.795290641 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.987127338 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.881656188 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.133264565 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889384304 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.126001241 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.025846901 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.907495774 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870160081 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.200466724 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.958335076 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.106579228 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.237757379 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.261843294 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.997784567 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.39729843 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.046045545 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.884921186 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.136423772 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.006593061 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.029557682 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.122898311 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.386667477 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214349494 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910716231 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.525685525 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.951825433 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.262495062 seconds)
    (68/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.09879031 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.855954131 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.884532079 seconds)
    (71/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.989482485 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.865248541 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.958956913 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.951165265 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.040462188 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077361087 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.830420017 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567752136 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012747178 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.528018313 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.199642424 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.966788091 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860682215 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.116883352 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.971437912 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.869736541 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.893001434 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.516682315 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160347469 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.934437075 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083846322 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.852630163 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.03457276 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.953226988 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321038049 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.869124395 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.201446664 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.212087298 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.194809261 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.037495105 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.655799621 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.039558261 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056630421 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.034761364 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.058154394 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.536915596 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.924503315 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.153092939 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.854773823 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.20698117 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.913223217 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.796987289 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.951656148 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.996371395 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.836589392 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.411010515 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.870719887 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.872380097 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.097925696 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.947019305 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.863181777 seconds)
    (122/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.026915666 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.067850618 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098089506 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.02271054 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849488473 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.077047976 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.128445474 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.041242675 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.977500332 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.852522191 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.190553411 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.318915789 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.870566066 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.211943891 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.651911935 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.941051885 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072727278 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.872580803 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.827010352 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.112204097 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.881869662 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.131593243 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920430892 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.749827764 seconds)
    (146/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.862754172 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.940026736 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.905897345 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.923703606 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072325196 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.3074582 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.866642025 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.080074933 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.173086298 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.942058663 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.86113475 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.96613555 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.484547885 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926914942 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.212106646 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.012349692 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.817426329 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013931405 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.854442636 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.791535942 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.934212697 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935699642 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.26206515 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.921478812 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.88158532 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.93772597 seconds)
    (172/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.223352298 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.146004681 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.075167116 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163397971 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.86361251 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.835132277 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.025688116 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.139010045 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.967369261 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.935986323 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.872094587 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.967169612 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.252195681 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.12334013 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.460835914 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.88568064 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.833280928 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.31325236 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.428271736 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.780844483 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.82593367 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.955922565 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.819306682 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.828942784 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.994322146 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.858100093 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.943088227 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.825911867 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.588663308 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842809192 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.962246386 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.937841704 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.866285758 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.013058661 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.965616709 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248156836 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146159288 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.666255694 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.044139542 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.829130183 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.173865186 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.141466861 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.953085437 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.919843744 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.368752308 seconds)
    (217/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.837103719 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.997176565 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.999867761 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.236756838 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.848738428 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.048373858 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.847314399 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.970512367 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.139969872 seconds)
    (226/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.031865298 seconds)
    (227/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114771127 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.933858683 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.938586635 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892767599 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.84806672 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.967368575 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.114283025 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741338744 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.758715666 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.87483425 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.001790356 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.130193128 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.920014884 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.820835061 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.84931109 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.155054735 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.933009684 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336352826 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.854568951 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.507798602 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.881786452 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.105858233 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.077047055 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.942119796 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.7742574 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.154745795 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.952507036 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.296594258 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.83897214 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.30218834 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.85119992 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.947731584 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.959145967 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.241729739 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.127267437 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.947585037 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.874657152 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.151962982 seconds)
    (265/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.854326167 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.968231847 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.205493257 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.939571996 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.309986314 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.162762567 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.001227637 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.304561283 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.544972883 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182223228 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.090890198 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243814996 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.283899819 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.920933128 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.935489404 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.0929409 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.960249496 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.01614345 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.879597562 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.851225552 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935529933 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.134330798 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.989307104 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.041204526 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.928183972 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.554049992 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.970313108 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.923206549 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.845565927 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127802128 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.922541221 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.879266657 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988609267 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 4.808601966 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.93536682 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.933337353 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.95027622 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.945470815 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.861802401 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.840188643 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.960070849 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83675034 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.99111536 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.337209368 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.26488871 seconds)
  done (took 1003.310199621 seconds)
done (took 1005.187412055 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.866374688 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85459561 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.836828007 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859981694 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.949903257 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864965399 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847863364 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837084992 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.883892164 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.884256339 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.834099615 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.860439983 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83463455 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.833464406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.83300475 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846820934 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152751893 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.858725371 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.847277019 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.83910921 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.847285402 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.829008634 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.878687418 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.855466036 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.833083287 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.831593758 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.834712481 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.849443838 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.940365908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.831987675 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.831066606 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.838885416 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144321528 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.852811012 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.821569978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.846744916 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.839020144 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.835486653 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.830282154 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.857002935 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.233347307 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.862299131 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.825503996 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.828817262 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.822259193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.825189473 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.82354788 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.828439728 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837080562 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834010664 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.222541036 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.873112005 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.824038668 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82150954 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.827920975 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.815230093 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.819660759 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831344656 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835062784 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833612649 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.118763605 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.845666652 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.814615178 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.829968289 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821841524 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.249245024 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.843920862 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.81575697 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.216739921 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.853641016 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.250201704 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.855363473 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.811686087 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.824684099 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.842766681 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.124061238 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.833744659 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.809044068 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.81849389 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.809326955 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.819979741 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822497072 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.814787485 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.81160116 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825351118 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.839528601 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.820944833 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.811768703 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821038435 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.831779672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.818582584 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.823431875 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.813488726 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.806596068 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.821567968 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.815315664 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.81552894 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.815025133 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.815576171 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.822530507 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.215928921 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868056885 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.809331202 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.808104258 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.812221246 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828969915 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.216035748 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851426964 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.833987557 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.859982165 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.814629325 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.116802218 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.845106982 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829766964 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.823010671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.817140245 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.809376619 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.117501979 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.245088262 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.867047596 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817211464 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.812813918 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829583058 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.815165656 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.809540632 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.128151928 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.843623605 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826585138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.934215983 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.824974148 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.846476149 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.812316906 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.816193129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.842891657 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829852424 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.846522606 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.817172693 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829539004 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.831278445 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.811919696 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.824587542 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.823271697 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.81541427 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.819369746 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.807859275 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.843255255 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827370847 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827599291 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.83457173 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.935801663 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.811983939 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.120808957 seconds)
done (took 286.235410387 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.884430859 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.803250544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.90770794 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.811894285 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.894363618 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.898729516 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.80898289 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.809890396 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.808828611 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.197228232 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.808603717 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819240289 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.80877894 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.807961956 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.89521714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.812929827 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.808901506 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156898318 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.813599285 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88327303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807411272 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.809125811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.811137641 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.19387467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.807194694 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.811065718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.884798601 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.812218469 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.156060896 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.813784236 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807528208 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154817788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.902966852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.831714383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.823472581 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.81969435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.89593818 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.817701187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.895116846 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.895894676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.910088628 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.855196492 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.807676835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.810890459 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.816856048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.815775877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.810818083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.841403036 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.812939619 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.810265103 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.158160007 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.822697299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813242362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.811186735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81195424 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.846419531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.810986252 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.814724761 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.906989258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.815503202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.876565582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.193249904 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.199947429 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.814359065 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.811708645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.812018546 seconds)
  done (took 180.54000562 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879986968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.886578458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.881490861 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.818646408 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.862064365 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.883117943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.819872055 seconds)
  done (took 14.771487733 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.819946916 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.815925058 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866288828 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866848867 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.815959772 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.964038241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81671396 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.827910302 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.812954325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.867806413 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.816611488 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816835795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.823381627 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.809811621 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.865179705 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.828352302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933527452 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.817659783 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.817076573 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970558078 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814243023 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.822762386 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.869731764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82650503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.81852827 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.822345631 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.400808627 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816701302 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81324616 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.816514738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812578969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858506314 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.816869515 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.816264162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816107267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931441728 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.816984672 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813818695 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.817291174 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.811109101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.816424009 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.818196421 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818726749 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.814276689 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.817880675 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.840343854 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.817336794 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.817740892 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.819795935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81685778 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869735314 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.818724942 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.813785052 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.816671127 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.872959777 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824690372 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.819668346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.814856624 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.817764239 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.814199332 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972884392 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.871941201 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.814540642 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.865360126 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818399568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816320304 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.815314489 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813054368 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911128782 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.813372521 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863724657 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.810867024 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.97236216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.835420444 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813186349 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.815541412 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.813528144 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814070247 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.810299181 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.816435336 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.807570076 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.809127418 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.813549801 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.804732535 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.80536854 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922854152 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914005282 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.80261021 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.817169668 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.812669501 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.802633728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.85783794 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.804950389 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.802047452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863619276 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.923955913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.860275013 seconds)
  done (took 200.431695655 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.809762297 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.813117141 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.807549637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.821945218 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.806715918 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.804947402 seconds)
  done (took 12.592888763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.809095998 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.806842766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.805395466 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.80632831 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.806102761 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.80853738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.808496571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808945643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.810300484 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.807480743 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.80697167 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.806606661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.806956885 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.807462046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.807225453 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.805337797 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.805525741 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.802269085 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.804476343 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806997037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.96403216 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.804290214 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806143815 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.80536777 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.812450375 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.806940088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.813414194 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.807141043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.804456725 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.813851104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.809003705 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.806679503 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.806778905 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.812535842 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.811144103 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.807324987 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809893003 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.806658123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.8026912 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.807742823 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.809373433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803352803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.802319386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.805998482 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.805970888 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.809068535 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.812234855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.811513862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.803546025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.80477425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.805309474 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.803606252 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.80458995 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.804335562 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.803230754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.80863065 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.808035349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.802158591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.800767968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.800755009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.80069234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.800464996 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.801886948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.805843236 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.797498182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.79965826 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.800565417 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.804409091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801149203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.798736276 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.800013025 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.796343164 seconds)
  done (took 132.9052874 seconds)
done (took 542.994281126 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.950635809 seconds)
  done (took 8.669192014 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.008994518 seconds)
  done (took 8.789572627 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.239727148 seconds)
  done (took 9.988454844 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.830622278 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.867568501 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.828959446 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818523231 seconds)
  done (took 29.115736093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.917996743 seconds)
  done (took 8.663574611 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.839575807 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.816327082 seconds)
  done (took 15.431928485 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.971975695 seconds)
  done (took 8.721246132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.223344331 seconds)
  done (took 8.985000054 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.811560142 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.8310688 seconds)
  done (took 15.384968006 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.77747773 seconds)
  done (took 8.501563814 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.316524929 seconds)
  done (took 11.14201871 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.810287823 seconds)
  done (took 8.639657251 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.818479067 seconds)
  done (took 8.542537766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.85217217 seconds)
  done (took 8.570554144 seconds)
done (took 160.865181861 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.797404484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.79264265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.790613556 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.792699046 seconds)
  done (took 28.892633134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.834373722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.833009797 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.836082168 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.842682978 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.84002965 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.835395874 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825401876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.82718219 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.845090218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.835362509 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.836253014 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.838402376 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.833883609 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.825457358 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.83614164 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.837128946 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.846301173 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.833904592 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.825361655 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.837767056 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.802105209 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.844286585 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.836606206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.801034588 seconds)
  done (took 45.710080025 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.002471741 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.876953303 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.952669351 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.853349486 seconds)
  done (took 9.406170283 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.854584161 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.853752912 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.865183625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.905744697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.929119228 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.863206101 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.827853107 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.82357477 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.807025709 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.855146215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.930610519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.849694031 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.943578225 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.801614485 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.997535524 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.7997007 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.801136915 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.852728298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.904364167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.91689058 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.80207624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.852680987 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.857813642 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.847540938 seconds)
  done (took 46.464641894 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799187669 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808725267 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.808569062 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.800456567 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.800638359 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.801493725 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.806091472 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.800703453 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.821929778 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.801028819 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.797554756 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.798817582 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.800282284 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.803345925 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.798264805 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.813959571 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.815948984 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.801592082 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.805938224 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.806914975 seconds)
  done (took 37.812279758 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.795324848 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.652351466 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.148929593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.049331648 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.797854441 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.795438001 seconds)
  done (took 30.962642741 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.817989614 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.80988382 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.805722489 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.861735091 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940221683 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.810923605 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.80237563 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.815726417 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.851685786 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.869251781 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.825160475 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.835255814 seconds)
  done (took 23.770420168 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.801101814 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.804358922 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.796602682 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.817714684 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.815164551 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.811546857 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.810732085 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.796039042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.815038686 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.82333962 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.809913878 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813420609 seconds)
  done (took 43.447625295 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883946533 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682466514 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.853531195 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519346802 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335008297 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007496726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32259589 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138116065 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.800767371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072636873 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855141805 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066521257 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070812395 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91765298 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817186622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.26886663 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119840353 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047425313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839855139 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496059563 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303947346 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880471479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.606522906 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052900232 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135848215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.056015324 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.185474066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883858036 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055827673 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96071156 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934195389 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92367197 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199130871 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295298548 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040309701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934996417 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578278196 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.64352338 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.910290902 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.703469996 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.801344517 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.057210671 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93390973 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926576111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859848089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.540051919 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271009035 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.930427161 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.627598442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925409835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936574446 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016064024 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.928785406 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.74133498 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880967069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20522076 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.923247881 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933573678 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496547525 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971672626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.63695915 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.868413945 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.018149612 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574355703 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387443604 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.075119301 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.930290845 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930559691 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861942426 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.654499777 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048315104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073068095 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.946174775 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578097431 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23171038 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.982557761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010792886 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210276494 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.807573617 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.868698142 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155330382 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883978753 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861208587 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.776017069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861457629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183630161 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961377363 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.545790027 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964919944 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265510443 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941782307 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950482638 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936348646 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153087842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.813094526 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929279659 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.690270675 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21330606 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95153094 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266899205 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86392832 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933268022 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185487002 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.140809622 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267021664 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367320366 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090022565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929892166 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.021250592 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.944592335 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939312583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.198861513 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986631971 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980312285 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06073224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888165144 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226100393 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955097782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.106098612 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.942916076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194973144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.22964086 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180458204 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014530557 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934192826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932624948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614423038 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.555561384 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.157201223 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.932827556 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.521096033 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946017228 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.933121476 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867496784 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.75612 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915889243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.039976637 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154506807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.958962291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206295633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866389252 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077752358 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047231763 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.155227807 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575360354 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.007565265 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193097762 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529187527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265797366 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94649894 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952114153 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025317358 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95436278 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.474078827 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189984319 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.936844272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936686024 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648735552 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.009169351 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935551352 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937541786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758415309 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2077312 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956451746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.943824232 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.823658387 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.946434341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001762089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939552896 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943700323 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.465118013 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.685537552 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.944701541 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.610725718 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159234886 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943477715 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.673372537 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121700262 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.015990605 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20332993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990982717 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869660453 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.637071744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.637452849 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936037933 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871016244 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934641441 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944328307 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945019042 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.134081409 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209038311 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977848685 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.646189371 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.044788809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945407265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.940027056 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936390188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.429455377 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972422649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.522691163 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062968997 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072432362 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.948289623 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.869645781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.939479767 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940972602 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936327539 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.900984632 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98941982 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.568449156 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394572396 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196818222 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582500505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954537598 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.666719433 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.061009533 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.962937135 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687977399 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980005831 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.048311611 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019424746 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.94839768 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.656468494 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.702567641 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507507037 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238532065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236289589 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367809846 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.392781826 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274113148 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27513913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174587886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467150057 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997827722 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282437559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887504804 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024701288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.579834961 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.322586827 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955984364 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165657709 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321328066 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.747551628 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093306918 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149229746 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972696794 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.826866576 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982286457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.143669931 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092623779 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694951471 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158906343 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273258784 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688131776 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041818254 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.936807442 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.629711044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019245937 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.649328178 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.300305445 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.559775029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.922903152 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426687446 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948282561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384329415 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286677507 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360679239 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.032840424 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876649513 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.951235213 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95108091 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.940226421 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.922109636 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.818505664 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.20061628 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952015008 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175357663 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304242814 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199162138 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.841281166 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.945300878 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939906586 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22650995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688035692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185899158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.362359241 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.527723491 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951953039 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875132992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87461161 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.643206168 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942501211 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917405456 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156522581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.046669434 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894540529 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390310484 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265191926 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198499019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.955073213 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209936068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214240265 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678772503 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970381334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.040712001 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.679889126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.639558547 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163548517 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177828362 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769314228 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172420058 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.005785861 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.901046198 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.941379464 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157061031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16514122 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919589944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18598839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.665791383 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.951502129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314183044 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996414658 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.92170323 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152387671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.036837271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954014319 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024688235 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953584317 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.953794122 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954568133 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990184653 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928391934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.071733415 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.95672102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034958776 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982891995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522685652 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.954315372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215654411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28786917 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26122882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999680962 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943573532 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949000812 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877812289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082364474 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388925597 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217079948 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074726788 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.085197236 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970705683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696066011 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298867471 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271577914 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219899842 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.841496096 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944249369 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060500097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.169940014 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954752657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.158156066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167486237 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253430871 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41148657 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.161245745 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397910796 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219663633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315537143 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946771047 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534633461 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.951556074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.711604193 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.981024963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922537715 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226591824 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956574568 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333004237 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965878695 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.145766308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.462687105 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661827254 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306742768 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.925281801 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001888906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217329609 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322744363 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257368592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015411268 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957485181 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.646288304 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084857609 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.85143999 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.191553521 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946752043 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158765141 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.659600829 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95658685 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225135259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254372409 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.945557953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.881737149 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98920669 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.958090862 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171408398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202937521 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195715111 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957328606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.949807728 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.763084149 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219953435 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002159355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882708723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.952612841 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044077365 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194683884 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969877422 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.466282758 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.651007726 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241188768 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.863483404 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971267759 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42673061 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397490072 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269107424 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467398527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172115996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.504857126 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871255369 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337575437 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.955601149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42007986 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342300795 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.953668674 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522719001 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075287396 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.21597642 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270041124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.966479406 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65035758 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.992448018 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173876168 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545799164 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892992828 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955624857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.009895754 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.949585223 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083281387 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961923749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.911551817 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898965622 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.800989458 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443290906 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.954118254 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.94496667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.746460931 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.57441098 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073004468 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106435743 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957021354 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.666617457 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.242737614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205289691 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.523620876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.0327316 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.957252211 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950495458 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878113282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.149759011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.149820944 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246913878 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.376675445 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.075932078 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955189212 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.168482605 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164045956 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.928334599 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105040338 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410461224 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078733603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.871256398 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.664859275 seconds)
  done (took 1718.72883158 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968922295 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.015131836 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.957535631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.001832454 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996845326 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.070298621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.034010474 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.018727359 seconds)
  done (took 57.943751425 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950423514 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.168170253 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.960522825 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951833554 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.007848807 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.952900536 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.140358401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.964567496 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.97395958 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962044698 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.953521755 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.959589178 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.346210386 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.97761017 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.952969471 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.438396904 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.972025676 seconds)
  done (took 76.557749728 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953127481 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.389342182 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.993160205 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.968273819 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.979164426 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.9596013 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.087664933 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.998769812 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.956452139 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.131490327 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.296562064 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.969770828 seconds)
  done (took 91.566025484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.969176824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.958721612 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95967999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.959807343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.960630347 seconds)
  done (took 11.697288809 seconds)
done (took 2224.702696563 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.202060135 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.180402644 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.18352286 seconds)
  done (took 6.246500236 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.100513992 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.147767855 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.267600552 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.272969385 seconds)
  done (took 10.673602444 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.241354794 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.322134803 seconds)
  done (took 6.444414289 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.28404363 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.968753851 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.332018744 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.951459904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.953597965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.956023425 seconds)
  done (took 22.745578879 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.954619658 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.958561806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.955721523 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.958662234 seconds)
  done (took 9.705618644 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.935618616 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.695509159 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.941654662 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.952057063 seconds)
  done (took 21.404390625 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.703683893 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.354211132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.698009037 seconds)
  done (took 9.636432341 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.482453729 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.190569114 seconds)
  done (took 9.553493862 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.213725232 seconds)
  done (took 4.094369433 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.983567503 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.224981173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.509575059 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.467909516 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.56620204 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.79680958 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.28411235 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.197159742 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.402612425 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.41488677 seconds)
  done (took 25.729735816 seconds)
done (took 141.902428861 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.382515546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.979867984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.158043969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.318376951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.194962503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.157595098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.174233115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.310070221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.858206208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843703704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.322388153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.192611075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.12128325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.973538679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.127347549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974738158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.185083844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.411256342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043366484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.245843314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.186787454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.967674446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.16152658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.982301182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.189060553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.103995698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.511454996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.979595532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.176676318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.52435079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.110951407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.385786375 seconds)
  done (took 171.139060356 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.955552977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955537157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.955750611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.95471286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.253775301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957285811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95566559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.956305499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.023891378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.005777047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.957426174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.246355046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957691947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955819178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955480988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957285236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.16409317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.957176661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.955506723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955305963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957402154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.085576772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.956880242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.100863198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.121744197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957960792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.955803394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957372491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956458473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955275181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957255141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.956519069 seconds)
  done (took 209.841404489 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.956014284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958573656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959523211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957496699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.958811609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95611882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.958944373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.955957097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.459814034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.455133303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958793284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.959181521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957706505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.958862359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960901921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957575899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.957726973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.956445061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958849826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959575093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.959199162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.573285538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.959944881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.582179228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.959690885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957614073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.958881271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958311816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.958287897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95996848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958339553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.958317719 seconds)
  done (took 222.791276424 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.148376863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.964687561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.965754861 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.964598056 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.966061225 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.965356439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.97147993 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146305178 seconds)
  done (took 19.982855264 seconds)
done (took 625.64220955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.421497692 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.274916734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.145849674 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.993815242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.214554382 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025928367 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.989225146 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.056066088 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.72174404 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.058750753 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.680068875 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.011461582 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.774138163 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.01806038 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114307686 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048567126 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53576922 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.627145364 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.168698986 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.057926706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.160735067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935371799 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.073340851 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.759180445 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.791672014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.989420634 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.165070083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.547224223 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.000454852 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.150267634 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.787124385 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.397021013 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.006382015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.988454932 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.045576284 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.02347934 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.333695367 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.004199892 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.111916265 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.729619315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.045845541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.604619884 seconds)
  done (took 107.477933303 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.957022677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.955351006 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.955527088 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.957972522 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.957517574 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.956925912 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.956293656 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.955673748 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.957026149 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.956214093 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.954918499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.956915704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.956059463 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.957570096 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.957271526 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.957051725 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.957977556 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.958858972 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.95692573 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.956619576 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.957942617 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.957585733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.972677537 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957107479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.958935639 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.959905122 seconds)
  done (took 52.801353404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.970446899 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.124756406 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.209899056 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993341371 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.970691337 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.973427657 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.989664275 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.977067552 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.972681964 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.972786764 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.06505189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.977141187 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989165745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208158659 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.990185488 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.970837911 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.97199916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.971197959 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.132272621 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988831854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.989562328 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.977242346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.990163677 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.984441132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.973078378 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972231061 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.97509226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.476774972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.982323932 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.06554892 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.017609019 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.996296182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.393960552 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.218866015 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.02878834 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.982267615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.97328247 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065395886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.977888493 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.972864799 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.990972666 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.978602073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.208665869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.467595721 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.98867728 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.974223676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.485755943 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.078675558 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.024408517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.985250058 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.21097429 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.992840907 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.975445886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.973365781 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.01112353 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.978308999 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.974191263 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.323578213 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.985114388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.993048575 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.980654444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.974156812 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139176684 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.983746081 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.127977065 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.982908604 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.979834329 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.97558166 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.20886875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992416845 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.464092019 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.990663692 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.975080898 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.066312347 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.133452045 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.511469187 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.987792897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140499557 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.410842283 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.998657579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.982420367 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.468812657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.004111619 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.983024946 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.976529701 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.977642702 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.974233422 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.020583266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.991329259 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.40391885 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.473801307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.345288378 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.005100721 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.989953034 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.975938236 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326404492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.984990813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.977199665 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.205319906 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.481889266 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.991831399 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.983771604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.455932976 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.993310123 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.994825186 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.98494347 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214735068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.994350283 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.02295491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.976161913 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.98256223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.979686817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.995720308 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.983906622 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.977074837 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.448079707 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088220919 seconds)
  done (took 244.573852822 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.972646906 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.974932175 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.970702382 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.975598384 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.969788943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.976147542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.971588156 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.9705023 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.976969448 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.970729071 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.970345597 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.973227585 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97133262 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.976107775 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.103809989 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.978661836 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.580201781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.972205018 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.970940567 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.971390096 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.727507936 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.97794535 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.971390585 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.970986755 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.972442728 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.971147211 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.976152295 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.093039021 seconds)
  done (took 170.759308157 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.978648441 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.092972289 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996434186 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007891419 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.987034733 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.975348968 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.000456795 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.994475553 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.983308366 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.975217668 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.975811032 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.038560116 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.989906287 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.078485295 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.013707986 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.009424192 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.083739126 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.989871706 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.976925617 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.977801205 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.007816061 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.972857218 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.039399329 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.105070019 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.99810981 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09609068 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.985126961 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.979608967 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.978255948 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.099018614 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.994969412 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.040665365 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.008212359 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.997855296 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.10240551 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.096196554 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.089437697 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.012513024 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.983395276 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.977970097 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.977854139 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.966814957 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.098650875 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.998975544 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.981186253 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087367922 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.00041098 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.981228571 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.988234867 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.978207983 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.993678033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.999123524 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.047541796 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.114283626 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.014381514 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.005309511 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.005935916 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.274010253 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.988595863 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.079632324 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.978339348 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099801651 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.001382538 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.967506189 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98037298 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.986141252 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.008583217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.012341727 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.086297925 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.993003399 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.080570002 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.019486907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.986534426 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.980729163 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.982212817 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097852834 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.101906804 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.019866925 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.018541436 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.01261387 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.976767172 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.980644164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.969153095 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999710185 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.985099456 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.101053442 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.100668876 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.994403907 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.982400565 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.983347232 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.982486936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.007604771 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108280664 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.01859217 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077330235 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.052976976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.056386644 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.997475528 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.994371384 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.985152786 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.047629884 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.996631552 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.994612429 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.319747657 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.051701137 seconds)
  done (took 214.354510446 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.435006606 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.039063525 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.039012631 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.302158842 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.402538668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.862894108 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.029419569 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.032172198 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.056126091 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.218081337 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.104778673 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.049805356 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.020018745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.007075781 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.030696222 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.055274157 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.042262388 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.349724919 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.166319614 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.144775636 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.013975158 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.33754592 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.358626271 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.419766413 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.067665176 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.376327071 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.708773974 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.171070543 seconds)
  done (took 64.752997991 seconds)
done (took 856.606418364 seconds)
SAVING RESULT...
DONE!
