cset: moving following pidspec: 7228
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.104408949 seconds)
loading group "string"... done (took 0.501204266 seconds)
loading group "linalg"... done (took 8.535062778 seconds)
loading group "parallel"... done (took 0.174525697 seconds)
loading group "find"... done (took 6.178911168 seconds)
loading group "tuple"... done (took 1.908134692 seconds)
loading group "dates"... done (took 1.352378369 seconds)
loading group "micro"... done (took 0.191690932 seconds)
loading group "io"... done (took 0.506550429 seconds)
loading group "scalar"... done (took 52.406438233 seconds)
loading group "sparse"... done (took 13.822465786 seconds)
loading group "broadcast"... done (took 1.303060785 seconds)
loading group "union"... done (took 9.479225607 seconds)
loading group "simd"... done (took 3.067591311 seconds)
loading group "random"... done (took 12.187390998 seconds)
loading group "problem"... done (took 2.23018638 seconds)
loading group "array"... done (took 24.509894755 seconds)
loading group "misc"... done (took 1.113922045 seconds)
loading group "sort"... done (took 3.746626189 seconds)
loading group "collection"... done (took 19.422699334 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608389263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126534403 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206428766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.226121256 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227689604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167432492 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157984503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.237560734 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.661547931 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.19605955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154032158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421799695 seconds)
done (took 6.2114812 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25675818 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246623097 seconds)
    (2/2) benchmarking "String"...
    done (took 0.165657451 seconds)
  done (took 1.173725265 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07559933 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160563081 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109595027 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094936673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093244956 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109428565 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092341372 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110432126 seconds)
  done (took 1.535913251 seconds)
done (took 3.806966618 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497838133 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868212391 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507906492 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.146378706 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314782959 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290508581 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267115144 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198350742 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091926611 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087639696 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174339798 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.40141783 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.395621227 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949723807 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.086686617 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.108666586 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.115791267 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.766275645 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078988463 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109579987 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498663947 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192973035 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113409428 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106499697 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185802786 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138721393 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.157469422 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103496149 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662536163 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132933641 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180044079 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097992073 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155692144 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167278853 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196635274 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11221295 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668508432 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200522503 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098649744 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100316689 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673026699 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117805013 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187999778 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103765108 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088620641 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181420725 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.105836156 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093270936 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094984904 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085476264 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161360473 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459014839 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109269649 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170458171 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093080675 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687440342 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096820745 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274730423 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124039249 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091339402 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092124734 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08643823 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159363631 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09637302 seconds)
  done (took 19.978713073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14850933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167247806 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077447935 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156916188 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121236841 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079804134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101887819 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077813784 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125053039 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177990012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137882017 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153087584 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091372769 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089457358 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127792614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24826411 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105675356 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120834567 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089374335 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088621734 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13922288 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095128556 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10688415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092214357 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169354627 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205594618 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111117921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125659806 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092470755 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096635185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145115352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148242579 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098800184 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09085218 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190817915 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106849724 seconds)
  done (took 5.280448406 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221208283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103781436 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.227715626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19811331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132443283 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183155708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17049432 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255668261 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.193685723 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181947482 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112692334 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112871681 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079621617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079887862 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077046893 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.472133439 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147626611 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192935612 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165904745 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114907795 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116117579 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07945306 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104237921 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085770436 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113160777 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12167576 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.312899423 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201506709 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113062794 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.13120961 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085461655 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09849438 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134910097 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196703894 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13934412 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12154371 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112201344 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090142243 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223586115 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133856765 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100350241 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10082024 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095383533 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115615192 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131381772 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114674043 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107545058 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110190106 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222201273 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102816132 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113186105 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.040892239 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196455104 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124412993 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084529927 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290983591 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127392993 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099614444 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109972843 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.782142029 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134014638 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083288896 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079945295 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116965627 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080631349 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.442371407 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129207259 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.232241285 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08465109 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163204561 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099453875 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122922207 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088235641 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10539124 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113482512 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087106357 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099624441 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089771954 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081122374 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108482758 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11409161 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100307113 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081091949 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149409296 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116244812 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083130948 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108527013 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107620687 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087149922 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125826404 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116898966 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08086301 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10595133 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163682256 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100103419 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130717304 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098959125 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143837426 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086388601 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.232394853 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084505265 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124786183 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104343809 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126230758 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102343643 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079774536 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10160754 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080895186 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082261021 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165006825 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089902463 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0823194 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107661345 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094701601 seconds)
  done (took 28.531970744 seconds)
done (took 54.55336831 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419935361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087662007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08385295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102706404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084308357 seconds)
  done (took 1.617560102 seconds)
done (took 2.432410677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.328031827 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202091698 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101772462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190430323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084305636 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194531078 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181579074 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099041282 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207048666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082129972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186074946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083225383 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105665017 seconds)
  done (took 2.882987568 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105083132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106706928 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103083886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123590515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087086961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102352262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122832992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109521435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101297946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11596347 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086249347 seconds)
  done (took 1.97524389 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102562039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105520086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092768394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120154325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086771503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099151764 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118915073 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107982579 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099443862 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115614345 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088168819 seconds)
  done (took 1.951363283 seconds)
done (took 7.616502312 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.077675237 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.559866413 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1453026 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210808541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343285941 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236426315 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569992376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152339003 seconds)
  done (took 14.254423781 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.126048414 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.152536757 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090819944 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092530323 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092075802 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113717901 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090411589 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093749275 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110461505 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092372929 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090258849 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110328448 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094998903 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092629356 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088947663 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108647256 seconds)
  done (took 2.515527936 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.148089232 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142866876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097695099 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098433109 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112219023 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098761698 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099895103 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115124041 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094537757 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092857848 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118344382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098516861 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095250241 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110838336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099037512 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116203003 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110683949 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098369046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115378089 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114220663 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099452142 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094900544 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114357677 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098169497 seconds)
  done (took 3.481204272 seconds)
done (took 21.064841742 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149986012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10161346 seconds)
  done (took 1.066670323 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145790858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161211685 seconds)
  done (took 1.126616193 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115566046 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092065135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137919565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101905849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09045232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107296069 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114990647 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107421597 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091149977 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090048092 seconds)
  done (took 1.870838949 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097870673 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095190201 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124057795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138343266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097365009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.111805184 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094896399 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092585453 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114364971 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089654877 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093590192 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125863826 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094156224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125948678 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.213017856 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09409403 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116749621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093041815 seconds)
  done (took 2.837680125 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09408698 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094444603 seconds)
  done (took 1.014780745 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095862865 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091056294 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093612328 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11251456 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091339332 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090466861 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106853891 seconds)
  done (took 1.506997207 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.509045628 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263752021 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357960865 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107966224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150151024 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350580284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152385109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102842193 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123183385 seconds)
  done (took 2.97654446 seconds)
done (took 13.221548979 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094485164 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224347318 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.610296872 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112531408 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088439422 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158313405 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.288630734 seconds)
done (took 2.40507121 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34885169 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141296295 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082759016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09027795 seconds)
  done (took 1.486705798 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084900564 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09743616 seconds)
  done (took 1.015446703 seconds)
done (took 3.333802451 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09255791 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09020441 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087452786 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105967461 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118603127 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088055675 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108083473 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087595071 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085900859 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08639217 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108409802 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087415439 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086648396 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106780871 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088213629 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087384577 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086208008 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104971796 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087926895 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086340239 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103960722 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088751076 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086723715 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086572348 seconds)
  done (took 3.111635502 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10915022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090200578 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11214031 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09476792 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09200069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109780571 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092742407 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089623199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109704878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090184131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09180121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109404119 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09161797 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093478435 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09070896 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111810632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092338494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089923561 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109188409 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092818789 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090980081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10740454 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094059553 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092023176 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109658561 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091932978 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089456453 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108359737 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09282233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091105267 seconds)
  done (took 3.763798252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10118284 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085243196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088600591 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115114215 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086033615 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089930765 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102652549 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087319913 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089191814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088644242 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110018143 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088457445 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084648189 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106433146 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091494302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091891943 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113728784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087202309 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085692926 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087831553 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109809906 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086558855 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087329623 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.105564427 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08996166 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085416701 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088630345 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106995251 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089892044 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087383245 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089917373 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110173515 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087816928 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097472597 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111375115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088283398 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093841873 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104557377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090203721 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085303793 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084927621 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106561513 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086085318 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094549233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107082909 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09011421 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086951713 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089834749 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109076107 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094205082 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085977751 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104332355 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091371145 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090361212 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110068256 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086887171 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089474016 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086529578 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108112829 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088721262 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085777568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10334994 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096560025 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089411702 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121883809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096474837 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08624969 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091323551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107861617 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095512538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089753783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118323087 seconds)
  done (took 7.689262059 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104938283 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096889938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089436921 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110064662 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091287913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088088292 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114342118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089350401 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090479728 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11471567 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091760434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090877441 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107654459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092856896 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089015238 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089822619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089371177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087928533 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108263897 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092888437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094206592 seconds)
  done (took 2.978117224 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242582454 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097498539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13751151 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123829238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107686308 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120808388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094111988 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094146744 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112898324 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099173454 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098090294 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113377121 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107529278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116220281 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098785698 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099441716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112364202 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101500826 seconds)
  done (took 2.919724913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10877945 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094887474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130829081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093749058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090919914 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094357302 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114849098 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110305915 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109318831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09271028 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097891149 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108089062 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092889635 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092235196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090490981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110345507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091186263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091473712 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117710961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096498264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096196635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11700659 seconds)
  done (took 3.087088948 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10970634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095016998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127300469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096130128 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090387692 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089865154 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115547466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092072955 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096789066 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111285596 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092736463 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089803961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123584077 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092201843 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096691979 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109986076 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092594991 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090937344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108828301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092081326 seconds)
  done (took 2.857119011 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175124255 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124868437 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108206079 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115586168 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127302313 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107735513 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135163884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110041478 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107051752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137072945 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108162496 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106431534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135719122 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113591038 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125375895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117245988 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115233118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135969306 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106885646 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127796349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119820439 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107360179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134387892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107353805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126206811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109305773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107882107 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132072255 seconds)
  done (took 4.232389598 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09559578 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093036448 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089215981 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107757933 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090063317 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088688055 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087682617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109067922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090374931 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089352315 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10741536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090457821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089696341 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090575316 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108396252 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089836786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089517766 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107462173 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090588438 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089376468 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089312432 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107974776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090352218 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088586205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106856959 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091192542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08896605 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088486768 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108161888 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089396808 seconds)
  done (took 3.690636129 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106452051 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099777212 seconds)
  done (took 1.057408041 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102705778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105037417 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089096476 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108797474 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097102855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089203013 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117528418 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097144659 seconds)
  done (took 1.658008214 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146017586 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163360968 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094471037 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101710539 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162018407 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.152465531 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133104703 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093035623 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10760507 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084621243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154231605 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084133535 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090706779 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08661325 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110933183 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097153716 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090151061 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119670273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097435506 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09086042 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113473984 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097278159 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09312969 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119793645 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086114004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093251488 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114693636 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101283258 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087301315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112345249 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089183427 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090014403 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112800082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095505374 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091464409 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162621267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098308105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106986686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092826235 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096368758 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141797517 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093418759 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092826946 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107049678 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095879167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09389821 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112751299 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092591491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083766368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086386573 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110323832 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087503311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089235153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110711656 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092827494 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098670994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111252284 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089205495 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087111449 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105141 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090783236 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086520024 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111999081 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095971949 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091233653 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110104578 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090725267 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091748853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091371065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112375513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091485841 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105604237 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112176274 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095058927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094867109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.111891755 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089803539 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095471002 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109367149 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09193535 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09564543 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138395461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092720439 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087304063 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106708383 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097663121 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093018834 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.1133174 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08523395 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099793791 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11195017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092184583 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084350286 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107760722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088529718 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094604288 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083233455 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111895918 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089766931 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095157347 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114957369 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090471324 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092366902 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11591377 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097746206 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089596185 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155872509 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088382355 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105843716 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094768216 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096153655 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085203516 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110765017 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090962667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088793185 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105976288 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097311073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090797771 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11154478 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096182452 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094139564 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112231271 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094799943 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091111745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086774064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114410025 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099159385 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092539781 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112533937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092031391 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092753523 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110931462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096153097 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088925135 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115714174 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089882585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091186954 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109959682 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097719577 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091455817 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086778338 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110021852 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093181569 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109315702 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095675266 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092574575 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086259555 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104293844 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092510509 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086700235 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111819611 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099593724 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088518587 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113435781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090510262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099012868 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10857711 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097279055 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093855615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.115649478 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097666009 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084587826 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088722198 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11278546 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094655896 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088645569 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111214582 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092152404 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097172299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105014767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096469226 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08481684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107390809 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098582366 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102587326 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093815333 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108052827 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133440732 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102930345 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116171866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092174253 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092820184 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114765759 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092367736 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095121191 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117399936 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09731687 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088500323 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109920319 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098495785 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088330937 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112748319 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092692276 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092640394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102189833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094569088 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084446171 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096008384 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113881451 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096676166 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097800077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113592689 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092618105 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099548476 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107242363 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096308501 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084121739 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.115388322 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11366145 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097616432 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096389155 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113773752 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089458164 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09146812 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119292703 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094583544 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092182179 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113175464 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085940694 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085017278 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116396773 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095467236 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08795832 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091617676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113057035 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094393781 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089042991 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105840452 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096459572 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094528578 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107955483 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09261717 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088297004 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111781205 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100344626 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083998417 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10848359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094662206 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095295292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.11141642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093118828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09509323 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11644094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0957744 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094242931 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090020517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120201035 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09055093 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090726525 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108310403 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095438608 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086048113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112453559 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093849157 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089218315 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106609908 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097144093 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097666679 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115599146 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092363045 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096759895 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115644739 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098772572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090634009 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09714048 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108358831 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085553228 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087683615 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105885205 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093591456 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088505421 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116854517 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091006934 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090837757 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115193485 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096040352 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090902913 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115635001 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105730733 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086416639 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104953938 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091376023 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091616758 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106948033 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091550672 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093013958 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092686642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116366944 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09534863 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088025762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111726417 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09849647 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088860989 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11892055 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098400992 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098110024 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107709692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097472499 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089453522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115295754 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088039328 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091644663 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109576936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093967083 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088726858 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110263753 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08972262 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08622214 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088100844 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119033629 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092361661 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095295059 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112222778 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092015733 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088602734 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108121481 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09955328 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090695098 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117372945 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094218181 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086449556 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085604126 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11733217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09314103 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097008727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11008788 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096194437 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098325981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115749385 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09360332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100606809 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120117856 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09852829 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099528673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104229422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091953324 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096570052 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.111685659 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096433564 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095144577 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087157649 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114331912 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098431998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093165479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110940849 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087559517 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092698282 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117223485 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096484219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095413768 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093540245 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115293784 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088226023 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09531999 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117376826 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093622414 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097602044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112323506 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096525569 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089188934 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117357887 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09522103 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086774568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08604709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111530077 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098071383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086483722 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117476482 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097913511 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091476759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110678859 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099555562 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089397768 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115132511 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098685989 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091452647 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120203172 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095319465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092675734 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097498712 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117531343 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088129129 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093436651 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111973919 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100143727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090913644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.116957132 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095281807 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097492759 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.113858663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098115616 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100062056 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098977818 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106998068 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099539892 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096141062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116665689 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090528968 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090986513 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108350389 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09285448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099103206 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109760173 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101766582 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099166538 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111344237 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092947023 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097809891 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092195018 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121025755 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089909627 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094850622 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106888135 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095277492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091373876 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120136571 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091690385 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088612447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117132684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098874304 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09672143 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115675405 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099841368 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087367536 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086434615 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117518801 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090994788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101518811 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116245786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091586344 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091567115 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114812237 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094674044 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100198868 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107175071 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091265771 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09491842 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115086687 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093540997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088170401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11621635 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093853443 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095359313 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091796542 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110723426 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093659391 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099586346 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112841023 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090602461 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090993618 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120277901 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093253546 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090792995 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10885179 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100600398 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095812387 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120235829 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092181583 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094368407 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110664541 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096617896 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10351135 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11045924 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096157494 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093072746 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098682854 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120032505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086734248 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090642015 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123947786 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098736342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094947779 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116548403 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095174847 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100548438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119832165 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097980395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088088815 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107548817 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093707972 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088407891 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095185029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120763226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094086135 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090688504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119810432 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098367014 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096146959 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.116740482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090518289 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100836484 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110665607 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098094906 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087503673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087793017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116298762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099749269 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0922446 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11655443 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095658561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095589925 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108828287 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093097277 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098064642 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116988843 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101361392 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093399036 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091715212 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118435561 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102579997 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09614858 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114838365 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102557148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099402472 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11570059 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095281978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097216973 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120696952 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097061978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100128667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111901866 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095449652 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100287625 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120544793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106568691 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092881732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107339028 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099301234 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092007391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087452161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120691563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100655126 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099444613 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116195596 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092653537 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102323379 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121179839 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095275567 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091733321 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113819056 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098562436 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091209652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118465654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093548305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101063789 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120663574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10295174 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102662021 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087413599 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12215892 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096613411 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120641727 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096899817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089102634 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089017145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117274095 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101728347 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100107262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117506708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099877289 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099001779 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095141503 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11511495 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092503448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100736775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120863618 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09763775 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096453692 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11447077 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096641858 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096153598 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119761882 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102862628 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096181895 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123828373 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101739415 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09361429 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091816179 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117570705 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097978042 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094560645 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119823562 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09360098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089293431 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120461745 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102266772 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09531303 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122650759 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102836862 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094333736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117133958 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104862658 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100246241 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095703693 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117938887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098147879 seconds)
  done (took 61.005453792 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151974912 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103516731 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118538953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098184228 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113565343 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119846962 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097004801 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0979609 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121028675 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109621096 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096860571 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116747502 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114234138 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117660366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13626201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106881819 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117227245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100017622 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097045584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099583901 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133541904 seconds)
  done (took 3.271998139 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.121703414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11055774 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129816303 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11307548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102085866 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127997398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109247655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129072981 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112238365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104626434 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132675453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107891421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126302908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105862622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105795983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127320273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112401912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104035216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130519358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1090022 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126711421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109825007 seconds)
  done (took 3.462216285 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132506406 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101201269 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095859116 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117551859 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100404457 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096955185 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121718531 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098407714 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104777797 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111536317 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090650721 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093613388 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096401757 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118115065 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092779692 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096621808 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126829486 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103578879 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102267738 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097269548 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11024395 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09872373 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098422601 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109067652 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103147771 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100915306 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096808577 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121976509 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08860318 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099480698 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118850298 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092587872 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088992792 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108452931 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090992641 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101388741 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100295265 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11842184 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099984757 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089236087 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118303604 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103239196 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089427248 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097428824 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118211581 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093878643 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100686616 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117107723 seconds)
  done (took 5.88144993 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.366829466 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162925574 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101227343 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135088552 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133658463 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107040759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099571404 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135693897 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099375966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122460936 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113592492 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110393264 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12430252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106654315 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09950526 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125216451 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103643373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099409036 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126831602 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101185272 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104554867 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123295833 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10962695 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130306032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10439645 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099934489 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120725727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105032032 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109899261 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126538776 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105007132 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103837856 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132752929 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102494978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099430751 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12378163 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112387104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121494358 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104133334 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100126748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122539754 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105039806 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102700763 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132769219 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102535497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102897329 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121994706 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099498105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10837475 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122080773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108400612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11018752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124388121 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102869229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103282088 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135744175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101112431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099567325 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123878568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108396991 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118407721 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106352747 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109691111 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122250249 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107546623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110782037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123570164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104168094 seconds)
  done (took 8.996378332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13887974 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104409619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133930464 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113169115 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104627495 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127342157 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10594599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104943924 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127901597 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109830555 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124931911 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199297011 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122918385 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110325344 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104735929 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127181988 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106629444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104949383 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12690538 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106003441 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104186746 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136440132 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105154038 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133782133 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117468126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102492211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125951348 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106209331 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132423467 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107732513 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1170167 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125885589 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106581536 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112179882 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139067907 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10538493 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100665343 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127709684 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105498194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125358674 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104074258 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115590779 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125526605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103807666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105863008 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124847334 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114145217 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115941347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132960933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111785935 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126173456 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114196955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105001976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12698576 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11551189 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142009722 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114355096 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112566081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126988991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113854563 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134903126 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122319394 seconds)
  done (took 8.269172479 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105499165 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098386504 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098850393 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120152547 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098729762 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098415429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09772032 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120893337 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099284811 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098152556 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119277283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099140837 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099509937 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098931961 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119428158 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099603124 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098584307 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119710765 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101881066 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09921584 seconds)
  done (took 3.012782414 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.114964311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116590224 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122013978 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108569813 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102071455 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127181109 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101752384 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101284288 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099998777 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123587904 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109218983 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128870362 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103180786 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106952791 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129381824 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108699067 seconds)
  done (took 2.726227863 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.126132066 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119092951 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188418729 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103509632 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123349698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108602544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101212765 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124290461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10185573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106815363 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105021612 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12662319 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101642245 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101760411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122830053 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106088373 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099594182 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12672515 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102700793 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187426906 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106326083 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102238237 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123923909 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105977605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102223541 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126888875 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107672504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102240184 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102646007 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.125253262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103879161 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107381771 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122102316 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106401082 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102603325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124040717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102406645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101846946 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125782185 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102348878 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103746843 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12324035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10261106 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103873478 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120001507 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10338031 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100676209 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105963996 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123495995 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105271296 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100623191 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130232184 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106448084 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107956336 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130493197 seconds)
  done (took 7.181177834 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117723602 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103319238 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132734283 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102143543 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102055444 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101275898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124205396 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105046042 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100990106 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121854903 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102942531 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102757415 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123717502 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103652442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10249708 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122667295 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100285047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102078406 seconds)
  done (took 2.89736446 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111851676 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101736223 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104983034 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123398265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101774524 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101113377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122288991 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101178758 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100487427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100648354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12363835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102705124 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099359374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122693127 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102407637 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101757351 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122388354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102164157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101483467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098689366 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123317454 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101412459 seconds)
  done (took 3.301502483 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118821546 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184075919 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107760461 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192969411 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097931571 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096523302 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130236902 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100157466 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113186118 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119817596 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098195429 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096753519 seconds)
  done (took 2.388051239 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134125992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137925815 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12314382 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103133767 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108549284 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127792502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106451253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106855066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134584775 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116807623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126833419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113495012 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112724649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135591942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110899808 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131272217 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107321724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107711332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122182846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123637161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106376156 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13579076 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106142188 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104122731 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129602334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114177524 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134898439 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118622184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105184855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135488036 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110778508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126610202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114677135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117212024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124703692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114818132 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106076372 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143367017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110155675 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136214075 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102468145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109540257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135594759 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11129382 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134729143 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108947456 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111732995 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129336132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107550294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147954186 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112909905 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114389341 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133276724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114012609 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13338107 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130157286 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138511811 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116678591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110444784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139681572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115544124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131149014 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116608639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116934508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133217304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114845333 seconds)
  done (took 8.892960674 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150435736 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103359789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129580219 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118131604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136694761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108216225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107008936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127731473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108256633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103629612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17228567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107827436 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135312172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117996736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106018769 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128397603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107725029 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115079977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126014188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128356833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128010684 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115439894 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113609078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13765795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117961221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133467754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107903309 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107381893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128501698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108225378 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113356904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128949548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115852155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102098273 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138153246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106860033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127797331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113966068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10713511 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132879139 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1165357 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143244901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108183833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107207518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140167789 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106676846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107050196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125648699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109402469 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104278458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141395034 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119560714 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140358411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115435379 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106814698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131300599 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106980064 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127806161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110874621 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111405587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137424895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107512458 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149310361 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108132646 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108391763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13769381 seconds)
  done (took 8.892048476 seconds)
done (took 168.054716508 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154526741 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186661273 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145617495 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177614549 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094149128 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12852465 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148742447 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149656631 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092813414 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115312499 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094000205 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095594069 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182320164 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094262407 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093160334 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11702557 seconds)
  done (took 3.002084311 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196924874 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307896865 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108124721 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119471546 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100413983 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097572689 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120123915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100758292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097665312 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127480515 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098689683 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093790032 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127199295 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095514663 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098175923 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119725437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107970384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098484352 seconds)
  done (took 3.154540518 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123445681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142625935 seconds)
  done (took 1.213638956 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134226649 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211868828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27959674 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169623502 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119111491 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139975463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147060909 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13429848 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186312836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133446134 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111654907 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096817761 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147630647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103945449 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135712883 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098051107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125485168 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134905636 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113868115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100190005 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144940271 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102612652 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103854894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136601661 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178680022 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134756678 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103892562 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101313961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124309525 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111888026 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127712658 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117747392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109557084 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179227324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101086897 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176242693 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127149937 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10079769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113071457 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120221357 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103725201 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101314833 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135183807 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097135939 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101612745 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129249248 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102196393 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102171417 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12994318 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105898788 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128669796 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107759204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17403692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107601618 seconds)
  done (took 7.910710891 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.869166145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139831244 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098052034 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.006643665 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151851999 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113712156 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.884531718 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122130129 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257118081 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.891193205 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113799736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135267924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238847108 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28114093 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.260081541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357305159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732375101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111515164 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152211247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14012987 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132027227 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125404843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142932974 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.497842313 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122204341 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098834757 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127650485 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113782596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177325792 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101250935 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10213017 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197609494 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293082592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208321936 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098705458 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122091023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099614658 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18438233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274125816 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220601546 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171804313 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120108815 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099049945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130455746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120678178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097252144 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181054733 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190933236 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193071151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10494164 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111674841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13403498 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107776339 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179844745 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097726049 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.378392631 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366083476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098500265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130351843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117108919 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27071889 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09991002 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255001119 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127369844 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214613031 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098761219 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837439258 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186244305 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098699685 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130737153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106166205 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127451155 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107657203 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189735849 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.48086172 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136379547 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104126987 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098926805 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236644012 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123134555 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100160287 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18230769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101357505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107666416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137102359 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111935302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190731087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271186301 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112638433 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133504305 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106475691 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113446791 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12419347 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230073131 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229720913 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152449833 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233713648 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130710675 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180697423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164745381 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129908362 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167268209 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130178844 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115749734 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131282203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225201093 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134371365 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127719937 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105356296 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10854815 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160405613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102807414 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131962423 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164265728 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.560640986 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184893128 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09648109 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128775156 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110230235 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18077671 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107326775 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262433956 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133593543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162638379 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130691907 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098493905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130001132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160482268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132600548 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108795714 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130641538 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11059739 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279170652 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227518738 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113443054 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249878753 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198898279 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107822849 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193893282 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108494754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189546466 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133845713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109945253 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100649576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830141516 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138187488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108028987 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128932653 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187178408 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121136732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104097855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100563798 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096807723 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810334064 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127282523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099199269 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102866265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130589577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10948865 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130416796 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108575928 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180402451 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245174362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11361621 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131499221 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100650853 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179689972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102104007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099995195 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124352394 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101848225 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109312547 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129156133 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10392935 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192350816 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176840469 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230829291 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639304042 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099680068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123082435 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244214254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101584277 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325746793 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132361522 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23669304 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183568636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099211958 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360569485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186907029 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18503871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128447642 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189528478 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099356254 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108885016 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18001925 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099516912 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13158061 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154380166 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139551252 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113116771 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.300409687 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102800776 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252427545 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098971162 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187439324 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102461283 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10815128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347982439 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102573314 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117419058 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17981863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103866754 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124998364 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.680410141 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102436047 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111377196 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132525453 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234851608 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186741486 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109654454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133249877 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114242475 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182008577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229717141 seconds)
  done (took 47.974512113 seconds)
done (took 64.19455763 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271265706 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176281675 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280468451 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176492004 seconds)
  done (took 1.943888685 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.24591498 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156837168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.201114463 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11996332 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.206022096 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120656252 seconds)
  done (took 2.019679227 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180574818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167097072 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144332954 seconds)
  done (took 1.459651381 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200517476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214967877 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322770042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252763878 seconds)
  done (took 2.049686763 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264831734 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116444188 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123310383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207275621 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.220494899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201652231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122657324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172049022 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127516401 seconds)
  done (took 2.568890717 seconds)
done (took 11.011362877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.296598242 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.390669158 seconds)
    (3/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.224524541 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.289625142 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.270541908 seconds)
    (6/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.319542682 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193365366 seconds)
    (8/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181748916 seconds)
    (9/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.19353552 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107860012 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108780192 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.222772855 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140438599 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183812588 seconds)
    (15/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.276077549 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.248133186 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.308324257 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103680978 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.141162232 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121295498 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184115834 seconds)
    (22/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145872896 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.309035334 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125406145 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214514783 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.228507265 seconds)
    (27/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.277239266 seconds)
    (28/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.194672481 seconds)
    (29/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.17239121 seconds)
    (30/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.145153325 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10304105 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.191453606 seconds)
    (33/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.178696161 seconds)
    (34/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.149436568 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078095408 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.362054785 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12852092 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084076011 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.266017107 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.184780687 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103147009 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100399012 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146501606 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119916367 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109479789 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148748314 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117720805 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07995321 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.205832024 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084621565 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.169595994 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083747319 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.160469484 seconds)
    (54/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.131619567 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104478313 seconds)
    (56/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.159537157 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10134653 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097792731 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086674925 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14480353 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13219127 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.371063408 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126339332 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109404782 seconds)
    (65/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109925492 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084129799 seconds)
    (67/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.103213579 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077707447 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.162133911 seconds)
    (70/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165822586 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14448056 seconds)
    (72/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.133469189 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.144026067 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113294105 seconds)
    (75/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17359995 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076467659 seconds)
    (77/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.102065658 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121497374 seconds)
    (79/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083686811 seconds)
    (80/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148354238 seconds)
    (81/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.139960095 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110849294 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.144446945 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081670375 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106235131 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08296966 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124967087 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105738575 seconds)
    (89/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126359768 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176609277 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121455782 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138940322 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106156286 seconds)
    (94/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10772325 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.1669666 seconds)
    (96/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077858269 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132506808 seconds)
    (98/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084030163 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169104728 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.154349845 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099654502 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108238082 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106941284 seconds)
    (104/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.109931295 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.185742676 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083303003 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150384389 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102709851 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08449244 seconds)
    (110/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.16395738 seconds)
    (111/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110489951 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109985717 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097887979 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.137053269 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08559789 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077796941 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128971118 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185751464 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107274145 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111878469 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.138880007 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108080447 seconds)
    (123/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077375308 seconds)
    (124/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077963698 seconds)
    (125/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.136287497 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079417674 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080269311 seconds)
    (128/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107429416 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106906884 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085246242 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10201999 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081484511 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109455289 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104422365 seconds)
    (135/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083889511 seconds)
    (136/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080136282 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.105555795 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104535367 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121079892 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120264644 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101670672 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102476076 seconds)
    (143/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078376157 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101574885 seconds)
    (145/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.105403424 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108893829 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101786127 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127213885 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111155541 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084177092 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084927945 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.101115919 seconds)
    (153/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100210205 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.129318082 seconds)
    (155/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083414637 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104402277 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086337135 seconds)
    (158/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100937179 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084751869 seconds)
    (160/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133109194 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078998569 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098748326 seconds)
    (163/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.133750245 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.102935793 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100463218 seconds)
    (166/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108168769 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122323065 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082476514 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084460824 seconds)
    (170/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082018009 seconds)
    (171/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084239254 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108605837 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081710941 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108099488 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100478891 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132295404 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123727478 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.125304721 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103666407 seconds)
    (180/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100787188 seconds)
    (181/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081764388 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077817147 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077351424 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.107960649 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085093857 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12176506 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080198351 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108860109 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103619999 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1018349 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077374084 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104640056 seconds)
  done (took 26.434299298 seconds)
done (took 27.410691774 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.209662007 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126758269 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110203734 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108946937 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201901741 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116035293 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124431478 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.137079124 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118829889 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108627374 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.12491644 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121821355 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108787335 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203314675 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111746706 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127512412 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100675067 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119265387 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150512319 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127557289 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20196971 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104140578 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119432392 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126012611 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177370248 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126920691 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111135032 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110270584 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14516739 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112072224 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109332225 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09982851 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150848404 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125634805 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100265862 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134743787 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100957272 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084667376 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134616581 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112696341 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122505542 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133411117 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111516296 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10233685 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135318902 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111027801 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101592704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113167075 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125456728 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111625692 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104227418 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151423205 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109693684 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100046857 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124894027 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10370523 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119846849 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125913965 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123064434 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101491772 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125577239 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1032815 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111530188 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100477623 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.136020021 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10149036 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113411702 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138725605 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110043509 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103568396 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125131192 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111388154 seconds)
done (took 9.865775229 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112897382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146078962 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20094539 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211239814 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129339732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142383277 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116330461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12570168 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139713289 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121018966 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137951905 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158105764 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181144303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143375439 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116713501 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137347078 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114276911 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110719547 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207043155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125319335 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150703718 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120824191 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127125588 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143148216 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106053655 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.160726027 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111576325 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113654891 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103788624 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1402452 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126580193 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12851112 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11099666 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124011542 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146325365 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117794848 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117449646 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1381822 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10724868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106439119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138515363 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122118393 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105568244 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141866018 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11363745 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120771619 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137676355 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119830833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107352398 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136770618 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108131254 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.129867333 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14291772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124243454 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116860934 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14262811 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120285805 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117701916 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13543019 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118186819 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105675742 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132638088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108191891 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126748954 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134267927 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117544811 seconds)
  done (took 9.607206202 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130392182 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134842556 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140677597 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117231595 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11138839 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124447996 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100742664 seconds)
  done (took 1.880260935 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107387676 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185235069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209618594 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210679733 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180837271 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.22203237 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149303385 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102244345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135009942 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136684334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186368414 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23907712 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111244649 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142763269 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187289807 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128656848 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212476646 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10434487 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115592671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213468292 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117316973 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156068436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116317905 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101771132 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206363795 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102759392 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.255835956 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119806812 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136763893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115858305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115369359 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20614645 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206448488 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117043527 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108864964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209733182 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207909309 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117367573 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220112575 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106274852 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206966117 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115525883 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115844148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141734798 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116759179 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196287347 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120299924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115432002 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140239332 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189172458 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137732374 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1836488 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138025797 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117376759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112536707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143913373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124335215 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116740532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215125467 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118784103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210206648 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210802452 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182554708 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212846325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125655625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210040057 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204396977 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114583486 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109873829 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14425288 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187500991 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140701946 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113564971 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201179977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119372276 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213677367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185544214 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139740962 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115027023 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104663343 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141461971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10182406 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.221643718 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115850942 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113550977 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147913543 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115666539 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116382053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134045252 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125798288 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139619537 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114663181 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120511313 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139223368 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119425705 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215367211 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11320371 seconds)
  done (took 15.758899868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110436403 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103128507 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108027724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129340707 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103755129 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103732733 seconds)
  done (took 1.697830607 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145995264 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117003477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150054216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118628954 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160625506 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216440558 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219746599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111428018 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159467145 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126998215 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.21569268 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192134765 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218033083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120140585 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.221314432 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117856813 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221115563 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113175155 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151303188 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114764739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114869673 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149103125 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1143664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208985658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116951674 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117204231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138543239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12583501 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147884098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113447155 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119130463 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.162121513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111263703 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110947741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.221836725 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10923647 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139132904 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120344857 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119039619 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146120475 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193293569 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140424999 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123647269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119029343 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136826317 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110393424 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145094163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111629493 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221317206 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119910019 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121162319 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144239721 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119379776 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119260177 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135827178 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1112987 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119079322 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.223173012 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119788475 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136395925 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117426623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116847469 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13860414 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121490142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1428964 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120623532 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10967651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142005777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115781453 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11774323 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143715737 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12004535 seconds)
  done (took 11.237707618 seconds)
done (took 41.195847439 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.680331529 seconds)
  done (took 2.710904885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.895924896 seconds)
  done (took 1.927187881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.201322477 seconds)
  done (took 19.269392221 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.428707925 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471294408 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.164902298 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147465685 seconds)
  done (took 3.248574478 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.826214741 seconds)
  done (took 1.883493898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331011473 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236383344 seconds)
  done (took 1.608586383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736558027 seconds)
  done (took 1.792449207 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.513414419 seconds)
  done (took 2.553473516 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288483177 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239178373 seconds)
  done (took 1.583059391 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.627071694 seconds)
  done (took 1.678850611 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.558844412 seconds)
  done (took 20.614254491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259897426 seconds)
  done (took 1.314360181 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29333176 seconds)
  done (took 1.35150872 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.603610276 seconds)
  done (took 4.66152675 seconds)
done (took 67.243285524 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11936632 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116495078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115947681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140583093 seconds)
  done (took 1.53547016 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127474269 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116494577 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145095456 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117836849 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122648039 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.1167329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141614469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118911007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115684145 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14451017 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117644863 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115730313 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14464821 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116066987 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114866562 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143551886 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12004161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.1164609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141807029 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118117605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116611817 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144666919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120397357 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119055932 seconds)
  done (took 4.073867319 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119210035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107078901 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109279188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13198108 seconds)
  done (took 1.529960127 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131068013 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128019999 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152162643 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124227476 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127949019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152668783 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11562318 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112403297 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14104248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125745588 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131193858 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154834488 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127736239 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116864075 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152260989 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111558311 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115386513 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152717152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123716819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12372197 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143631597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124324559 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121125217 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150586689 seconds)
  done (took 4.218916595 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196679621 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128621503 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172590508 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160442333 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174592734 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114751575 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143348182 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149180273 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123568983 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142979323 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121236957 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161033686 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147984624 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118851866 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116086897 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147171959 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129676127 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120938215 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18843608 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12053059 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148909296 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12785376 seconds)
  done (took 4.22035484 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125870782 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10934175 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127313473 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109831678 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120527528 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134290641 seconds)
  done (took 1.794348353 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112750327 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101721819 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10193298 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126849406 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106655508 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102108101 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099867195 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128121098 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102229937 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101034803 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129545971 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101878918 seconds)
  done (took 2.374022918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333872441 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106663486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13316503 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11192811 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112881931 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.1041626 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145061872 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105943564 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267081157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103224702 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129488852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194719589 seconds)
  done (took 2.91591941 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204565199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146180325 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248119281 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375148909 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184451383 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157317007 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.301866552 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188585407 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174112006 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161373296 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207707931 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157653202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176766888 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183516998 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162373127 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15846801 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185786112 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203425932 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165929505 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233287056 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155600734 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1959269 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185556047 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173696359 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136592198 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184762373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118389696 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12568809 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191059088 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186312982 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172183071 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174219805 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138572156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213742832 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25244056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1708953 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295296273 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131426227 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190421473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190307428 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254931063 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162966338 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188585122 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175119395 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126841685 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208193377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150881734 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208144509 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130977555 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169168445 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179438569 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201789155 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200338216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134340612 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318875735 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131812415 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166779784 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176594391 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211912639 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223809111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176005876 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148068673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200195573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187750642 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235411204 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137860268 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189234341 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121474683 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189603557 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228545067 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176657356 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183716497 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232402626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128106683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194916049 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192749913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151822752 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22814773 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165965916 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145272756 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148032436 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155894623 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126757753 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185086986 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14499538 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211774586 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156171623 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343242327 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179434803 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180963438 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183686214 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159128543 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18659095 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144949756 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10152199 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167378979 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159592408 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181935114 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126021728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18125672 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137463036 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123485845 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17534791 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119441487 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192549824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133459385 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188229155 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166246309 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155880931 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176427297 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17225933 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161068189 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192003799 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213934454 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130421295 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130095396 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241735506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190488229 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135273155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198990254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192726442 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175130942 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132687603 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189232928 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216530603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142429849 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222457655 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136280518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158130085 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140598732 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193397154 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158652838 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179652625 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127009535 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187507025 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188932817 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151119113 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138320778 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203345788 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130753183 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121767186 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163497868 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135099633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165781212 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148145997 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136177439 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177575177 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161481411 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190099709 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178248825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134780404 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195899095 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13036362 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189426083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147357487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115709073 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198050445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220217308 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127842319 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202933665 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160661957 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209000279 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195309253 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127795566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205421668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127198264 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117790004 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185072551 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169154599 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185407511 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210282631 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180613052 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189122209 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186478729 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146733257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192227583 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180343272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181403644 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141497485 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195237836 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164067534 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146243991 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122188081 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124707169 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161338606 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127501913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16236124 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176456461 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187040027 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203343334 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165190555 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162978911 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188658246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150120875 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157729355 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198743954 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136720904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213001881 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212916982 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177034896 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164927247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160286669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117858487 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15207906 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131807113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186485164 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134934175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158316177 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141035784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214860187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168347876 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173322959 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216999204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162768393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225568094 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118090277 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185280936 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165739609 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191762706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180551701 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157409675 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159193665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215936549 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138767927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216472658 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16539663 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204720283 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219636346 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161917329 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156361953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147464086 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185547316 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138150704 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185591378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145733749 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12760243 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176989704 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135740965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16478552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18098989 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168340535 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200472362 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158121796 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195366606 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124342066 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165431011 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175300194 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168619608 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106063751 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165784702 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218036378 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172473294 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153265535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196578205 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129118336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337740979 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185351068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201039408 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133231492 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164378626 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169373856 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186139545 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158025695 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209898974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138303287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231558395 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194262937 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141304607 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154502695 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148274336 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147678616 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165261571 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149811161 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185959632 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14139259 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210509831 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162184687 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16863847 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200310509 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144746188 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146384266 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163932252 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248658233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164415552 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197016656 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160346814 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190170486 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205434199 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122870907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124150188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.155582648 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184159904 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125687262 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200518993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203622541 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213219371 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172356314 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188730667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137394234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151886628 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165187605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173805359 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187367264 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161497231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135040669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212090721 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126682251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155547147 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159443867 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309734995 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145896714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197966977 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105156481 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304888283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128113246 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158601388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16321391 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195358453 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.129179789 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.20566581 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171254055 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163919318 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162692128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132907792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207113121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212457881 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190387554 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171301115 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172061749 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160633597 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184935477 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171086703 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171967142 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14483196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183750703 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189958912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205322471 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12933859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193797123 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165093136 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196922627 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19756965 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139493313 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205169479 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127976025 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162297777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163801535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125304626 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183390923 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202135375 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129343524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199369498 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169818162 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128795823 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154252294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145045751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189178101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138541124 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154188853 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182223948 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154541771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178978959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232552051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127961164 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192484335 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144552425 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155568952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137315582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140273176 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157816726 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171103596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207345666 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130074767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201909607 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163501092 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188764513 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155252806 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169403981 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.327302549 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.152579889 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189211242 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175932419 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194361819 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176997031 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171350709 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194328644 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146664403 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192367371 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144509959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245090626 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188485833 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164967689 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12873727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170300605 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135710045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159813544 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150822718 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193368622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139641946 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132768947 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192839836 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143152768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173711719 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139307756 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223425777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147654641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211574778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213494218 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135137977 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202265091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172392315 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156429579 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161452223 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196301247 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142175288 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179092416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130662885 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163498529 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209146592 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152863072 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157573196 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198198621 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167913052 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196696119 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133617943 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202768855 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140086481 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201607907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126194519 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17874521 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171705784 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159158439 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126745222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168845985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184568725 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.160541453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167783052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171633957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222724706 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122970197 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157478644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283010015 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187146321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191848276 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163517389 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135617855 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169810388 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158555149 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18772051 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169682839 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.15628574 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12843635 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142400306 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182705793 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142894607 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195031296 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181222376 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185231295 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209068771 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134036229 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249582339 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169877807 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16949689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144976518 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1274251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137284245 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159564907 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139553466 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210413238 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241727591 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160530731 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173865603 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132666312 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153067724 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130313327 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161568482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176093646 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165061192 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173694749 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103203562 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164759263 seconds)
  done (took 85.192170161 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164972681 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151056644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166351812 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220292638 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19380663 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288598629 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227369525 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244110098 seconds)
  done (took 2.796307241 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123059362 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157306828 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140916173 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142600744 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109210869 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441675728 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129341483 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146350274 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159387083 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14888658 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133866528 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.548351505 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115245648 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141734452 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120307249 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132987639 seconds)
  done (took 4.030104489 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.085267197 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537485756 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.861084743 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289975063 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258326619 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20127855 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.731430212 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196185466 seconds)
  done (took 12.306085842 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.157046388 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143751809 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.372186002 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.270730676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.204526083 seconds)
  done (took 2.301032826 seconds)
done (took 130.332950787 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12717473 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120564224 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120853832 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151176806 seconds)
  done (took 1.659253156 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.181639561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089952757 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092021776 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11573686 seconds)
  done (took 1.632206766 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.511125126 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091543972 seconds)
  done (took 1.78163567 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15716729 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134717671 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163049982 seconds)
  done (took 1.618142316 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147576342 seconds)
  done (took 1.299459895 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130111021 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123838151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232949561 seconds)
  done (took 1.645571492 seconds)
done (took 10.790125906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123699159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.919897398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431203931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131583603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709095211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424079231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.455598205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172758003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172516049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136088049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130213438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686601438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.466840229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875203925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.42505727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904442454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693670462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109241693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143472363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110059172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.435137695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135269159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110542855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109572471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.742021896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418809952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107768712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.908596455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108414972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425185292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108919338 seconds)
  done (took 21.08766772 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122067035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16530069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144348558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111365699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112162408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137435999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121015988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12046117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201555782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108649237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15808796 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109453128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11341152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137085068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134829079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108375845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138773983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112309125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116230627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138142103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131343665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107889493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136062886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112708714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107498738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157497754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110631185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119970669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135370944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113936632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113206806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135838784 seconds)
  done (took 5.256605825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16194133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174522689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146423366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145998612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185035128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111984761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222064003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147071898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204690759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110362838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129636334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136991346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150131442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108814323 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163875379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108489568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110568012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139910587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118424809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110567604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159556717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109087835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110002339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139799075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110056318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132509911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136944124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122606146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134110636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115295502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116397248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109280087 seconds)
  done (took 5.541283673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129687338 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124036147 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131282302 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160870903 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118691633 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122457222 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15223697 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119216444 seconds)
  done (took 2.229084906 seconds)
done (took 35.273745561 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141043899 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130613953 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128932248 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151929082 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189681238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144667013 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127421954 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115739178 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150316859 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130620894 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108708221 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116402914 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157800101 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120389621 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218762209 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12496796 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223533162 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.190850454 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146480613 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124692618 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118016885 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226620134 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121282472 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116143038 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.221983402 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111301462 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.21227129 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119446355 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147469173 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112173207 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218375891 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122103639 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116495317 seconds)
  done (took 6.060991589 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.21444068 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118628453 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146511123 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117583218 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118715709 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145103839 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211837517 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145583845 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1183792 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116866156 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115523299 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220963721 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122816519 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142171593 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121303302 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110346559 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238403533 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120341269 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109315615 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120538229 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114344511 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116366015 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253113509 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113082539 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116771453 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145830423 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12213068 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122492104 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146813823 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121595457 seconds)
  done (took 5.423052785 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129116475 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131113037 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135088627 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.213926569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145312252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157452359 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138351863 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133595735 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168747431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112865415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126099435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177153308 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128622143 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121209252 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144807508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130443468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134070776 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142411374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120567501 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128638798 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160698553 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129716766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135045095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148941467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11157674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118719436 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150061199 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127270788 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120851466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153804695 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116491362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115567669 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11399707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175829068 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112987913 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154076665 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139732331 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123710971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153088474 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145607436 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114908187 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142628887 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140854422 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165569608 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141304711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126450669 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123656898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154568963 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112386626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130699611 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181406972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113177925 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132328973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.137871011 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111731478 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120065644 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111598139 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144179033 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127057901 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114180372 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166214341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120250908 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121882048 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142790932 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12354153 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110037067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.139550034 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118266013 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137518065 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146992212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14984386 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112916289 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12437774 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153993507 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123659908 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124166383 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141474624 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124383474 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123365836 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147361395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126890476 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115522688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143081253 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131186695 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132822859 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154417194 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124733916 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123856717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.143093365 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116035844 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128656314 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113284982 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146391086 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12589833 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111639087 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145413175 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125642003 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123534667 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.139076659 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137455296 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115495431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.139841443 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138724633 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115582075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.144037139 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124631708 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154460494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.139455078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126591838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125936713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111673746 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150052223 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116069156 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111505736 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.158665652 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128522261 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118826769 seconds)
  done (took 16.836565341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.323476102 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.273686116 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213358386 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.243472395 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125360015 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.237685274 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299313019 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305269657 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112166157 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181678466 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163938307 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274548039 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112089454 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.173868052 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307294516 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358791342 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170178378 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153381102 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177512821 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128314754 seconds)
  done (took 5.520036268 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139879111 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14747039 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164866764 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140979727 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122674832 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1579472 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113117119 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135704318 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153791521 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123449252 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115053452 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158095832 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126615613 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129368018 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157174056 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147088762 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119055023 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1464309 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13609248 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117652334 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130917536 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13943894 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121203976 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163896713 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132008496 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122804921 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141317829 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118064986 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118783781 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151101292 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118108887 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132810216 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149382643 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106147093 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125571349 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127184943 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148272292 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116602046 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116700637 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146681187 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129144271 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125243712 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150235731 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099450168 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.1306228 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10907598 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155699594 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125954052 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106053633 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161044203 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126869669 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127328846 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119599417 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165639549 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119647407 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128589177 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154457767 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128645298 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118316338 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140714326 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11163983 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116365928 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150212319 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129739008 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125304312 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161502634 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130379445 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112997185 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146879654 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11784009 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116212824 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155655462 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134191915 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121476023 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.148515844 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127078926 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121128675 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094181183 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150934675 seconds)
  done (took 11.668751679 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145512499 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12285498 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130622914 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.1790497 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126943095 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117961003 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153744785 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132647929 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127583434 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161163336 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129291359 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126334748 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165750062 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123959037 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122778561 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158952332 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127990479 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151319879 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162044009 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140126805 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1571373 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118429587 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126357625 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12430741 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172516334 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124515788 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169307125 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128149014 seconds)
  done (took 5.119246429 seconds)
done (took 51.797575898 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.356703332 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.518557334 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.292348915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.293018061 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.305451181 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293359798 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.291973342 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29252446 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.812066068 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.263333998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.293730405 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.291910268 seconds)
done (took 29.491402145 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.390037585 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.825350409 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581905891 seconds)
  done (took 4.588431033 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.285167362 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.285282411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.532203495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.283351577 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.302372752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.286849773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290556351 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282367556 seconds)
  done (took 16.442885451 seconds)
done (took 26.88813269 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.324666312 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.466331622 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.514434785 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.283638997 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.293008279 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.284051817 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.285309837 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.301139851 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284018552 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.286830026 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.684573844 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.541170322 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.294870653 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.644375324 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.285402002 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.315506953 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.282818544 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.505526022 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.283647877 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.31896538 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.260824051 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.261664366 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.293517969 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.287765638 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.290697446 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.296240928 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.29571787 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.282670748 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482987488 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.306324455 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.320603827 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.28661427 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.295949204 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.284139848 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.280911768 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.290506142 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.478446035 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.286816357 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.264705726 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.310315292 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.484473712 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.292553638 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.281365826 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.290607175 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.286252371 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.315302039 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.281063619 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.38988939 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.305073342 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.290033796 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.346652324 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.674781854 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.284662579 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.285310787 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.295015701 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.508129899 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.298555242 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.33150043 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.310624996 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.296475357 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.282975526 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.292670943 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.290998544 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.287424921 seconds)
  done (took 148.822215534 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.285154967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.283352493 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.286929623 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.345114718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.286172377 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.286580527 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285825724 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.284439423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.286002945 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288430302 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.287459676 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.287344776 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287243106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.227617008 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295514828 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.310259475 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.286788663 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.286031959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.295655904 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.285235063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.288523526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.28598917 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.30142513 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.288327225 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.325879166 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.353845323 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.300882575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.30403024 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.296746901 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.28372632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.323844225 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.288149503 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857020771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.136128699 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.298179494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.290791522 seconds)
  done (took 83.173214235 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.287073807 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.286103483 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285957555 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.317824292 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.286326746 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819105266 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818154823 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.259777049 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.387855373 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.529644723 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476236493 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.283642123 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376423472 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.297343399 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.284704473 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.302601456 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.312903195 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289597282 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.288299157 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820572946 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288687156 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.299316297 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.454379463 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.298025365 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316682046 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.679467632 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.379448101 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282696222 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317676827 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.61482507 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.330529552 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285520569 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594489247 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.47117678 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397580238 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.288174334 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317660419 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.288146173 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567258293 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.287686558 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.288060845 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287499454 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287973164 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.291283998 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888414702 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.286130558 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8214708 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288978045 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.209180447 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.285451866 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.288276504 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.208674978 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.927359304 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.289451984 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.289483637 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.291621048 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287981629 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289209068 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.319552655 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.222608138 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.380947669 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289188395 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.292127905 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316799712 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.29125299 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.36011369 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289255992 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.110939127 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.345214046 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.387772029 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813662774 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289879387 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380962861 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40127356 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.283780682 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.28844959 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.288378522 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.288651258 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.397373827 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.285608984 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.947789105 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454861052 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.299166823 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.498135909 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.384262428 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.284922714 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.288162987 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289556218 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.288224305 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573267512 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943657843 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376670402 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.28450036 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.288799146 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288049915 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.944677083 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806191198 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487406099 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.287155542 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.71800783 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.289149553 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.116381372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792839407 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88423679 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.288399203 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395964451 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451971084 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298298757 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.288339389 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.477719202 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.288368321 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.347653093 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284222689 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.687248057 seconds)
  done (took 381.709869702 seconds)
done (took 614.884926668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.165172659 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.110405023 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.255161395 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.120631503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.096887325 seconds)
  done (took 11.929821305 seconds)
done (took 13.111034782 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468605119 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46742532 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341960026 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471295246 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317225384 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483529847 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.450163868 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.303872125 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393282928 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.362296421 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392784503 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335980778 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319075512 seconds)
  done (took 19.289031783 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560537319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.295911108 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352256367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542549902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330831261 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566672855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.589623637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.298594248 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435862571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312347639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30884867 seconds)
  done (took 18.776610792 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565207541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.297497534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35362658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559750657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331589553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579228184 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.590460739 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.297194239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440957168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310636285 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306327426 seconds)
  done (took 18.813702119 seconds)
done (took 58.059061399 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.323282153 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.380255374 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.317620382 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.3052132 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.305803652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303868622 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.307399359 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.304752062 seconds)
  done (took 11.729724281 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.304166608 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302803759 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.303041758 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303025226 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.303289316 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.304657517 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301758003 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.304153648 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.302244201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.301405395 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.305133931 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.302616622 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.303482092 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.302730054 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.303179455 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.304628188 seconds)
  done (took 22.034643128 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.3078928 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.303074267 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.30343524 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302836576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.303363483 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.304355536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303560362 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302459442 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303078014 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.303273076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304195024 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.301929839 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.303259378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.302555419 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.302205843 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305892136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.304715719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.302914181 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307033142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.301702959 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.302634178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.303151833 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.303261344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.304027127 seconds)
  done (took 32.469035948 seconds)
done (took 67.414824626 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.289954495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.303674636 seconds)
  done (took 5.774853123 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.362012857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.360602173 seconds)
  done (took 3.904797022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304642758 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.303709414 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.303982915 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303129845 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303962147 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.302086078 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304260866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.303190977 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.303387582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.302378866 seconds)
  done (took 14.216442439 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.303836294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303652391 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303475973 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.305496438 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.30489586 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.302175703 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.303977575 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.303465329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.303201976 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.30471855 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.302655051 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305079865 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.303455972 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303381756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.303985941 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.303802327 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.303407357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.303633719 seconds)
  done (took 24.650375547 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.318662534 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.322433094 seconds)
  done (took 3.823902674 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.432058105 seconds)
    (2/7) benchmarking "second"...
    done (took 1.344039957 seconds)
    (3/7) benchmarking "month"...
    done (took 1.40815059 seconds)
    (4/7) benchmarking "year"...
    done (took 1.399578847 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.343761015 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.323782443 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.344875209 seconds)
  done (took 10.779298089 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.307654574 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.502636393 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.624301374 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.311194653 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.304814079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.308632586 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.495523752 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.3096183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.311965645 seconds)
  done (took 13.660212055 seconds)
done (took 77.992857113 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.30474251 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.309263887 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.302016755 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.320556021 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.601437178 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.323911295 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.290755054 seconds)
done (took 16.636900779 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.281464448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.276190402 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.281934469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271584347 seconds)
  done (took 10.29432246 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.268439418 seconds)
    (2/2) benchmarking "read"...
    done (took 1.616471384 seconds)
  done (took 5.067862028 seconds)
done (took 16.545523251 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308111318 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305815021 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.306160024 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.305849659 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.304919154 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.305642477 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.304174979 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.304825198 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.304509632 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.304325999 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.305557857 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.304098524 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303589827 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305793737 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305077048 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305837011 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.305515981 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.305008543 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307166239 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.305772626 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306040768 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306279571 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.305618094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.305486878 seconds)
  done (took 32.514061404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.306614225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.306100654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.305219234 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306599761 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.305865325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.306151969 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304702825 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.306717308 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.307797813 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.304163313 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307178028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.306116671 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305808238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306995393 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30588741 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.30601455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.306028814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304105589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30668436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.306469605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.306170772 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307498134 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.30695444 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306030455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.308130528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307242826 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.306668438 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.30604742 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306229248 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.30630353 seconds)
  done (took 40.372344456 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.308892999 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.307886751 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.306667107 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.306192322 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30754615 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.307409903 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.306598789 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.308207401 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306484515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.306590895 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.306492688 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.30699583 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.306336256 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.306045771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.306863288 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308638988 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.307707493 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.309046181 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.307131032 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.308316404 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.307661436 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.308811273 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.307721675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.30851138 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.306746701 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307693389 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.308698873 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.307576247 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.308200701 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.309041078 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.306785618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307985901 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.307808293 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.30821643 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.308776287 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.308206398 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.30962019 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.309521123 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.308289189 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.310345576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.308316717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.308849418 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.308934967 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.309388031 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.30931579 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.309338302 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.309081069 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.307995945 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.309155205 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.309775877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.310379626 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.309239884 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.310790976 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.310117557 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.309924636 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309578704 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.310808163 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.310594773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.309303924 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.310411831 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.310384842 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.311759791 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.31096468 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.310769055 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.311502121 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309856996 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.310739806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.310464712 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.311929277 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.31108216 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.311231212 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309998383 seconds)
  done (took 95.421643203 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.312063922 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31145282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312648398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311580307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311667293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311645375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31313826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311270536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311384017 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311599455 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31194808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310998013 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312952276 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312034994 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312698975 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311411573 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311517522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311710797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.313891676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311167783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311827598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312694422 seconds)
  done (took 30.052420322 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313626339 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312573453 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.313452751 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315064493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316911921 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316305807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313642263 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314202394 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31309028 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312823693 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313539802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313948935 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315312648 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312943055 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312268533 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315395094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312783485 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315873837 seconds)
  done (took 24.843679947 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.314748015 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.312400702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.313759294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311971718 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.314499534 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.315991617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314704554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.314411816 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.313193119 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.314412338 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.313497964 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313584013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.31439664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313695751 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314409723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.314397436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.313030559 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314222401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315345581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314142673 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314896226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316904389 seconds)
  done (took 30.103910038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31628878 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314241225 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314814053 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315254515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314892425 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316227294 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316459948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.315682786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.316419886 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.314064161 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316537276 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31770979 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.318082696 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316118143 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.31499131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314272307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31578442 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316069996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317201373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315644781 seconds)
  done (took 27.509115018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318029495 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316461064 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316245677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316653467 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315606042 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316773093 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317072525 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317012703 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318570384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.317484365 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316721641 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316071479 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317924596 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317202994 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317955793 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317276766 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317198826 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316758365 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318036611 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317122686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318338608 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318416116 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319002751 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318728591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317860948 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318300611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319082863 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319008243 seconds)
  done (took 38.084408309 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319706743 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317073486 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.317248878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.318867797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317816494 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.317692315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.319769484 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.318706825 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.31813348 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318762586 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.319803955 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.317191809 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318160328 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318274333 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318627647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.318416117 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318074692 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.319971197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318719885 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318818749 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.32022985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320514214 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.31907267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318651396 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31880178 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317890845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319063771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317940347 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32041351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31907077 seconds)
  done (took 40.756575504 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.339466979 seconds)
    (2/2) benchmarking "in"...
    done (took 1.338575338 seconds)
  done (took 3.873226727 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320481764 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318892873 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.320152512 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318769013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.319379513 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32004079 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319947964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319219429 seconds)
  done (took 11.752929695 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.313700924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.322250149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320370269 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320276206 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.320954618 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312992393 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320625611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.325454093 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.314447746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.311748433 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.314333963 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.314856743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.317869459 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316070227 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.316392783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317947519 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.325461886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.322730431 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.324383056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.321757673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321184578 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317739214 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319755465 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.325162237 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.31412634 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.321561537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.321944451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.326857044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316323624 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.321447406 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.319809601 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.324061635 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.324488284 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.323845181 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323968322 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.322134765 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327025788 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323144697 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.324879672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3279345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32386006 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.323230589 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.316612199 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.322328519 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320726425 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.326975937 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.322407598 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.322757809 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.31515027 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.318705081 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.323563408 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317048578 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.326041537 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32045366 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.322891273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328479791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.330455511 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.316898981 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.31830021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.325877513 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.333680661 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.327309405 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324337672 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.330496973 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321880418 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.325405765 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329460546 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332193009 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.324967728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.326726986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.326766533 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335081777 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.330421727 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.329174598 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326846287 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.325349115 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320450511 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327631498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326731302 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330687615 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.330925149 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325978782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322133022 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324426113 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.319832053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.328069997 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.326275943 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.326293939 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.318525211 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327980073 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.333761295 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.327100224 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318728167 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.321236028 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323758611 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.330075991 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.318216562 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322152897 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.329517238 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.32849956 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328404199 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321305491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.325234023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331385609 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329588678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.329359472 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.332065054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322844636 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.330912056 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.332492824 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329233528 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321194109 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.324237469 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.331928846 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320951309 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.323672616 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.331245052 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.324260038 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.333502321 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329141608 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325274673 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.331276977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.333502896 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.328830571 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.322346684 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.331953604 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328750979 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.325359146 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.334532114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.329729225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.327465057 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.325286867 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.333682048 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324248458 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332177468 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323915229 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.333050134 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.330822306 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.330916944 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.325047184 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.331019995 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326874294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.328809366 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.334608817 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.335508999 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.325479667 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.336087306 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.32939469 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.327464455 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.331963178 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.334277462 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329557286 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.325672374 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.332953683 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.322690365 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332007466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.323962387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.333272626 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330527426 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.330309579 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327124492 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.318785621 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322542252 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329130665 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.324903468 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.327302294 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328545934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.323143729 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.320829468 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.31316405 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.322924787 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.312470055 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.315194541 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.323301679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.322221698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.32101731 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.316814136 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328550617 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321024195 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322434917 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.315853063 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.318576737 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.326670856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.325601523 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.327677822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.321740123 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.324607421 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.315369149 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.317914708 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324184287 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.314546157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.323517487 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325580988 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325780366 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.314694739 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.322244028 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.313714852 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.324856261 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.318967456 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.322986175 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.318195283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317973452 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311976093 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320015499 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.313013829 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.321295337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.308795697 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.318530337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.318035881 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.317703873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318633178 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.310615315 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314606319 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31834369 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.315942594 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316498825 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.309877849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.319450197 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.307687915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.311663648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.318151581 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.312985498 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.314781036 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.321074752 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310637589 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318350895 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314725632 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.30913052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.315805595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308399296 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.311723562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315821505 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.312392616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.30703497 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315787418 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.313664959 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.299269933 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.305775524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.314319484 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.306234287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.300435082 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.309213483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307176363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.308060219 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.302458296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29603633 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306364875 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.304861622 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.311949556 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.297012395 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.308505835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.294238697 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.301750677 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.296771674 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.300595137 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29973093 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302315926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3092518 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.299924596 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292397517 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.30030312 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.295407012 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297242583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288007006 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.300077488 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.297261333 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2983421 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291181301 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.291646584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.296027165 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.287639794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.298089358 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.289151186 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303483074 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.308315702 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294076855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.297326629 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.296010455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296180495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294548994 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.287126895 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28923136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288845351 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.286268068 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.286850556 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.293779805 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285686606 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.29427253 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290819285 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.29421386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.290949957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.289700904 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.282624683 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.292565955 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.289925483 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.291597545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.282404277 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.292163368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.283410453 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288952328 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.288149552 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.28238438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295244674 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292123614 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.284813392 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.283286809 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.281231729 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27994829 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.281918137 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.290825315 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279499323 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.288082978 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.281495156 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280562555 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27948851 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287371805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292851866 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.277393959 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.287839808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284581125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.278678387 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275270582 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.285422285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286001966 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.292374251 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273907257 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.283026961 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282450288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283592748 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.280260151 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.28161011 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280210175 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.280221409 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286839467 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284919216 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277656631 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283035141 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289417729 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280714445 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.279414349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272315203 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28053805 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.289017776 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274236894 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276589324 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274549391 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.280287717 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279812118 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278254182 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.279923957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278271218 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283692732 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28223519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278815203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276683002 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281807939 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288253369 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281762875 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28967998 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273361726 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279920448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275579381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.271048523 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270415218 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270758772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279210962 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268404673 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278556555 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275873398 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270373522 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275192934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.281276331 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267635098 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273432727 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280681377 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270001892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276594365 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27416154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265239685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.277539068 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275226899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265688353 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269296689 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270338649 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275694773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267387242 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276310428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268903907 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276513274 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274949379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273553703 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.2747955 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.271252744 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266386916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274477487 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271801152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281938028 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267303537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276177165 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266675405 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277393324 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282725311 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268241422 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276403811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27325639 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266158209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270056844 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.276190032 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2638534 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273028882 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264796067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266331829 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267517872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273987628 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273036613 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274520859 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265037415 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267671357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272570344 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270387051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271422508 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26823254 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278623279 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265396058 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265482432 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271935753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266809396 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276706823 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263979724 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267981585 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268393515 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.274722453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27212035 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271010548 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263589441 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265021309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277051184 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27548959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.269540993 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.266483928 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274474304 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266405643 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268440073 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268926507 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266871114 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267590663 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274796211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267718039 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266584195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267622484 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274643905 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276797208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276234453 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267432463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278487801 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281459595 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279493797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26532211 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269973137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268635516 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.274865148 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273450335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266823763 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279572133 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280721263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274665571 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272556964 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.27383166 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266148158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277435878 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274111542 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269840119 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27859038 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27029614 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280596419 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27236639 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272767284 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268346178 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266301825 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26813247 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2671237 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27363313 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272910787 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276579925 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270107699 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279980254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272703682 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27177612 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272489418 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264608457 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274341155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266919993 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273776991 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275761001 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266167223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275206031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274600607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26624853 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269101011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276469934 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273002937 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267870047 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269317961 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278274398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28301364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272899045 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267603425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270523675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.276149604 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275556567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.273311826 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26777891 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280582251 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284030484 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267286872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270957188 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277864052 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284464537 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27390066 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273617109 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271463386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271310635 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277391897 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274080642 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278377646 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280133088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26879802 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276970613 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26913037 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270547516 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276057647 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284673054 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275106883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268383154 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281530016 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284324899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273452538 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285570039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280772934 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275479195 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279841098 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26850148 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277319262 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271354931 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280965791 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.276135923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275249715 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276453358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267418482 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276061954 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282876773 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.284085914 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274850042 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26787827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271140826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277048438 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.276908297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276420543 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274994301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.276472051 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277358969 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269540709 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286121589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29037574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279611061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275869815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277025515 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276579816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281302298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275178811 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279743953 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277958248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276933145 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274608912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285138801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277255193 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272768963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273212066 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272284123 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280079323 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28532419 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295033183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280571458 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282040612 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279506625 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277369065 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271715786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281302705 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279201349 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272256057 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27431341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280810661 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278442729 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279069174 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272557822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281372506 seconds)
  done (took 774.02429975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27858158 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277665406 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277789378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279232652 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278668328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279375001 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278055128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279529545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278826169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279507162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278557156 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279216891 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277976922 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28002169 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278968154 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279652155 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27913039 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279302435 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27916072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279539611 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279304527 seconds)
  done (took 28.01920538 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280633247 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279502359 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28089381 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279900419 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279516249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280468324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2802892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279979983 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279818048 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278973126 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281116497 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28040565 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279959341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282549476 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28053625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280067434 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281733666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280981398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28076396 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282614068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281958895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282765394 seconds)
  done (took 29.337908662 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283383806 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27961561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274066643 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.281003465 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280507262 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279289348 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280292792 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281610231 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279516899 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270026814 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269500974 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.271056296 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271324505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.279342383 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.274601259 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.282853727 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279634157 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274712338 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275229981 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.276523198 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279375448 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.287877452 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.275990862 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.270368677 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276766305 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275299368 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.275594875 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275782283 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.267340869 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279568555 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.275680809 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268700412 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276669051 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27702104 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.268621964 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27879908 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276626704 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.274458178 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.274307369 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273174525 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.283679652 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276352762 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.2792491 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.286903761 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.276828987 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269375935 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279233305 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.276590392 seconds)
  done (took 62.445578695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278142215 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.276917123 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278070321 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275930443 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276675007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.276303262 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277517933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276911564 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.275909471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27588436 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276602114 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277802699 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278252606 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276851662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27809657 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277114644 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277461477 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278167215 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277307151 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27759268 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277373042 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279079844 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277259545 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277008153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277413622 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276696115 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27841868 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.27803047 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27803943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.277625412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279027849 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27819579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278546763 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279536711 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278613364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279243729 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278625926 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27871696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27897666 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27871426 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278595541 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279875391 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278546028 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280634938 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27911731 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279967334 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280089478 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279336078 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279343692 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278193623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.279784322 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28038432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279487628 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278773795 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278761181 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280398847 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280718296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280386468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281507956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.281044159 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281558655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280690527 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282352274 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281215601 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282180106 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280937305 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280767307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280817949 seconds)
  done (took 88.116039035 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280171965 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.280618478 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281924299 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281772902 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281890055 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282286205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282938896 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28115988 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281522241 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281911929 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280377119 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281841303 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283634464 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282021378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28197357 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28107174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281960727 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283054166 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282233067 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281053161 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281978666 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280506709 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283721078 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281245835 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282114341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281373625 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282730017 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282040231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282501344 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280912364 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283768556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282111419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28201004 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282566602 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.282790914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283072135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281916507 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282815786 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28255011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282820493 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282125183 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283198716 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28376903 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.283184298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282089831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284419639 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282935197 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.285762218 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283792273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283480605 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285586466 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283457473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284095727 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284106334 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283918333 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286090387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284059288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28460116 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284871281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283608659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284616845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.285106018 seconds)
  done (took 80.693248381 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285264442 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284215037 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284737654 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286121327 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285462319 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285993434 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284538516 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.286298317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285871324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284936007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28684325 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286718738 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286276066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284938652 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286633893 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286758298 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285842181 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285216194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286292309 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28441384 seconds)
  done (took 26.878853498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287806065 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284938355 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286087758 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285418908 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.286084816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286057451 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285356766 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286150199 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286690806 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286371078 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285953525 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287275231 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286294618 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286831307 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286413477 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286435653 seconds)
  done (took 21.746627163 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288148962 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28731832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.28755173 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288028639 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287452908 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286819946 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286480929 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.286674112 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.286234544 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.28741311 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287345562 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287856998 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288332299 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.288003692 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28678155 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287917386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288333447 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286195042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.286683248 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288509847 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288432807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287984145 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287930492 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287642904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28702334 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287697549 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.287651195 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289356839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289700883 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288747333 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289248901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289329942 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288940504 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.288708107 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.288441327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289891788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.290556036 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289004739 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.290385668 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.290013721 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289387881 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291347659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291122657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.290808564 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290823829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289298908 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289526824 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289428617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289554111 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291349475 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.289755402 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.290818972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29046362 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290144281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290845301 seconds)
  done (took 72.048475317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292033288 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291435162 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290412998 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291605352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290682814 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291461645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292085205 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291932852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29063652 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.290352603 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290356224 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292228292 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291464811 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292147844 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290685048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291494882 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290967083 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292607117 seconds)
  done (took 24.414548781 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2927367 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292191832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292680417 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292801073 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291313433 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291525684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291540627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291269517 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29206725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29330137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292367035 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.292819941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293588589 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291449451 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292300784 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291065902 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293425545 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293186581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293015367 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292058348 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2938102 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292230861 seconds)
  done (took 29.604148514 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285405239 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.283331023 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.282144917 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295800728 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.291567113 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.283044232 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.28456494 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.28246439 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.299414802 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.306654045 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.303540299 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.288833724 seconds)
  done (took 16.658492521 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293907101 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294132974 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293052302 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293043159 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292692136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294273834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294090076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293701687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29427041 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294564701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294266365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2931521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293836954 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294432739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295980265 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295683341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2945628 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295571027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294518403 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294797066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293843565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296318047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297223336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295526899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295365287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294965629 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296147633 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2960649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295854411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29535521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29647617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295543928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29527537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296524254 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295682852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295512605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296687808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29629723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298071792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296822926 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295787728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2960844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296300128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296763635 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298101484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295880021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295987035 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29616238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296953025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29702151 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297288033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296378627 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29735818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296933898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297072335 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296943332 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296925099 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29708179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296187924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298118899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297704328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296388118 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297475656 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296465186 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29781611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298828114 seconds)
  done (took 86.699167423 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299468649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29755975 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297147029 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300077816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298342858 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298777126 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298237958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298402688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297889712 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298446321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298172723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297785959 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298208684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299090803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299382794 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298802529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298007581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297924892 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299132288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298812948 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299295942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298578977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299364316 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300309035 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298622474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298296906 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298395837 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300386755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298908035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299348842 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298891706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299043394 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29932136 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29986253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299432604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299223676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299119824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300840427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299625331 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299234485 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29823922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299591367 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300258646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29997193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30033674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30088278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299622786 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300351539 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29854943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300036497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300174504 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301014451 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299406004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299126387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301005774 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300653492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299985564 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299755676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301345497 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300726107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301558432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300867285 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300870101 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300490154 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300977211 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300025301 seconds)
  done (took 86.940724238 seconds)
done (took 1804.09520059 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458761689 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409960377 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291628587 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.306139995 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.287320474 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.2910794 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.301172583 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.287523639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293175929 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.291975239 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292637398 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.485012991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.326026974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288970672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293147325 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391204818 seconds)
  done (took 26.47511122 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319135537 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298677139 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402018342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.297607766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320085855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472067695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.351778282 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298129224 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.45268929 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.312976382 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.298360366 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.313202903 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.296166227 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.295769267 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310013666 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471550762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534168131 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.298916507 seconds)
  done (took 28.52374004 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.702052695 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.323574983 seconds)
  done (took 5.207716514 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316895184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.296066873 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297304215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295325634 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.288267387 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284493292 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297655507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.291949613 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.288369922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.412607611 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.299923652 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307960173 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.295556728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298368267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305313709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340829607 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440764095 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306935174 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305087184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.303369319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296002766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.385190287 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337011508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306393048 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411499294 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.298133549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.299573916 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303693808 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417189271 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306656113 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297967011 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296611123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299559284 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237116187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.815980684 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.293033255 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317404032 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306913077 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.30546022 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.431205902 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.300022014 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306588237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.29123908 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.815076975 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.403027854 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.411035635 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.289902795 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29695699 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300546259 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360856348 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.301083097 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.300758824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.354764074 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.069216358 seconds)
  done (took 83.221918816 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345662619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.292868022 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47529919 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309014684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292447818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289560317 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291680111 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.557271702 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308962682 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293833822 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598901833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889674376 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301046369 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.36601917 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.335320558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345060266 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305341418 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.288857124 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.293308185 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.293317655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845906733 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294705396 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.290913834 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.38679292 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332772855 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816171635 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.294960908 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304576557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.295448799 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290211343 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864706661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.313564989 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.342926424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.291067616 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574396567 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660993235 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627435676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.295176706 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.332844034 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.292104167 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.319577134 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80849669 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650863447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.295758924 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.29353407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802860568 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.297012808 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.303936969 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.300442382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562179523 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.295827932 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.297001023 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.297146222 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.292543342 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.296386521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349275801 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35039994 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820724684 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296977262 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296923652 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302050142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296124755 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3057713 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300766141 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.299781028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650953702 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.547189265 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.303874357 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654848047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854040582 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29762016 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945451541 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29838682 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.322270823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.345423965 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298861015 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.295732468 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816949276 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.310214631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294688176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634847558 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.299192582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590562327 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30891363 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297057204 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867608811 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.302229557 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.346911659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299851534 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305137993 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294296739 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303515051 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578007322 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.336147834 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302255891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.299331391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.332602544 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297274104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.308781527 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302023192 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92870969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.304854768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.299587699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315463577 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29920363 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29853334 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.300152306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.302220364 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578396911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.299301929 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.313180882 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300261762 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295043947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.303783467 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402340697 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303946482 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.594715103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.3037866 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298177951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298785444 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30391205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315010674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295768682 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314770086 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.262263331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.598073677 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.311770187 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.309821586 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302458188 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301894663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298788763 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299348718 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358419636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.305008279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079836339 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.306741475 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.322060569 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302238206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.307607612 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311561523 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302728446 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30136381 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598190942 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579372986 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543055526 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.3010714 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.303106542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102693182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342239829 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481981026 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315845002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.300805336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580633887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.517661666 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.305550452 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.298575122 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.302990482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580770588 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314148149 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611189292 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892081024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303497718 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305053101 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08106569 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.107069581 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.30490967 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.305732684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.588439018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.314505057 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305137218 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.305103009 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304885722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299283005 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306737537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310388994 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.305113821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.304235908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.595957131 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4985863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315354432 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.306762341 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825172275 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328972036 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300399363 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.310428662 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301566277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305179737 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.354557913 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.30772411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338003544 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.305009043 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316338723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849855321 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304549724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.30559024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499718864 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025796544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.307286956 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.306886553 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303976181 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.364432864 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852919791 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.343223076 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.599978358 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.303245652 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345907819 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306646272 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315810607 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851227223 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306819487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302804192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033626793 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.302719891 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.787532234 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.305271335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.30522828 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9500597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302672358 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.307501686 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302671623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30275936 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623267845 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.306445321 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.334791789 seconds)
  done (took 490.834976417 seconds)
done (took 635.443241196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.30788102 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.30712244 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30805709 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308905113 seconds)
  done (took 10.428226363 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324576802 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31366449 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324102495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312151327 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3266691 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313598535 seconds)
  done (took 9.111766377 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306905622 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309053105 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.307724645 seconds)
  done (took 8.12145712 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.510056511 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.326406055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.645478159 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312568709 seconds)
  done (took 8.992127671 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323294692 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.322001597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322740839 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324467823 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325035328 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325558786 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32483821 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323938678 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324401962 seconds)
  done (took 13.112656014 seconds)
done (took 50.963836297 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.402444642 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.447873418 seconds)
    (3/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.486381624 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.327834834 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.461562852 seconds)
    (6/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.283069753 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.381647071 seconds)
    (8/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.380826672 seconds)
    (9/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.385527481 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.3400221 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345190759 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.461483723 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.413420675 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.526600706 seconds)
    (15/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.651217396 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.403076308 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.28698669 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.423551012 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.311203497 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.351941676 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.566270461 seconds)
    (22/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.300039825 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.297613025 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.388955061 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.296775721 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.286260605 seconds)
    (27/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.337291633 seconds)
    (28/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.29896798 seconds)
    (29/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.509116139 seconds)
    (30/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.461837069 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.373014113 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.554486483 seconds)
    (33/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.476599837 seconds)
    (34/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.390503257 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.289226807 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289494086 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.393334086 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.491136761 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.60607369 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.288855983 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.452757102 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.408929098 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.310180475 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.467173852 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379332567 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.465097408 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.4601518 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.463019347 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.467363034 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.29071016 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.345269432 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.287404451 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.393608218 seconds)
    (54/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.463561205 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.42357185 seconds)
    (56/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.389561748 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.462469644 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.416125589 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.290093382 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.308847596 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.45953578 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437296802 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.31163519 seconds)
    (64/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364131465 seconds)
    (65/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.383937799 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.292641049 seconds)
    (67/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.403962315 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.292698883 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.287722814 seconds)
    (70/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.550915093 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.344917293 seconds)
    (72/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.343939153 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.403488597 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.465002076 seconds)
    (75/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.298003525 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.293695244 seconds)
    (77/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.287816411 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.548140562 seconds)
    (79/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.611513791 seconds)
    (80/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.543278565 seconds)
    (81/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.500626547 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.378347953 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.399230162 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.547010513 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.336442729 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.52017943 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.460272608 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.42557478 seconds)
    (89/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.384886574 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.591482567 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.39882747 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.320133857 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.299353233 seconds)
    (94/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.294532934 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.432600482 seconds)
    (96/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.414987032 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347690176 seconds)
    (98/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.430337677 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.378312575 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.468045541 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.432708483 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349972202 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353951329 seconds)
    (104/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.306423545 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.725574207 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.613097158 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.385618319 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.466357507 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.602655107 seconds)
    (110/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.393575884 seconds)
    (111/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.345419555 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34890437 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.426669376 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.419981819 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.537795024 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.317612343 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.42796902 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.533477625 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354753823 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.556842431 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.523473242 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34823728 seconds)
    (123/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.297012937 seconds)
    (124/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.375390037 seconds)
    (125/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.392741416 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.296200448 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.394331458 seconds)
    (128/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.346908913 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.309989892 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.326010505 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.438378839 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.414542401 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.615971765 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.560067744 seconds)
    (135/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.432796031 seconds)
    (136/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.555546435 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.431868198 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.426170969 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.44917423 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.407336927 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31614893 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.553141531 seconds)
    (143/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.399095058 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.438415026 seconds)
    (145/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.525323396 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.357350954 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.320702905 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.333562552 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.387310652 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.484061763 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.298188801 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.302000961 seconds)
    (153/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.492597849 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.383078958 seconds)
    (155/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.485156039 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.413650729 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.485999779 seconds)
    (158/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.331019847 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.499832651 seconds)
    (160/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358312993 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.44815369 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.402652473 seconds)
    (163/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.34505615 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307760734 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.42392772 seconds)
    (166/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354821999 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.378274211 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.550127231 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.660258516 seconds)
    (170/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.322589657 seconds)
    (171/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.436435658 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.537897294 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.554466831 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357850644 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.421878188 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.349453454 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.431545007 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.40148143 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.413760485 seconds)
    (180/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.390566775 seconds)
    (181/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.550027939 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299631256 seconds)
    (183/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.300386248 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.533453576 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.491853391 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.523484313 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.447791799 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.734688762 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343262609 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.420010568 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.300449179 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.474421166 seconds)
  done (took 320.691002619 seconds)
done (took 321.889307219 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348925291 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.415947954 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328638095 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328507425 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330030838 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.332565174 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.347521599 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.330949916 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.344822968 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.345300767 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.335662413 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.335729916 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345072169 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343004958 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.364960776 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.332110086 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330851804 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.342156481 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.346776708 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.346875335 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331719383 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330783833 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358796554 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330877815 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339037646 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339227733 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335448376 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.326646958 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33795684 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346617871 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.325164185 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.332505554 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348797539 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344020016 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332489087 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.342705204 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331962679 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.417315247 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353788789 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.342971072 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341370185 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348263675 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.336860764 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.337974942 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.343777885 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360520361 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339972557 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346105704 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322531761 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336488463 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34868511 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345402267 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341920798 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326490141 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32061605 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34386628 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343341073 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352614315 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341246389 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334094334 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.366982975 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351914944 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346932303 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341795096 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.342979909 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.34780896 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34462258 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.350660383 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.343555071 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.334709689 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334492807 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.343255681 seconds)
done (took 105.89858699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.458670787 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.330402067 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.491426082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341428269 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.500067892 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454498542 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.341907298 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342627867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340589418 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.129132517 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341750156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34148655 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.331837076 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344354194 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455647697 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342775681 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342270183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.02845478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342887762 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.473658793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.333590009 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342842092 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342517153 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.131307236 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.331115866 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.328560153 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.475071746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342650426 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.03084661 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.328621847 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.33135751 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.032019714 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47660472 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361692879 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352424868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35350919 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.500446488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.34226274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.460168056 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.460046515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.49266824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.382055208 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.328369658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.334084685 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345312312 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345313093 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343211428 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371702694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.334377909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345286252 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.031089419 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35348142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344339373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344781707 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345016401 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372860723 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343392108 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344465216 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.476277103 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345373259 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.460784589 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.13490009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.133404725 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.34467728 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.332336278 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.346569465 seconds)
  done (took 108.624186681 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.407119652 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41125634 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.44662127 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334060819 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385687401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449116354 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.335775984 seconds)
  done (took 10.98477475 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343999506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34695511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385884147 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385506282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345812101 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.50895051 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345339465 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34933027 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347306774 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389070591 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346802368 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346357801 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35509885 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.335906244 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386590884 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348954953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.457062548 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33884282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348204358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489086929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34692471 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356322095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.388021503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348968194 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347822064 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343852461 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.120898342 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347829899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34621001 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.348921528 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347625657 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.404631286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348522023 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.337088775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348313753 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452609977 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.34740617 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347357258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349210293 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.340603942 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.349596358 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34777356 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347521645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.347958721 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347637937 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363781774 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.348011258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.348212634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347642821 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348729601 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.388709498 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.349249767 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347488713 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347485757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393577336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358540768 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348678412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348161498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349839338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347946026 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491332481 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388028983 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347746652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387342563 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348317798 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347950296 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348477088 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348941185 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429672276 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348955952 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387157061 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348606395 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.519962822 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364570968 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350523657 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344109605 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343048553 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351385402 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.33837639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.348627788 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.350874202 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34232088 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347192785 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349708024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351502573 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501067423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44818536 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350381133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357260828 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349529278 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35082373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393197329 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349649224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351242747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392592503 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46065182 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39599337 seconds)
  done (took 138.642161978 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357283029 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.355458902 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.346556349 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368055451 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343072159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345097762 seconds)
  done (took 9.337096354 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345562329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354261776 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352632849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.35307358 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352006252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.352455466 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35303754 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344598762 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356749017 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352882498 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.354808692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352735975 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354625861 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353190114 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352147471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352226056 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353826218 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351210754 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351833593 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353439453 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.33991222 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354023094 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35408424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346335714 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356726653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353216995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36846143 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.352439265 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35438831 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349455285 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.357070285 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354152704 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347067176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350941564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358675121 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346653069 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356735256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355052826 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352746525 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354928984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.355073828 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354576316 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35414732 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355986426 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.347353787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.350824424 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358573213 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36994456 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.355151699 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355429883 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354909222 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353194545 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355038456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357309935 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.348169287 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351114596 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.359589766 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354820806 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355231052 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.346870336 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35852532 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.355620644 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349215095 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358359246 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356421904 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356816339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347130137 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359751662 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356185185 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.35533855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356821859 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355224154 seconds)
  done (took 99.692447132 seconds)
done (took 368.492932055 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.805345429 seconds)
  done (took 4.030730037 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.342149606 seconds)
  done (took 3.568895034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.990510423 seconds)
  done (took 22.220378269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.358275022 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.358654298 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.354575428 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.342329772 seconds)
  done (took 10.64085259 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.609718376 seconds)
  done (took 3.837344002 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359206275 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.359326669 seconds)
  done (took 5.946564542 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.527461283 seconds)
  done (took 3.754787186 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.53934091 seconds)
  done (took 3.767438532 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.37155099 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.359406912 seconds)
  done (took 5.966334711 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.322002186 seconds)
  done (took 3.549704735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.178556282 seconds)
  done (took 20.406672633 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.365605065 seconds)
  done (took 3.595991232 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.387779985 seconds)
  done (took 3.615311194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.797394309 seconds)
  done (took 6.024468289 seconds)
done (took 102.151369393 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.344310928 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.339087037 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.340491078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.339521668 seconds)
  done (took 10.590925101 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.42261848 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420963275 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.430106262 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418149992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416833678 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.424926587 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.383795046 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38403017 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412451673 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.4106989 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426993932 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416819108 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424052789 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.383837402 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41222763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.426088593 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414279506 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.430238168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385493952 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.4167055 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359906404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417205254 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411009961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.359309935 seconds)
  done (took 35.038511123 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.846652455 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421126426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504859459 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.400898976 seconds)
  done (took 7.401866802 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.463689708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.463957392 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.4891137 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.519156958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.567035986 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.476599772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38632282 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381516082 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.368317265 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.465856057 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.548621517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463192622 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.679239805 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.361441491 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.678168845 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360413302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360432362 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.464987529 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.51352589 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.542960463 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.360220934 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464312964 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.468991997 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.46460856 seconds)
  done (took 36.542008056 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370235242 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.380035645 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.362546156 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.376398299 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.362215334 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.362773956 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.3640046 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370078353 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.361279816 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.361744479 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.362580411 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377206608 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363265075 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3625077 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369836499 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.364265877 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.363745423 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36870702 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.370923034 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.363981017 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364432807 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.368992348 seconds)
  done (took 31.30157713 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.350247532 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.347284829 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698962618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601494947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.34877724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.34383246 seconds)
  done (took 13.922064223 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.420512352 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.556614633 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354499913 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691921167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.773260972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.351203731 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354030862 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.591557974 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.878919867 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.873163704 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.409104115 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.421171298 seconds)
  done (took 19.908338367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.353015602 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.349902894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.36340876 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.366960106 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407828908 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355441123 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.362373068 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.3485168 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.409476407 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.407033951 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355642702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408909336 seconds)
  done (took 21.722849011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440635163 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35934388 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366073805 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431068232 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354081663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354284061 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377346428 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077445718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36234022 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635805587 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36588019 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437152904 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605285293 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370610841 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361930781 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310075578 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58183529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85861824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357610563 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374649744 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389020972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370898892 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366925204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561856137 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361495677 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360668368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.625291524 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360274923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645881951 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620849441 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620022055 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362511312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638339207 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990389453 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46698576 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566417197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358241673 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357660678 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.345084439 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.367614994 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363452061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363556555 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619697651 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36367636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362022583 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366305815 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075280067 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.365076724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362135115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364569826 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622506961 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445621587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366711618 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363012354 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398641896 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359354618 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.369502265 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483113725 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997302049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370310721 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36719891 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.364608005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360634114 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360519733 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010971447 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.366183094 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366936225 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369106576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36262045 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359717973 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386441187 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364311285 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379371364 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363241043 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14372574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368057068 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361605645 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90960756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37086762 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.365251113 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58765052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363237771 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36411324 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.364050805 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364289032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097301557 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366184324 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.333202078 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414267177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068854619 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565977165 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384205421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394158929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585894525 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.332710537 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36640317 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.368808273 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362598775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382123999 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.081404487 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359592735 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366454974 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611759959 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576488438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375853995 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.326361832 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842916389 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373909974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.391593048 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378761301 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57223488 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.991478935 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62457349 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381365976 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399999266 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366417678 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156059324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368525402 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.372799322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376171512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63822821 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175388226 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362647327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439126653 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36959755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367653429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367683571 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363082853 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367691842 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.551438327 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382682231 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627881798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.371348576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369072427 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.370967281 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384935238 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.364431716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588332861 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373025505 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642851162 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367548958 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369760919 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363948687 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.580632321 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.382445729 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.374975676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707982053 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379735029 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381453468 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63023192 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400996355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4804532 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398889899 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.379373126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616550659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373837493 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374618178 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369179943 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370757031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376344308 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.378852316 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370130461 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995953188 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343331246 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371366719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370631971 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38502998 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444154586 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376132314 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576579638 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368854304 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360838384 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372084267 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.380302527 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593473592 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630434043 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.3796107 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54103544 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850821651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000995777 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380648867 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.370386663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.37129292 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.371459496 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373602002 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371889126 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37272589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578892176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634134706 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363119448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000494541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370754045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372758304 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38910005 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630555171 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38150126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371272876 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.377492376 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384134906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376744474 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632580833 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59382254 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387225328 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372076007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919732775 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379132081 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372104589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371757116 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399116916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372176424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217578596 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707552809 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372919539 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628379074 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387608412 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.384946086 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372268205 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380066269 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370578908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.379209923 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379569756 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.578746506 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373395783 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371723737 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008127696 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166378345 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954686656 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370014997 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.372182204 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376052444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104040047 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372461573 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374194086 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621020599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102335992 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372816223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852571097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.386115094 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120571695 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637013104 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600432154 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374740573 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.376353345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634495693 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588712588 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401596201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379355403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375861239 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.342391984 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923497257 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381146358 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5540466 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100330505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379955808 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37302665 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.404439928 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379143101 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752005276 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375702998 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375283435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370561016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390509427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22153438 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375513667 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377127841 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032209346 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384123137 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.858783428 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373524528 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583525194 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637926597 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.616117859 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.378429736 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.385568928 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621174731 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638622786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377957288 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390733361 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952856591 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.227415646 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383797342 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378021641 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171197842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375854973 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664131213 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.382803626 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378005646 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382836962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379501314 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377678262 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377920989 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385128994 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353727563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876318459 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.370454282 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386883516 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378967165 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379391197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624101702 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39141327 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013254008 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59954887 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377318555 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405144463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.385270701 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393348738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.345832099 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379299148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379877038 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438930946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594566241 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392623686 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.343240979 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373690707 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585800899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379201949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37777408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596032682 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.378933603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.392042947 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1740953 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405385079 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378501688 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392478416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3927208 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412474381 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452135873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587669946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.642848934 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643781278 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760803704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381532937 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37782124 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.396576542 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460759948 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379760311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397598627 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.381030694 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015659175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170510823 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013865678 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642498451 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384267512 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391883754 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383310176 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618279279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381880809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659575563 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381491119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.386520422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399473021 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38238571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408099596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593306886 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657307536 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381729266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394865105 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384321691 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.383274757 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649196123 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.595354258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888600016 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932186064 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377237094 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391943646 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117319311 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658415987 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382161045 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383941116 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38416312 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.404962782 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384930345 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384313725 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383235456 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602680172 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644554238 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019988989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643438586 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.562880904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.320649702 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391998812 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625902474 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21434349 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591008234 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027558525 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123317621 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632003705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458400489 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59356144 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.385241365 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621989834 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.386724004 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384395087 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386450899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385734088 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.383924776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648130968 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02315179 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632824352 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.389494857 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.388025832 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415217981 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.592829943 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605799439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112806306 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598822731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650497018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394478041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38716161 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029608035 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645865304 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387966187 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386401858 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605531475 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386157053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422688949 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.258647395 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.387075142 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945894739 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.591948117 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407151866 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3857091 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13185934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022859339 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.386295817 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893713232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384375641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389269005 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667726576 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.395564711 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387358984 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669412779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392965091 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38862201 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597995621 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.022928231 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137876273 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.4134024 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387644533 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.387352671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388296964 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465039861 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383519646 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385728676 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.772165234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388074755 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389433529 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39803524 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.394672852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389158756 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.390778944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389593036 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392123612 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.363678912 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.359649674 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394466346 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508818815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93828717 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386938249 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.004882879 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.724269935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635779117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397967614 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.361360217 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395304835 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39022749 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392120477 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385438269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387878309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965402685 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.396869535 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.656375808 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399498437 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600455616 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602744683 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392022476 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596140044 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402020745 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411945311 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.361042164 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39090347 seconds)
  done (took 981.800752128 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399849095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.38572272 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.386515547 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.451442565 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402645443 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.394392944 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.397727788 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448074004 seconds)
  done (took 20.527792288 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395640083 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.386701815 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.385115488 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.393677998 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.393585913 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.916810929 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.385322882 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.387249435 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.403526435 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.384787515 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.393351561 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.054109676 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.392148915 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398080942 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398199226 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.394692931 seconds)
  done (took 32.725390133 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.124982757 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.407196375 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.957323556 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.42350613 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424633626 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388391084 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.529003164 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.391875198 seconds)
  done (took 25.909877559 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398982514 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397700535 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.39798439 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398028981 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399122526 seconds)
  done (took 8.255629298 seconds)
done (took 1246.876609108 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399647989 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.398332714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.399610444 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.39916534 seconds)
  done (took 6.859513531 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.364777748 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.363930062 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.366396372 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.377178068 seconds)
  done (took 9.734711826 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087437139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.894067577 seconds)
  done (took 5.245202053 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.920486685 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.916642262 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.912815879 seconds)
  done (took 7.013818141 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.681210172 seconds)
  done (took 2.945505299 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.357975416 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.385318232 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.096642871 seconds)
  done (took 8.103816134 seconds)
done (took 41.166488162 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393366568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.139206491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.540863728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394255001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.541750209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.541309562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.636242515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386453438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.380700241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393014901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.388847239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.542171076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.620517461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.145424752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.622749819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.145751316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.546794065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387105062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381094757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380851253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.642198694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396122886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384596453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393306431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.544128949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.532962694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387348411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.143644812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.388134216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383872635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.527571863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396833287 seconds)
  done (took 82.893690696 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386834928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406035194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398203553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.383128785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397019801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396455708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.383970857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382810319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.38232628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403317775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384657276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.398362301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.385825094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.382602955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.398953066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.383932643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.39804708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.384695849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384100106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.397872787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.38284512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39390933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393760907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.382795455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.397160611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.385581018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.400758702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.384061912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.384719454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388339478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.383029804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401529475 seconds)
  done (took 77.764321003 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.389392317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403984479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.387489769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394857505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395446126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.390563986 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392427792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404944314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388036101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389473021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394125291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394674289 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.38863692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.385985143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.388751598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.386261153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384216263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404630597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389762614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393414034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.385610722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399615304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.387753315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387611375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.391793156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416441565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.38728006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.402772396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386179492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.385865738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.405505179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39154391 seconds)
  done (took 77.843286314 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632366025 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.405028697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40840393 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.400170871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.40729078 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405194411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400715712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636291719 seconds)
  done (took 14.965015946 seconds)
done (took 254.732072686 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.419792945 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.882761848 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426652672 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.401489767 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.41869263 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426370303 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.618426172 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.426952026 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.623859716 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42016355 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.411983326 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.401522612 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.195780973 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.548747493 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.214220858 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.316639956 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.259147672 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.401186974 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.949787707 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681272577 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.428228387 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394747513 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.204893136 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.278002755 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.37438432 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481384418 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494953649 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621680463 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.562944337 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.475705415 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.891838691 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.41065627 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.410410299 seconds)
  done (took 64.745261377 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.400149064 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.408896486 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.41040006 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.408861827 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.408022462 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.409969929 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.399668724 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.410096513 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.411530173 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.410379425 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.410556751 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.410894456 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.410281124 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.409444074 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.410937739 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.384248503 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.400522707 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.408408369 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.399768295 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.384402405 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.409417811 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.410601985 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.41130614 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.409690968 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.410796007 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.410401411 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.409677955 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.412030497 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.41071618 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.411347436 seconds)
  done (took 43.485676221 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.412118367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.951068982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.127408325 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.410536301 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402550355 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.407211334 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.687092242 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.414560136 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.408112599 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.404289643 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.857629137 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.414562051 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435666341 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.136916337 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.406908125 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411428704 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412189629 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.403294548 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.958633526 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414209125 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.685092482 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.413307733 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.68614579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.413372242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.406034475 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403997169 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.408483384 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.211874214 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.419652144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.859331494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.164407302 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.682998289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.139408757 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174272535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.167171121 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415799951 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.413101362 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.86628989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402218467 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.405464743 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.68473793 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400070435 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.141210172 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.088295217 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.421426659 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413411932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.241173808 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.858378562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639594391 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405914032 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182819844 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.409748316 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416775839 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40737377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64300045 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.403949104 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.404322222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.241511106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407514653 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.686697405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411031234 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.405344896 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.959132316 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.402476222 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954363636 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.404578933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412824422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.407325654 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.144145349 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409578534 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.113633614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.422997371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416560495 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.864504682 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.956884833 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.292654657 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.412024772 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.965381971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.175837985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.699039686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.412768757 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.194891602 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.701084121 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.411516117 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418776128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418107883 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415890564 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478208217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.686059333 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.032063858 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111374775 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244858923 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.688305363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.416431148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.407260843 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.247596486 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.413004647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416229173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.142006023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109036272 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.420212902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.41605414 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.09811641 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42168356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.692271026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.415544292 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.192186247 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.412065377 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480944628 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.418870895 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.416284595 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.41290829 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.691530653 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.413646107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.419002298 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.098779774 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.890338948 seconds)
  done (took 195.896552525 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.404732876 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.399059301 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.41714316 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.399643735 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.403523059 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412821828 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.404333757 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.405362345 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.41116525 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.403670118 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.405218429 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.414723617 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.410772139 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.404016916 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.406094635 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.413702156 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.405001572 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.406406689 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.417057661 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.405818481 seconds)
  done (took 45.431190434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.423086874 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959894698 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.924230126 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.421866282 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421191036 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.413046426 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.467219927 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.421966046 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.420223798 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710289223 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.578447405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.423129803 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.420259266 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.421244289 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.929403119 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.394398179 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.705503154 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.954751014 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417174848 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.959200932 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.39071597 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422575895 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.411878493 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961726982 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.714369613 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.688375409 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.469186645 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963603806 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418829979 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.423053953 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964739488 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.417969238 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.413806666 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.94923138 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.417935898 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435730821 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.421703507 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.472078072 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.472058904 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.709345933 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.968449375 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.699263816 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433559033 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.591486734 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.420105969 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.395356917 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.975379562 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.419876732 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.396101323 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423836657 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.427824497 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.944398171 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.414528707 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.943027054 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.424498746 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423850857 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.964763934 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.940531099 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.931281202 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.580224213 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.41514054 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.695412661 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.424581592 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.982692838 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.425813676 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425034913 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.423634527 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.583896222 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.971123379 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.692665953 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.715499417 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.714840826 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.42437459 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484285168 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.427038152 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.717034785 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.482149837 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.836842419 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71162834 seconds)
  done (took 127.881043363 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680473617 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.529956471 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.785489498 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.993429245 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.909974301 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.551000798 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.529219877 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.659791461 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.435503854 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.520615465 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.05168855 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.509591896 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.149542546 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478821738 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.527570579 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538790443 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.817252513 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.374910107 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056417244 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.031901118 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.415960159 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512123762 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.932161017 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.616040057 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.426591817 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.964409337 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333434691 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.925737972 seconds)
  done (took 53.54443395 seconds)
done (took 532.254063889 seconds)
SAVING RESULT...
DONE!
