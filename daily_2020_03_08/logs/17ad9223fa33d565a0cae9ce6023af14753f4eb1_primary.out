cset: moving following pidspec: 3610
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320985313 seconds)
loading group "string"... done (took 0.649215239 seconds)
loading group "linalg"... done (took 7.770089594 seconds)
loading group "parallel"... done (took 0.16114008 seconds)
loading group "find"... done (took 1.131465156 seconds)
loading group "tuple"... done (took 1.879016019 seconds)
loading group "dates"... done (took 1.265869255 seconds)
loading group "micro"... done (took 0.221924524 seconds)
loading group "io"... done (took 0.90309134 seconds)
loading group "scalar"... done (took 38.517071859 seconds)
loading group "sparse"... done (took 12.064561377 seconds)
loading group "broadcast"... done (took 0.956994577 seconds)
loading group "union"... done (took 12.614469471 seconds)
loading group "simd"... done (took 4.813518521 seconds)
loading group "random"... done (took 9.142990274 seconds)
loading group "problem"... done (took 1.744479197 seconds)
loading group "array"... done (took 21.231532806 seconds)
loading group "misc"... done (took 1.737501999 seconds)
loading group "sort"... done (took 3.320944533 seconds)
loading group "collection"... done (took 17.498276884 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538823081 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128862761 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135331841 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123738599 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149873096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118809599 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12874774 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088477433 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.836667889 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151658401 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120138636 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422880768 seconds)
done (took 5.382898637 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176620563 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0876382 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087567851 seconds)
  done (took 1.280016327 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069472955 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128788095 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070582816 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071841911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071425883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070695162 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071849205 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070293322 seconds)
  done (took 1.659815 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077154402 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073393753 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071350994 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07266769 seconds)
  done (took 1.403161308 seconds)
done (took 5.704051233 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.782541359 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215759502 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18928251 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.403964488 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1332391 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176635923 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641907192 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324291099 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194322555 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082601032 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112804404 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349909202 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125582625 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639917597 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078107776 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094478611 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143374425 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425596005 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072425943 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086311796 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092920372 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133257014 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090632354 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078561214 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149233673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072161018 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138414937 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084111927 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070219623 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222058995 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177054836 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66362347 seconds)
  done (took 10.387946365 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104058828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104200319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073039772 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130318964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104840858 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073618786 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078961589 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071644039 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094005459 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135206912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095704274 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111619409 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069860836 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073125448 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088741752 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214991257 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087512011 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088895481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076787554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084401475 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115737543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081705897 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084425434 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084944529 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132504187 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186805051 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099957978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101304121 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072915635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089558429 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12150402 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135087517 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072896523 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071506439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133694308 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098995535 seconds)
  done (took 4.794280049 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.001351988 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146002586 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093720615 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136467144 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068940814 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11154123 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070540637 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084899132 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212125536 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088781627 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.377016284 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.611182123 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115255664 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110069905 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072173159 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072932134 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095500261 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070789672 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503846025 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103893236 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111176642 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086004426 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075052663 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072969208 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36463894 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073981766 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069407169 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072637968 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062235544 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124862873 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074623007 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951943126 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172023303 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069865536 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104868517 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.295163455 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093381251 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145931604 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072927519 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06997419 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162412236 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069031006 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074391366 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070447619 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089194808 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107914895 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124926755 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073037259 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071164693 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169491866 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069451451 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08425673 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.19000703 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156824338 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083431581 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070497692 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273952811 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093609834 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073267346 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069470171 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202864314 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131928936 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073483514 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072259241 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072633526 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068425807 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073578445 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384334473 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069931787 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.206834328 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071779089 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080524177 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075877593 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073868859 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077450297 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076956264 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091474806 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070640911 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07930188 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070216141 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070605873 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070622381 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087090092 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.369565705 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070179596 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072052482 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.171633949 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094609684 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099461256 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070977253 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070834136 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103252377 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072847809 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070457992 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114209952 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071463492 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087224002 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075439186 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117364467 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071184547 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131745524 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070241295 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100527977 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0734064 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102848449 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0844181 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072892914 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41790925 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070313427 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073508423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072269859 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06950482 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071620488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071297504 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084017235 seconds)
  done (took 22.485000752 seconds)
done (took 39.776101238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2602429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08221792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079547457 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078723502 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078380432 seconds)
  done (took 1.778848798 seconds)
done (took 2.963056388 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124493069 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102769482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069216407 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099999901 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068776443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105767225 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10347875 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08108942 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103362257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068635267 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100482422 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068633183 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069143458 seconds)
  done (took 2.36513708 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087595541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088511109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073954078 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087301454 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068082617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087441776 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086543254 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092779994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08777418 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076652202 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068261026 seconds)
  done (took 2.078882528 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08656909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089091366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073678559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087096752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06848535 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086502573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085797286 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089927908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085854007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080168625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070296875 seconds)
  done (took 2.075239361 seconds)
done (took 7.689440691 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081892521 seconds)
  done (took 1.244724329 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578648506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.913149079 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08547562 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113579037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194848281 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121085926 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.269667391 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090647506 seconds)
  done (took 8.705210186 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106554183 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07538479 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073797601 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074509536 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072383079 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073063437 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07612272 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073049703 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073631186 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074288122 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076483478 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076294886 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075479712 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076894302 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073103932 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07529466 seconds)
  done (took 2.463848538 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096050204 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09525048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07829723 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079086889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076260361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07596498 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078067539 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077243311 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074345485 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07629892 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079675106 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077327488 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075257142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068581161 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077681946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079755743 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07484505 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077814982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079018149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079635682 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079304989 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06859618 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075260249 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077922714 seconds)
  done (took 3.143033306 seconds)
done (took 16.72980202 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107982048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072899217 seconds)
  done (took 1.348921585 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084651013 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086844261 seconds)
  done (took 1.348347728 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086737359 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069303211 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092734055 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081899506 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07004464 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069691401 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09173666 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070045309 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069612141 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070470231 seconds)
  done (took 1.949234051 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072444004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081629757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074836254 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084897307 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077907295 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068647156 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075703323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07150479 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080820611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066623996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074946535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086104137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075490578 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087816582 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075815119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072246823 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074314831 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071174141 seconds)
  done (took 2.551660707 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069607317 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071548295 seconds)
  done (took 1.323885353 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07096026 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068525128 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070761855 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069960278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067252649 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066840622 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067262209 seconds)
  done (took 1.660325119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387484109 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122168808 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323800124 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078065316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088903607 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26161808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071039101 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075234768 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075106747 seconds)
  done (took 2.70731459 seconds)
done (took 14.07363241 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084364251 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09072431 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100530332 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387268093 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095990419 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070959154 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117111849 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192382929 seconds)
done (took 2.332026526 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213446263 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.673926798 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.429154116 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210251742 seconds)
  done (took 2.499206497 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339799659 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092107121 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06360472 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070605074 seconds)
  done (took 1.759355126 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070929283 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073735459 seconds)
  done (took 1.340995641 seconds)
done (took 7.007112038 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071227201 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088534732 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070635977 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068023963 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070401044 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067655217 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067687459 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067840046 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070037924 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070078103 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070454055 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070150397 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070409963 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069925514 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067374351 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067570699 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069749352 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067699643 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176194948 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071307648 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068339316 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069828035 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06751396 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067502966 seconds)
  done (took 3.013738789 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089772297 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071288383 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077924916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075599384 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073928839 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075565595 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075032978 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07028507 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07525468 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072408378 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073813493 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073685775 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073053669 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074510533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072360475 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074080985 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075496458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070559005 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072225136 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074485557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075606174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070524088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073787908 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075105511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074345599 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073705791 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072747929 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070378534 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07534632 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073678111 seconds)
  done (took 3.430361723 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074537674 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067791729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068232806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075364274 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067937419 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068641172 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067391766 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068215416 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068277041 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067259828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069222108 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067020411 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067457424 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068350167 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068183726 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071632457 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082861678 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068003803 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067130436 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068017071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070690672 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069554784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067304276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067175973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067793171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06698288 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067739138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067583368 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068035599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067429161 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070606514 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07103273 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067852374 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074415731 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071464634 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06736078 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072089249 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067438667 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068626786 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068287366 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067847724 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067504822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067647068 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074514471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068006172 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068896191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068225227 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068792434 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067894054 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069942194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067423148 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067747254 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069418455 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068801931 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071844423 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067272754 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068431075 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067827272 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068607397 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067200267 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067488735 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067697331 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069819903 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067981529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082635995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074565042 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067824628 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069154754 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068379952 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070275818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069533854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081461994 seconds)
  done (took 6.208162563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093638134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092202944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069782511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069562521 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065878837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069141068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074266042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068239817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069525474 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085510727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068462214 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06956302 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06957514 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071713653 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068038077 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069709231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07587486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06620441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06787587 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071443092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068529311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074761219 seconds)
  done (took 2.81271236 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15471984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074709128 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108440994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079363893 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074163536 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07939712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074201683 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074015754 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073916673 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071868185 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072402766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073612268 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074057082 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072157669 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074078246 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072198684 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073955819 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071667253 seconds)
  done (took 2.652659946 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08091148 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070715844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09145592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070830037 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070069882 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072450719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07463682 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077748581 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072241317 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070798097 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077206713 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072251593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072348308 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069933341 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072392577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069865729 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072896388 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070061383 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077876008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074383224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074736062 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077794907 seconds)
  done (took 2.834926514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083372736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072117232 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08516693 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072456324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065972794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068077972 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073984261 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070321435 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073807795 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072605801 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07003691 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06854178 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072780753 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069908538 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073190818 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069987218 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072325459 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069563147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07196223 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066682114 seconds)
  done (took 2.645926258 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089714993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07181488 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072500376 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078917245 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071299423 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071776882 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078486879 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071839857 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072259578 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091939218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072325838 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071807196 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078426991 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076143093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074306235 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07889309 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078716117 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078678485 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071474753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07242193 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092230525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07158692 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079073555 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071626713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071462214 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071891109 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072033343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076479275 seconds)
  done (took 3.3343293 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070566561 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070218616 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068024292 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067801236 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068072568 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068053935 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067653359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067887864 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070792782 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067781027 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070277299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070493492 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070320705 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070891136 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070513132 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070798352 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070328915 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068397348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067794362 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067931815 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070347319 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070758705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070257453 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068015163 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068432985 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070279841 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06826113 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068963448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07193506 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070026248 seconds)
  done (took 3.291166757 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080300816 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076932096 seconds)
  done (took 1.367258999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066572819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084907772 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067589765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075346004 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074366846 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070760076 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077045432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073677345 seconds)
  done (took 1.79492312 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087454685 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082567792 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072251228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082931964 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080564329 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087342153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139488391 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070862252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077459094 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068897551 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084352319 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070589908 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076908328 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070854838 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076249962 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076907254 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06817903 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0758164 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072732571 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068965618 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071098343 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078794197 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073014442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066375498 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072770961 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093712813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08151569 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069947958 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073765572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077622768 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07716206 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064827111 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070186455 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070885693 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068213231 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080704099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085812106 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073733881 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079605211 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071292153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080085141 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066170188 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07642098 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077579408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0810115 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07110851 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071116031 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065854691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068729175 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073184508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065558274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070764069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065824405 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077927979 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074659923 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081804065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069334295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072448565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073916943 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073847308 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077514653 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073480001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073591548 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07060463 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081175451 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075418198 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079931901 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065911353 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064862264 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068364963 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081265608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093849485 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076548025 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070864079 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070950109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068843385 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074146406 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071817519 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076539594 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077895637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070335304 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075798081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078060433 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071167916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073626846 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077892952 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068303123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07222894 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068643211 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086103501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069009218 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068037813 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068752031 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083115374 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073508714 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069304697 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068366893 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077100175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06410303 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069764715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069390336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070420104 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079620446 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073022767 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073907662 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078004981 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076783656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069902961 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071936144 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066166716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.194779319 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072114846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079424333 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065315252 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074885471 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073045253 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071516912 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080491177 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069615054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071295558 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078979268 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077147036 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068937619 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067476769 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07446347 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070505174 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073779476 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078869253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069896968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065905162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066621096 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074733376 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070879698 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074102739 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075092827 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073804428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06550211 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068509826 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075941871 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079677505 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07161429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072970456 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077982302 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072592297 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069645141 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077726017 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073901083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07053074 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076307066 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071921581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06626749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072956534 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073600749 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070166932 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074700414 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073097967 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072740682 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071181801 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06856042 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076471578 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070828141 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069574634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07076117 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069500125 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080834566 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07243492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065684271 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067826897 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078353532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069446659 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069567181 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069995349 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072691922 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07136212 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068543062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069994536 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072884751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07975138 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073995151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070909561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076065144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083086683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070262856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074051329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069915598 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071255849 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071059377 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08032225 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076669058 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074651539 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073645885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067409346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076204183 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078232497 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070248821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068424828 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070017757 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074125129 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076154889 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074970724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070666139 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068019188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071027791 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07264371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073125803 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069591535 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06956543 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075578481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068721467 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075378831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07003137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079400457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072501112 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064357337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071478141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067663396 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076332647 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064215499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06784555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06938592 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070254501 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068718783 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071888771 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064465299 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204065002 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080007849 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07229983 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071932861 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071152401 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078611031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072615383 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075393792 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075632537 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077232548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081929465 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070571171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073940126 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081334246 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070605258 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065681143 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07865173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069060194 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069767585 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06995339 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068731578 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073677392 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078959094 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077947004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064910368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073979634 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069579402 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070416065 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067013712 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074951131 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073782489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071775648 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077714321 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071560113 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071339818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075217457 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069990906 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071667802 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072395312 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073888932 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071004289 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073339903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070526847 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074256496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070576661 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068346397 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072171743 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070618306 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071492097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075580965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070043346 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070803335 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07298895 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071161834 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071222673 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071950914 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0702798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073574272 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071661746 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070834032 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073219496 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066095487 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078372018 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069960545 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078484024 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071201159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067645574 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076714667 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07362356 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075261543 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071159932 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071350114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072755747 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070381145 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073767603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077820326 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069634766 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081841969 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078499803 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07224641 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073892255 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071507731 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072859259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070153299 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072547823 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070950863 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071703584 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070372477 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075621246 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074287322 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07391918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072782598 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07114449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070801513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071434522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065110749 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069872125 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069780053 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069915339 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080554121 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070522929 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070794583 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069211696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070993288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069192578 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06710256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076640342 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076991224 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06969913 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076299525 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068784301 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070956568 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079822806 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06449319 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067612796 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067388058 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.199347073 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079007029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07255343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081249851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072549624 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071202791 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068431104 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071923577 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069894488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06614111 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069432911 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075015037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069878776 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069827638 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071883057 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074147866 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072209362 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080854333 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070582602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071965408 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071904971 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069207871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071452005 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069970886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074030278 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072375877 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069613529 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068239319 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070205436 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072954122 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073094382 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070355343 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073098666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078694188 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070850719 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073980743 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074591608 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065736977 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07397889 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070525678 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071070395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070700795 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074660117 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074419983 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071848602 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080668156 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070634045 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074706521 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07085715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06857217 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070403671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070379829 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07063058 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070468293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071559002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078217457 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068825648 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074278742 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071115804 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072089773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078410299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071273835 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073933266 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076824491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071127713 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072304306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078710596 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074787685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073821694 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071219518 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072759641 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077045264 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07018822 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077389055 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071320927 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071465315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073043416 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069017454 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070318477 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070239739 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069994318 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077177723 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071116209 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07080378 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070008006 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068627147 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07188469 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073423024 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078672616 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073549171 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074008162 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066007178 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06782822 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071300322 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069618447 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072084188 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072818468 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076242228 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072590161 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071458149 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069226647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079252161 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076619848 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074214129 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069311618 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074328146 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070614584 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072444574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071284471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070033105 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071218081 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073964083 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071921073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06959107 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07595709 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073357768 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069828787 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.20261703 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073450405 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072623072 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066578256 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072030671 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074290773 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07716348 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074486948 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07106795 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082448541 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069180095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072437447 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073245812 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069662725 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075819314 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066040213 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073437759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072480248 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072136386 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066621617 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070839698 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069987711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073495314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070471425 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066407223 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081718354 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080766828 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074480035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070951918 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069721572 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066786931 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066543973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071498386 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071917267 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073384545 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081825067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070394037 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070255438 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06604601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070556031 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073674293 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074802295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068622553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065784032 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07061274 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074067683 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076829682 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069670959 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070158386 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074337315 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07297428 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068941507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074172258 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067815198 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074615292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083506026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071835222 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071897679 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077381412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07890963 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071144868 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067152003 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071081269 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074662621 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07138723 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071571148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07414792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087169434 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073802564 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070352035 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069377646 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073838469 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070490156 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079166873 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071874685 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07122262 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078057854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072705523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078755373 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074148054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07832862 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074112653 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074087935 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069779064 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071816101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068986332 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070519908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071659462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071173614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075448093 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078192247 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070489803 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081317326 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080018834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072586582 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067226814 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069668327 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069869134 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065524104 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070443592 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06829724 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06844897 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068543956 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068986488 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072097979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074963172 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071544523 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069876361 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069724002 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064560585 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072684087 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072159863 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070642628 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066802958 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069468979 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06954557 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.204950552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07525577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06953625 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074535049 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075188849 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072970019 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067136624 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078452086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070366342 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073603388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071077478 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070823876 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07192691 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074656083 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077161714 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073009962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074007469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075839986 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072852421 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069519135 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06858777 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077220238 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069907006 seconds)
  done (took 45.2803537 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103887685 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067546784 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066324735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066975787 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077033471 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067366735 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066270309 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067083887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067278285 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069042086 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066436471 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06645362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074046608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0811779 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076769337 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070455066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066067696 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067268089 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066094696 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067333695 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074343965 seconds)
  done (took 2.794300182 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077529205 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081707646 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079942548 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085602477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074884216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073955858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079347384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074407371 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082325191 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076804448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08204479 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074579831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076386477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076430034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076783393 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075071366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081989313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075108695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074171611 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079447402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074455913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079510781 seconds)
  done (took 3.003166464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070840397 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070048675 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072959034 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066484062 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069767115 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065820249 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073031404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068086729 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073069838 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069203977 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069656555 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069546276 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072213757 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065409164 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070028692 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068063153 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1123152 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073582693 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069931278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070589191 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065477527 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071754815 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06571709 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066292757 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069601806 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072836588 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07095803 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068100825 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069764566 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070373815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070543933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068230743 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071858555 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070697839 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069105223 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069343714 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069591802 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06947872 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065968498 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06822482 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071493978 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068067331 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070520922 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071362322 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068260115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06812541 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072832586 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069600074 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065411105 seconds)
  done (took 4.745889982 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083258185 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112625305 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072287904 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09228821 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083425767 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076641949 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074650993 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093315141 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067660495 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068098116 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08559259 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083420994 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069835237 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073866471 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073721769 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069980016 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070443913 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068608278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073562916 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069191977 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073301529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07639181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083123918 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082451912 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072781609 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068213867 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068957018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073553215 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081912846 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073605638 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074127561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07532531 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084345847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072032833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071083399 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074069692 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087570855 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07138674 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07240269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068788708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071462224 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073774204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076761832 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085424563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069859873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075786411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06940768 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066967054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082259812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071802567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076763516 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083781965 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073276559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069735589 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073850565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083849715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069590667 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068070777 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073019239 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081764824 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067977067 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073083568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082953089 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071155905 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076283614 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083260687 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075625924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072901588 seconds)
  done (took 6.595140949 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080527625 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099854491 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087072993 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086457784 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078919618 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079219042 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07890709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079724111 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079956882 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084679888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079590872 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119277001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074873945 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081427882 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086783237 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079999476 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079158641 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078971412 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079328136 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080032183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079338954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085754586 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079380807 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086516952 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082841317 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074837851 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078992394 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078890449 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086222129 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078920871 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083293403 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079779204 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079835497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086455792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082829614 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079328311 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069927022 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078980964 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079618252 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079373003 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075095205 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086036646 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079119144 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07512014 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079870963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078598965 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086182615 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082762845 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082252058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083410428 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079638243 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086210721 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078956997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07937148 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086220361 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088778408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086087881 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086041401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079536582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08598536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085945535 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089064132 seconds)
  done (took 6.425009511 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086608592 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077209983 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085685561 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066050617 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068178049 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076439196 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067901323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068860032 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077507026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080052923 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079488545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075964964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079063521 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080030298 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076007496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078733193 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075731084 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076434008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077490885 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075643786 seconds)
  done (took 2.847894867 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079249054 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087155071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071552631 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075934735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073945157 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07524779 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072514166 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073654853 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071613558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072897512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07955367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079756869 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070962074 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075408687 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079232103 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075805143 seconds)
  done (took 2.521544898 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088478635 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076736999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083809678 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070547896 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071150606 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066926809 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069513001 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065937114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066359122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081971383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070763759 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080053288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069799029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068865817 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066703871 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076118872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066562225 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067430836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06965829 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082161841 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074058675 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068460323 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073035794 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069659843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072585161 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074706199 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068870172 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0704071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067140638 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07035968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073578779 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073166881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067306599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068077537 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069030634 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067659375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070062421 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070200075 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075787135 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070650302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068244796 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072417181 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069942867 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071307607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066612358 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070302905 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066838068 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072362882 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068252444 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073492286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069536684 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072296851 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070871678 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077031124 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073401366 seconds)
  done (took 5.246052471 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083891974 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073968376 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0663427 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068316497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073737587 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071537721 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0738753 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071820059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071385574 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068211229 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072071292 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072786752 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072075733 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073321781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071692509 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073599628 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06611556 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071536656 seconds)
  done (took 2.617185559 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075245682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070673286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07793685 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070810122 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070154 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072239468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066914227 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069453556 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069332177 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070530523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06993178 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073144115 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069391265 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072553133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07022288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070563262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072703433 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069149878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070001451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066275082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072224501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068366359 seconds)
  done (took 2.870648949 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096750719 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086442697 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144871335 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082747986 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089054961 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075368287 seconds)
  done (took 1.889292923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094779971 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104562036 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071594365 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074161201 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079740608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074108075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073615848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074197452 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081876802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079229029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073741525 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081900526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082038324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081214035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080165238 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080055915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074260603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076359856 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070786881 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086530916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074085942 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082202157 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074783498 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074026784 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074047411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081120742 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081460897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079575228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074103603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081657457 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080285141 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074317534 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082379275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079663387 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073220953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082346671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074286084 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086861153 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079496544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081931785 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07345349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079618586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082543124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078452721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082945906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074583455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078801471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074721898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074544437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089315299 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080428747 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081185755 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080151724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084204205 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082864269 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088948447 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079947501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081150175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079900449 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080244867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081296383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079818692 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081337683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07986592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079856342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081192387 seconds)
  done (took 6.576485004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108351945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072153522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07592814 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079301029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081363687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074169267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07458251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074740366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074684731 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071870194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111950049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074526702 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081497519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081400036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074482206 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074368509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075085499 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081620669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071868926 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088607442 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074200838 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081518908 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081390756 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081402685 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079833631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079562869 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075365556 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074217956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073966509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07427205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079022351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07495478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081129128 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071568902 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081458693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074698234 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074634063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079367711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074380043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079654753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081967175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087292869 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07461463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074853852 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079750717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074779059 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074955466 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071717798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075243309 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071485416 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080114919 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079813664 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080328628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082060365 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074465414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075197682 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074750177 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074876481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074957564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079985015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081219651 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07433863 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088848811 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074477997 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074312312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081467567 seconds)
  done (took 6.506391822 seconds)
done (took 134.503046025 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197067184 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173505244 seconds)
  done (took 1.682358964 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073297581 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102625529 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082628416 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133714441 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071010042 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10400629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1032593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08209989 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070687642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070424815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070711867 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073160308 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13532151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070619733 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070938709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072865934 seconds)
  done (took 2.712927123 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101780606 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163595806 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106022406 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069652809 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101051817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076893806 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069907517 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079367292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075718029 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070713201 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076899839 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074142456 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06922919 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074723799 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077340144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076318542 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069357932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077052827 seconds)
  done (took 2.836177652 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102847504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096675543 seconds)
  done (took 1.528768105 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15561183 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136816481 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204340879 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347993717 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163514355 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15192053 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147076336 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146249759 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123794589 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142361825 seconds)
  done (took 3.043920983 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10373208 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15642862 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273408211 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119988661 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077386754 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097286825 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122120598 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082278282 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08476729 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084743582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084184522 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080653491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103672496 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077671536 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078098879 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080716155 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106386691 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076862706 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078645322 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079852998 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104024842 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071184108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077445126 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077924843 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083378827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081350958 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070411353 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070385008 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079957876 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078741496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080587743 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097317309 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081036161 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110120802 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075029466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110941701 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081404024 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077809376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078957188 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077542813 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082018805 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082260403 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077219225 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081275398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070072023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081182767 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070685779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070933968 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081955506 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071201914 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082131639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081108298 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110206065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071410505 seconds)
  done (took 6.178810634 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111735973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110849928 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075163687 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117738023 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107481957 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073350471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109176133 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101569007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11163804 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074457737 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072895558 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074050244 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084649371 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085322159 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119472766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111157587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076635922 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073487483 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11139845 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11146813 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072490607 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104579008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100229363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111796056 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072178378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074447288 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072389307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073843523 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080199973 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081627676 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07213454 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083278414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087690905 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081519719 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071560301 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072170688 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072530837 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083150225 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083378637 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082508145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081104204 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071581822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071935467 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074237244 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073928085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071711709 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081611758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083284509 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082623402 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072489102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074032056 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073456725 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073327956 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083188935 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081040283 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083339087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082666079 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072771575 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072500559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075661638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083108539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082466374 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082185924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073173569 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083173885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072565045 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083809579 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086773868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073128004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073900077 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072527834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072781469 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075943797 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080865332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081058728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074334922 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072333523 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072383044 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082832127 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081956825 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072668807 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080306007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071186404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071852822 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074145464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073603449 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080077329 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073840763 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072023102 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072283366 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070798086 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070415509 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078510369 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080763561 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080238073 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080092662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072308267 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080553382 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.20988022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075112837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083785 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073775485 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074926789 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074510057 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082228393 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082152697 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082852849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073441098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073004642 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081837664 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084509037 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074427229 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081540884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084215884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082604542 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071357032 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084754627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073016769 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083386968 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07285644 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084059879 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073177644 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082878176 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072629312 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072787095 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072959354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082937316 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074026639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07220831 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073887622 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072887803 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081509595 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085912332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074914318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081748619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082361179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074578953 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082167941 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072997614 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083248676 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072549468 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073512341 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071755247 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084515751 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072708577 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072561701 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072486821 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083340438 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072599612 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082722136 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080906782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07239265 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08436141 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083089033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080622578 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083398129 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073868675 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072181978 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07312611 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072429515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081346661 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082002362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07428475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072315215 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080558727 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082942532 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071833732 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081252551 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081795422 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082356224 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072469847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076131172 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083708747 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083335231 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081956718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081219497 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081681194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072610432 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081133883 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081373871 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073027512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086569102 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072904806 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085768478 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082099306 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080150262 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081687354 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082545028 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082347562 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083262217 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08544582 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070947124 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071065638 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080363367 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071911 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071114506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079076341 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072868827 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073513495 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084493588 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.205230431 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084560684 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073125172 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082725372 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072639845 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075248276 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087958478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073565243 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074383344 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083407632 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073195101 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081575126 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085328801 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082399381 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073784387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073991004 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083384776 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082773141 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075330543 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073164017 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074135305 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08296562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081319251 seconds)
  done (took 19.480393185 seconds)
done (took 38.804731537 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207454313 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152739663 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.172943922 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11874758 seconds)
  done (took 2.078696088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119694594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104781085 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095192814 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069252384 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10151968 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069526397 seconds)
  done (took 1.923343575 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297283895 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204084175 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182839782 seconds)
  done (took 2.043298838 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205271301 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192269047 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.43029936 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267980891 seconds)
  done (took 2.560384811 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149096196 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091604111 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072596783 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08743493 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133801577 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162072988 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102859087 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12776353 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083025625 seconds)
  done (took 2.422314206 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14931331 seconds)
done (took 12.542452902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.198904658 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.122528946 seconds)
    (3/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.170868663 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102902047 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128709827 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105984212 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073517476 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077517175 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08662491 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171770568 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.193461446 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.084293612 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080622148 seconds)
    (14/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132110283 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079856011 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225445819 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07790456 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078317891 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114102923 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22599186 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106978689 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 0.15168271 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077081226 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070586973 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232593174 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158937419 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080176504 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085629907 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093914662 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187338334 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08407517 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140163506 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112534982 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205146172 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144655271 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.374295914 seconds)
    (37/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.160772173 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07672178 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135044394 seconds)
    (40/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162463217 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076255209 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058483831 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096386676 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.116060818 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077027936 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129102055 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085249324 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168727656 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075486572 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09359028 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081031198 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080112696 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068602602 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081407378 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146154696 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067750871 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104142887 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076379679 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137163635 seconds)
    (60/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056122264 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076239193 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069993586 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129942865 seconds)
    (64/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.115307804 seconds)
    (65/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068334292 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164368032 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19099424 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072159017 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083889597 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075763952 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.15674723 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192754538 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076013986 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080309637 seconds)
    (75/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.101967922 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092224983 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129061397 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105073198 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070640872 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082692446 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08831017 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07021004 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080606222 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075052558 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096426838 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.289800814 seconds)
    (87/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.170724862 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195834511 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079469605 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06959061 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157782829 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.071279314 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156363195 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.113430903 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158709161 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092066861 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069865037 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071957104 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093107161 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079497283 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078000465 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1956282 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055745019 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07915353 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068088113 seconds)
    (106/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160633616 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069750594 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101585725 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078820526 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079772564 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084030649 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 0.133488817 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081035305 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077107881 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175842348 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226702733 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098060609 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077098946 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.157221055 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141424947 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070859444 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068876583 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.072178072 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095978663 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072350134 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202536263 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076221647 seconds)
    (128/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077218127 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092413924 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.149660197 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077926839 seconds)
    (132/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.114867133 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07653761 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069897471 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093654816 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.055308708 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05879494 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093673549 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076334321 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149291777 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076863729 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057765194 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.147990393 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082743834 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071484105 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140366359 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18025001 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057068581 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080399242 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076490325 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070876624 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146825896 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059920696 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056885431 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071401873 seconds)
    (156/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071147968 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.180147373 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068071306 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070003787 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077596561 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057006053 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093448097 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.056320369 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072508451 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055714462 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056612368 seconds)
    (167/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083732654 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076371899 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072859781 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074840128 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077860425 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05833738 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056498297 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055363452 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070027378 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091081353 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057237801 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082178101 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074285497 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069778143 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139726481 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055656123 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056276468 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054878098 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055573506 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077547656 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072088579 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107657315 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092670962 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094468889 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.177031991 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069323942 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09152917 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153040845 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066105414 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.174249634 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110875975 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075501395 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160697284 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068851335 seconds)
    (201/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155957937 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057351056 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081554387 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067805843 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076853408 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089670803 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170839775 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068228249 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076579998 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09882032 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066651444 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054391179 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054588752 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074781066 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070427924 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161460974 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067482891 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073524253 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055636656 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074321712 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144470769 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075762387 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054707187 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138100294 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069155684 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074867559 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068626413 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067083496 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054911159 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055529616 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066055574 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148840346 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073681329 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094179965 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054454661 seconds)
    (236/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112968834 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053530525 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.18963951 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067707001 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066737962 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056601174 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087956401 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153986247 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188965859 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054594611 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138098055 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054296924 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055543571 seconds)
    (249/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071041081 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067532332 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088254048 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054742126 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053696559 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055331854 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088230318 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067497676 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054815163 seconds)
    (258/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091180361 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067362149 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088465341 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068345307 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073841738 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067126716 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075259152 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067893495 seconds)
    (266/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053993027 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054388105 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075254698 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07474962 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053993753 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067029252 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055123345 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076204641 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054409229 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067629351 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087131642 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110791621 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177253763 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101252927 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 0.127580532 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056147636 seconds)
    (282/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064341664 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05372583 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073905642 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073495085 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06631191 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176793873 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090605644 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066103123 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07373705 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054440187 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054354578 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073014329 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075262691 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07429516 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093289135 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053743256 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176482643 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07421382 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117218588 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074698551 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054069714 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073265861 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06630783 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05401058 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055504009 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074632404 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.330565398 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076049063 seconds)
  done (took 31.909409136 seconds)
done (took 33.283826325 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089055556 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100394932 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08238243 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101832278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089049552 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083676651 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081290728 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086230447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088124128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089984857 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087518444 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062115417 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083078447 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083213082 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.08365987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099910652 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087915272 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08152513 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081454055 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072621708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081498742 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073094591 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074571148 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061801224 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086119351 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079996786 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081913441 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082383288 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073254522 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073075133 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076551168 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080980029 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072183835 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086664633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080944577 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081035983 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082644265 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083645088 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074086582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072311428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082120132 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071904373 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079742572 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.08097925 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07881885 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078105474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080002619 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084310172 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0975463 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074215282 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081694911 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082344828 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084136367 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07970947 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075869588 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079748645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076605313 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097879748 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079578061 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073405377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081349918 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080321768 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076553909 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079196246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078989056 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081709237 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082249567 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076529434 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080650786 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076807135 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071024893 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079492669 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074833272 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070733223 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082108644 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082710875 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069579582 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07706653 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078296092 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078738764 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070055817 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073261583 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072338183 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077349368 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072787758 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.062129976 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075189633 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078102312 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069616574 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07955954 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077368814 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078025094 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073194518 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082362843 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069786188 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076464355 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070552397 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071294353 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072452104 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074737429 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070359512 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072581555 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081022254 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072047046 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077143988 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083238265 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07006402 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077061162 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069349775 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069184762 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083754098 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079653412 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069950244 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072966875 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068878901 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077315026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069195888 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069936597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070391696 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069940925 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076794206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069862449 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072409336 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077572204 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.219547487 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071344662 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075514911 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073270175 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071283752 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07724735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071349903 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070926898 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072500718 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067586435 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073562815 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070002778 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077936939 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072903299 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078612981 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071718354 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079276644 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075605997 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076945773 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07585413 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069944519 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064903584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072672353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073167116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07185119 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070736569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071953221 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07086913 seconds)
done (took 13.409812801 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07104227 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142193714 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101557049 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099315635 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089122036 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071806959 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079976362 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102613885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072466234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104358718 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091616887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089631829 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117210126 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069580825 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07045885 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074254099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072766691 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085334068 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103006789 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090508343 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118192705 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070789149 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096192855 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093157047 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092414713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098336367 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072111303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074760534 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074479004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105640752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092572195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074748221 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071862389 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102727091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097474998 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087571646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071888265 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087353536 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071365674 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070388704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074642616 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103755691 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085437897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087056703 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075542524 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081171778 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072073593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088117593 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094029679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083090451 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089963859 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104239078 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073602968 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088307494 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069565372 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089777922 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081650978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07398784 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071364102 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078220634 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071696486 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074547249 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085103742 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084615615 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074964951 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088912102 seconds)
  done (took 7.154541323 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089710589 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096123734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088131076 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087663068 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071066572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070822599 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071491889 seconds)
  done (took 2.09673525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072218558 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093002038 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094563906 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097016448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089266149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096274021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08554875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072760821 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093846341 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073652592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094222457 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10845584 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077929943 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08177845 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098459536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074167468 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098667862 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.073916281 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077092603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098087243 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077489951 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.103880472 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078257433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073028481 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085395276 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072035853 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117229572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075693649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073189448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074585493 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069523147 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110465202 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084800347 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079712101 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071313796 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086589073 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085899829 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069881665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087765749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080110441 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085140265 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074176553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075133598 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07171415 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076895943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084173519 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075506711 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074597069 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075608991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091762365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072504291 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085008191 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074086671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077558055 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073153036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078011798 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081009635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072474314 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090942576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073206049 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088484996 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088017756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084976626 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088123509 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073727376 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084865368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085766372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073915834 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073194715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074958154 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087684823 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070009896 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073264187 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082059291 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07323244 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09479794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094159349 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072878664 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084734379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071852471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071568055 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071919439 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09473054 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076702787 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071300528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075720433 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074563733 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069562502 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070525153 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075202691 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069236833 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072492841 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074307721 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074359747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074067831 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087809172 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07410716 seconds)
  done (took 9.376676043 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073587826 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073309873 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073714009 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073637753 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072998518 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073071721 seconds)
  done (took 1.985916377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097321705 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073513899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084735177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076845242 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107162084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090903141 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092607063 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082285114 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087550292 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082550731 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090820302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092175005 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09666827 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0770884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093576674 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076159792 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09123791 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07855453 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08223092 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076780351 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090084277 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076703146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077172446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086548153 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080638322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076092883 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082662595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082919797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082302942 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082715383 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076450077 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080282969 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075802031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082486451 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091752698 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075502887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076811171 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081635933 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076520467 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079791469 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092127527 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076824922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078505122 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081430772 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083073259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075561942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081516818 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084001671 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091052627 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081212688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083481321 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075451369 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080041609 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08111661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075102412 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082377092 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082262898 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.09212558 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076510867 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07562244 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07320286 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080305516 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082037381 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080224933 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082472405 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081241609 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07511575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076847694 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077286124 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075827574 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081749816 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073203753 seconds)
  done (took 7.432906796 seconds)
done (took 29.555857733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540290499 seconds)
  done (took 2.047819235 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628945152 seconds)
  done (took 2.160712341 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519205109 seconds)
  done (took 8.050671384 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394850433 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494992283 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.737989874 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141408882 seconds)
  done (took 3.339902015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720998465 seconds)
  done (took 2.263280885 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24133328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228605138 seconds)
  done (took 2.017858771 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.388675643 seconds)
  done (took 1.919886067 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127084579 seconds)
  done (took 2.659602435 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254689642 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180785437 seconds)
  done (took 1.973833997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478378097 seconds)
  done (took 2.014107496 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.846489442 seconds)
  done (took 6.38595286 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222119148 seconds)
  done (took 1.804152816 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243724109 seconds)
  done (took 1.783299127 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765489309 seconds)
  done (took 3.308944357 seconds)
done (took 43.273400936 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088002169 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089620411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08976371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086599586 seconds)
  done (took 1.884198234 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081316647 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077929313 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081078721 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077497366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081941203 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076718503 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078241218 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079682287 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076671281 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07821046 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076853165 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.0772385 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080104927 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078646322 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075006826 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078994277 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079821524 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077010674 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079790208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076921039 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074863977 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078724923 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079102763 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075616359 seconds)
  done (took 3.42448635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082544774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077756287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079696594 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076600897 seconds)
  done (took 1.867933031 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082718364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097362941 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09473066 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08270224 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097955568 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091084572 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073828962 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073321911 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074795733 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082245715 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072615097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099636632 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093310958 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082069979 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085023352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070504229 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073105517 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093050439 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082694994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082994565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.0744546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083187347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072507675 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092837879 seconds)
  done (took 3.556624951 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091441049 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104974559 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085309306 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093894037 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096325592 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070493213 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091666482 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096256243 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128512692 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069701393 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07562362 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070082529 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077992919 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070415584 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086078154 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110337429 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113456063 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073862916 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.1024165 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070007601 seconds)
  done (took 3.336578373 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077941392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073893187 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074770217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069955546 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081392568 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077230887 seconds)
  done (took 2.014245359 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072952112 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074086374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071296635 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071400627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075699251 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071471499 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069863948 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07216012 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071674297 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071378044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071657458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070319949 seconds)
  done (took 2.418759988 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203465453 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072616494 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072988919 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070552432 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075187127 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071094648 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085310038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072667596 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097747214 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070686982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071229774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073171926 seconds)
  done (took 2.592633945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211604477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079840047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240105078 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156544174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116394708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120489705 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116383039 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11736454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147162866 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105897491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170195802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170607548 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113305249 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141591288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09345829 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104357408 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16314037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1692522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11019089 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16860439 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152116175 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130566035 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149691495 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106390246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110765423 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12586569 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075759185 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085095331 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17345887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138216412 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149597783 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116003375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100549238 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180243446 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171070925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14627175 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152664291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089145168 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107904917 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136858044 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2032567 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094242774 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168782455 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254111253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086890964 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138610891 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124447356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124658947 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109401429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095096421 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15293008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187860889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143686093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092093375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128682851 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119156295 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120415409 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118864482 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183385611 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163598976 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133219096 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0753474 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116215234 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1542217 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134404007 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115546604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129843436 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096910999 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140367096 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160122247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128552584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15008343 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121290384 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092751215 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122755042 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144704178 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134648094 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163867765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129107124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076717488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130045829 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107310694 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08473334 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148081453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079350051 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177864198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104106494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110004901 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127278346 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112644566 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113325757 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166736024 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292223021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110568513 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070930607 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110605597 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122752669 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155619978 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092882604 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112726432 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121349509 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081775042 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144460225 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079357376 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127796309 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08082779 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127701354 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134829359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081469886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126355211 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108034938 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103413927 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139079705 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160642104 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091802039 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086680026 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166706662 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125684525 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107025462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147942061 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15872362 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103815224 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106940788 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152539262 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176723529 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094647845 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164862454 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111142764 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088521246 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092845382 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127490184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116442781 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129634989 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085359401 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122302673 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171203042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079600536 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100484497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137206152 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08309613 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084584579 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109914497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110621241 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100915055 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104372312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107058147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142092597 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127020547 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253608316 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132105683 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103648207 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173013727 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092639779 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105999258 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108321455 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074762552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140229492 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161665716 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083955237 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165799345 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126033703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119121024 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122370796 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08842837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141982949 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08311673 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074356454 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146927144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11538639 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115489506 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153354956 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120607808 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129846784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122783107 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138834967 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135564904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131540934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110826108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091202748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115240119 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132667584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077218483 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094694182 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084424525 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109402529 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100691214 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087497496 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147701352 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128624782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117188989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115100098 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101450498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14959114 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080752028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132088062 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122304621 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099464645 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153658609 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153242609 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134612519 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102811245 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28353105 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075710431 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079343528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096007105 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127249626 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086978278 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089168739 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122355327 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149453129 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1330301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143596123 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126894352 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125370262 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157337924 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075154663 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121889027 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149791992 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125546695 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108997023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095162535 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104266589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144412229 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110475859 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182945006 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116791322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126545255 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15749291 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105058081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084330482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105874685 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139379272 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10823641 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145537402 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103442225 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091983895 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112138679 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07907889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103092793 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131969313 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124474024 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137848114 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117830784 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138138493 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08169081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121223437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127359245 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127360649 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068067375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122084045 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162212906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098871044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120259044 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154086215 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226871883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140599527 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178750341 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149383376 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089497854 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114262927 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125450375 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130314858 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123135676 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143153303 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112467568 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137125401 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11351841 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089274719 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092015703 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102226966 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108267453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099533304 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110791476 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118179858 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10066115 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136253014 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108730548 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112729122 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120143004 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101840289 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096221054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100650593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175533917 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122671265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172705963 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103043871 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145514888 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165446573 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078909549 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083074919 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08216272 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142612499 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088947611 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133843979 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116461706 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120925918 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126726756 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146990363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100693988 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073264104 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111620532 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139100084 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128084656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10153733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107645601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164604613 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102466582 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083003771 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117680978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262192935 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109183075 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174567044 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066891918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111279434 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080686854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085229817 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129600946 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155749514 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085729942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104338098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121901454 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116362987 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128868529 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10621049 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115512157 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12837282 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153382283 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133391124 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09359748 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115675042 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131028593 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158956888 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107212976 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101530553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175879146 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15409583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162266811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092969499 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11723084 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117204478 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113294671 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141510535 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08823174 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165191694 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085961187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138744099 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108573834 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093671646 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135777284 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115229543 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092161438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149538815 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120843174 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086562003 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081513919 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120700967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121911018 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109147112 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079674673 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142766295 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07827308 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280820761 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164068613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085157655 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109148357 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100237454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084117982 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11270246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107011635 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090935425 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102109916 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174055277 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091020268 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151327223 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136606802 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117192487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137772309 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106005041 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647189481 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081580918 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152648431 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12138845 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174672488 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104370236 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12028943 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113571906 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127858381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146685502 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107982322 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180537853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13428925 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119616296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083666207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106233617 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108559514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09488269 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112599795 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116720185 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121107739 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097318677 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119516031 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12830266 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086272627 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101058614 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158313447 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121695437 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148020415 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141824961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089217382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120297246 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140180178 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083631861 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123618852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299677353 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110403723 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103224753 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086094787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107389046 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16212096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0775261 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167427042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123891661 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113542075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115649707 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117680874 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136372131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112495106 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124097167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097331843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111789673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117313008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085888387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081390121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107998132 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115275087 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100443016 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101208219 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102401444 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151965966 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076144059 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103732782 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118443815 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150814554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175296897 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091667097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086902681 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124746859 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120091864 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116409553 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124255614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082888268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085198145 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084653079 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083983364 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110852902 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116154844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11878521 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113744812 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166336472 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086738191 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227248518 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100326404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107920966 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074279892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081987483 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099750882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102429364 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110314103 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115870116 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306398739 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099427545 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095695055 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096093701 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079302901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08779673 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13040515 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11462332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122677866 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106759376 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066388628 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11291997 seconds)
  done (took 61.002589783 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112837548 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087261945 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10060821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147589783 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126088169 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204610815 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159308277 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193235162 seconds)
  done (took 2.791947416 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072712818 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098529127 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105975316 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086422428 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071084092 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072081948 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232575913 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084046795 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070325045 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099131535 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082038623 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072581224 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.437592233 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073444435 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074007702 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065796243 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070919259 seconds)
  done (took 3.519926461 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395641135 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621254423 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349776096 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080391077 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.936893528 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096430553 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.126732659 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140562581 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082458797 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526160352 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409926413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133300315 seconds)
  done (took 18.560291115 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085033203 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078899783 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093537914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09310184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080892832 seconds)
  done (took 2.090182478 seconds)
done (took 110.637338519 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085798919 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622747693 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058061182 seconds)
  done (took 2.368588115 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091173756 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090883086 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089226929 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087574446 seconds)
  done (took 2.023883474 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077919544 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081050919 seconds)
  done (took 1.817832668 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2379743 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173224756 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099772425 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085870531 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081893372 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082814129 seconds)
  done (took 1.913587662 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076294128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079085279 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076765056 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08078961 seconds)
  done (took 1.971018983 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081154167 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05674873 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059346536 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063040894 seconds)
  done (took 1.92088146 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090591583 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086294983 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081766804 seconds)
  done (took 1.918903427 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106430171 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090898549 seconds)
  done (took 1.857644937 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085624283 seconds)
  done (took 1.747358191 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099159034 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104163025 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134546058 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114287892 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141975449 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112148139 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088789208 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089311001 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080106993 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090483163 seconds)
  done (took 2.715719207 seconds)
done (took 22.511823594 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08186816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369804365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364650269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093872389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67466893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.3605968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973394226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096658883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118480281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071695065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088138063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653111977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963893801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324843195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951645621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32622564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653024451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07218956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071858405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071978513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959068428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072356483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072249043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072326145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654193029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374954238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072441134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326532868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072331612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074548493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359683559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073849429 seconds)
  done (took 16.214365221 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07472247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137502511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077635486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088364748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075182303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073346811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075206758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072894756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123803817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072318909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089532581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071805923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075182043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072288697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091430922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071831783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073163632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072517019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071882716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072221992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090546488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071900447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073295413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073649008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072483491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084457882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073204757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073061819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072728325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074718685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075248304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07398465 seconds)
  done (took 4.218573331 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121023737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130286701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077870298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107542374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115689541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074626921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144485266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096607001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131058562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072260798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089314209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072434945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104596338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07393492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091842665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072513307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073175956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073020527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072196488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072910057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09158972 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072165229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072634005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073031253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07261758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08566935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073183765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072851507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073079301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074586609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076231798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072878452 seconds)
  done (took 4.455837537 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076887291 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079510785 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087013579 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088763791 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073191782 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07591309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07725934 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073879786 seconds)
  done (took 2.313105517 seconds)
done (took 28.871368158 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083145366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072985131 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076139244 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09141702 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076903949 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082272795 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070780238 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078763085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076440306 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076879722 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078236029 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071084588 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075634393 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070605469 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077510763 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072211373 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083575981 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076178679 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083686705 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084361396 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074053891 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077675023 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078903743 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083694105 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083679835 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083258966 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081465438 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077434915 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072521459 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074705079 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081629445 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08896289 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072897204 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083952412 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071938047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072154047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075272289 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071796702 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084840391 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081159404 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07351771 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081176453 seconds)
  done (took 4.943723138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091463184 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095778037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089590964 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066007935 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071239844 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068983028 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093032037 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063728897 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063607826 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092598044 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059958809 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063707887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066832143 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058047257 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063376127 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061597873 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065754784 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059825276 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063533238 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063831283 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093249361 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058458981 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080870798 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066907811 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06041843 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065900929 seconds)
  done (took 3.536847351 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078279144 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086684433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093331503 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144456193 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114919891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080958611 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081857545 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096661039 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097039582 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071265874 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075361426 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095378236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091313736 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077792065 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071796683 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088833009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087956181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072900838 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077319717 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094895586 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089460441 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088752049 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094908003 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084786576 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070750413 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073870783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074977888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085552004 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074887646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08120849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075051909 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075642274 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07342083 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083050581 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074973005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073718233 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097790904 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083734227 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082000851 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072891815 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079787036 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072377346 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09547943 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127035654 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071460353 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078222761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075502788 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081610428 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070947292 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096353672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083083075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071718284 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074673959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071342878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071021039 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07454704 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072839903 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074166379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080592364 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076605381 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094636043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076514793 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087518235 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071279038 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079540926 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070915452 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072406463 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070597241 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096968804 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073954739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1119091 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071788193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072444646 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080478652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079468202 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089835754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071793333 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087398638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082339413 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075753971 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080191386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076481108 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074680788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099183152 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074624874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073263047 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072811484 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077493287 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074192264 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072998051 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084662325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071561662 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074269098 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088355073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071100161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073513803 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077152403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076218189 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07114116 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083890368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075650582 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072392794 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082044121 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071749541 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073863604 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082827765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077207396 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070847759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075670973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076942935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072628829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073099758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073939242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073254072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079799429 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078335349 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076154589 seconds)
  done (took 11.132209703 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164476309 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157503578 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074743093 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149489697 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080761958 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083692839 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150534337 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098513014 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072133902 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072910338 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073636395 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114193459 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109418765 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119621006 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083347799 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07212728 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094227957 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119027818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153147313 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146454271 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094841145 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081330387 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074428738 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073661841 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074959602 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083123748 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089813886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081369458 seconds)
  done (took 4.566431831 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08453349 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107336714 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078511988 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093955414 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093477082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071832826 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074089192 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073989979 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088156456 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082997413 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071784565 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078108796 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078462275 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075393656 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072815083 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078810507 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078641955 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0729876 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075527429 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076570227 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081732466 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096147078 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076155971 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071795486 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076544969 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071694721 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068374706 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088823376 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072671705 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09660288 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070353458 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077166528 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085743535 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073629966 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072162702 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072719599 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071923114 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071696145 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073902081 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072358115 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070518028 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062089953 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070933397 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083214447 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084313845 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06102489 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076826262 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077422015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0769621 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070372529 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074611802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07494009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074596109 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079577553 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075841077 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077259141 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073468622 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078062569 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080097606 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071755498 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069274439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070447499 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076311645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069632509 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086358753 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076240722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070898923 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072292846 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073659022 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084051351 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071961836 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076365873 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069548359 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074215436 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07641177 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073713764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073148449 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070292368 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071900239 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07239425 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060488591 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071750078 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058848307 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074857364 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070071613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07055817 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071823986 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076495796 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083322012 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072985251 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077607425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072679131 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071080005 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074717686 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064425294 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074609235 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08276081 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086325706 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071651136 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069971222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08466773 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076236184 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071161915 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060417954 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07587587 seconds)
  done (took 9.656740968 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094467389 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074747438 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085411339 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092560626 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09095183 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079217988 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081304818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07330637 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086893379 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077596705 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08033779 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071826976 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081797253 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080918362 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073799512 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081738115 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075546315 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086534191 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085886734 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072062135 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079983991 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084302702 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093171925 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083894766 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08236979 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083969061 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093598709 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081094383 seconds)
  done (took 4.036628414 seconds)
done (took 39.548777838 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.782879638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.024495124 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.765708303 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.152920857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.849927772 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.997178935 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.850461026 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.770767706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.031882686 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.792151676 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.049162981 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.838981763 seconds)
done (took 65.729040383 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.814295651 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.901733924 seconds)
    (2/2) benchmarking "String"...
    done (took 2.003919967 seconds)
  done (took 5.597841022 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.988180755 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33920583 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007817854 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.758117254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.765008415 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.07609292 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.566557978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268785292 seconds)
  done (took 30.476765694 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905405795 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.981875756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456194025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.483453626 seconds)
  done (took 15.571153033 seconds)
done (took 63.226898571 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.771751624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763379565 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.767354577 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.744504165 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.821103791 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.772587679 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.927181903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.981456824 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.762969279 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.751171747 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.761270031 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.182674877 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.766870813 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.935381953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.75910147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.775574844 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.763504121 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.206188493 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.918441797 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.771036206 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.779246497 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.780450158 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.763906586 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.773571341 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.762174887 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.762779656 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.132664779 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768252655 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.592074038 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.762651966 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.812848366 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.161855177 seconds)
  done (took 204.451038322 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.761058974 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.657963185 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.790931792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.801912522 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.997036882 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.944158432 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.864348941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.207832086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.768149941 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.766550894 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.962362617 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.764699209 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.998194709 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756402525 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.79073311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.764297303 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.941474472 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.004214024 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.79511486 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.933240504 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.7700102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.782182417 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.748672686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.949951042 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.806732625 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.778233407 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.776574123 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.768065753 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948988302 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916538807 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.801436554 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.771209744 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.957923757 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.634876822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.769633756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774136048 seconds)
  done (took 168.92431169 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.969690271 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.763917459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.764474592 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.763112685 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.769400044 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762387839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.8897629 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893340856 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.389525508 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.763065278 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.119745426 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.819254926 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565982428 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.76241283 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829705646 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.774207377 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764599081 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.764665955 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.779312362 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.790435701 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763422764 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766306506 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892019199 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.776966105 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.970262533 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771800221 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.763482398 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769188529 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.135981105 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764298406 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769870058 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005102061 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.76540209 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764750041 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622188609 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.373940506 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85637584 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768334617 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76994988 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.764115287 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.981847385 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.765309813 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766354962 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.766850781 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.767742092 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917388587 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.765936941 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.892842046 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.764795139 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.241650265 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.764812838 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765842178 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.791004253 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.380933396 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771865456 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.764244301 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767580695 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.765854597 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765924081 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771423455 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.810996129 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.845473069 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.767083759 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.768415521 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771341146 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.765237792 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.76597678 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.823253659 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.770892516 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.690353027 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.822581676 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.88598287 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887747483 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771169029 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832572809 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859235818 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.766857651 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.765766453 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.767317034 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.764941109 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846033873 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.766421623 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.894003249 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774214229 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.767199442 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.817458147 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.835285563 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.767262866 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606337586 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.771789081 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.766391623 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027468326 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832825176 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.766435233 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.767006082 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768351755 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892123828 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889622421 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.476421635 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.772712811 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.760873677 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.776241922 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.903127078 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7687296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918245716 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.773718046 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850627403 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.772420972 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.770130241 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.76687914 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800336315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.768173604 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.819980788 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.76782597 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.140372175 seconds)
  done (took 400.287657471 seconds)
done (took 777.382281412 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.445746523 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.410114683 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.513652833 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.437663899 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.41014473 seconds)
  done (took 13.921105462 seconds)
done (took 15.626042935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.857916503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863955245 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795150097 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.860816815 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791395397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.859939853 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84378257 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.794254398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82895894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.79471311 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830020367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794116436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781734991 seconds)
  done (took 25.401159372 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.014593421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009396402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841227735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009762436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.816501257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003834469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950208771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925174177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92396572 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78613263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.782360682 seconds)
  done (took 22.769804466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.024243121 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.013741865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848156731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.013454276 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.81945481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013186799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.934480406 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926971808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.930627877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786927949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.783310264 seconds)
  done (took 22.799970751 seconds)
done (took 72.675335033 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.779011403 seconds)
  done (took 3.484965486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.806515285 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.97564339 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.784862862 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.781468835 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.78025581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.779260505 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.783021514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77801653 seconds)
  done (took 16.17620915 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.778525646 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.777548498 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.775992224 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.775661986 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.776203266 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.775762393 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.779049571 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.777018623 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.775193128 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.777327636 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.778659722 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.779499993 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.780068827 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.779842954 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.777701251 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.779859931 seconds)
  done (took 30.151481232 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.777783761 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.778507633 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.77598584 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.77705764 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.776251557 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.777759309 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.778037823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.776959374 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.776571584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.777890788 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.777922842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.777494308 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.777463207 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.777510693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.777703553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.77883568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.778472745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.776958914 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.782292184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777188453 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.778232556 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.777746466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.776973838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.779893984 seconds)
  done (took 44.37780219 seconds)
done (took 95.897246282 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.478976142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.402050471 seconds)
  done (took 9.588974548 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.783423647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.780521358 seconds)
  done (took 5.33039245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.781611561 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.780216157 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.779575633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.781198873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.780388261 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.780649605 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.781061658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.780778181 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.781109643 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.781638765 seconds)
  done (took 19.516913646 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.780955613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.782118067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.778382618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.781016067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.781283947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.778536077 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.782637559 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.781098608 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.781630367 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779202344 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.782583417 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.779696005 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.783373386 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.779576637 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.781673819 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.780086201 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.779420925 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.780611193 seconds)
  done (took 33.763238859 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.782321899 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.783119997 seconds)
  done (took 5.275459077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.780248784 seconds)
    (2/7) benchmarking "second"...
    done (took 1.780508453 seconds)
    (3/7) benchmarking "month"...
    done (took 1.779718593 seconds)
    (4/7) benchmarking "year"...
    done (took 1.779891312 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.778821683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.77964587 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779753652 seconds)
  done (took 14.169152055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784116752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.939675195 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.012601917 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.427090475 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785993602 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.785977578 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.74332247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.785562059 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.787715056 seconds)
  done (took 19.76430006 seconds)
done (took 109.117329586 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610110319 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.780381506 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.026120189 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.853652233 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.797604724 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.121342132 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.788850309 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.085372917 seconds)
done (took 42.776641288 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842486996 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.526561253 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.588305481 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.859439919 seconds)
  done (took 15.686047719 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.763372474 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.326397886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821483049 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.441859298 seconds)
  done (took 20.263093963 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.147289873 seconds)
    (2/2) benchmarking "read"...
    done (took 2.125602832 seconds)
  done (took 5.987567711 seconds)
done (took 50.49320979 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783119502 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.780306122 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.782203753 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.781097782 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.782482825 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.779828593 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.78095444 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.782487314 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.782139313 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.782542981 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.782779682 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.782226698 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.783871117 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783507304 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780258696 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780532997 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783245361 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.780785374 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781095164 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.784320779 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780126651 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78359465 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.780555485 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.781083698 seconds)
  done (took 44.476365725 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.782806098 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.782879758 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.785035181 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.782611439 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.782035344 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.784714546 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.783978285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.781529883 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.78482741 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784298728 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782225834 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.781336625 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.78425459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.783263389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784686855 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.782364489 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.786207746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781450346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784789491 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.78260199 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.785262742 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784042823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.782822482 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784670326 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.781597318 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781710705 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.785221963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.783546773 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785072219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.782216657 seconds)
  done (took 55.217235905 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.789909247 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.792489896 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.785849406 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.785033594 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.784779071 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.785159536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.786522872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.786329654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.785188808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.786115862 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.787124679 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.786335195 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.786658404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.786105126 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.785582212 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.786550865 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.787401926 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.785635807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.786724206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.788282974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.786252162 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.786111634 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.786293813 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.786638351 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.786324723 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.785793559 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.7866093 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.786616484 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.787285804 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.788201628 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.788326363 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.786824732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.788279328 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.787100775 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78811229 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.786918466 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.791931506 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.794785351 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.788355149 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78858781 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.787312905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.78721662 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.786914981 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.788028331 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.788594479 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.788190649 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.787133119 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.789239556 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.789889012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.787506573 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.787443802 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.787671121 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.788487341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.787741689 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.788514876 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.788195255 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.788446372 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.787158394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.787873096 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.788097236 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.788254742 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.789111828 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.787539108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.788177635 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.789191124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.788115352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.789788632 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.789040304 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.789037436 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.789838534 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.788976484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.789834002 seconds)
  done (took 130.431695679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.788684837 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786504934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.788040212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785671367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786595259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.789591951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.786274914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790066493 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786581231 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.788702395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789666538 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786647178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786117887 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789931963 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789424992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786820354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79059503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788091937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.79055002 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790433781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788821191 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.787776417 seconds)
  done (took 41.058884994 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789421823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790839806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.78836463 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790091932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788323227 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790541558 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.790187355 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791276974 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789835683 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788492867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788004731 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7904273 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789276957 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787586272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787004697 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788849265 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790356878 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78906161 seconds)
  done (took 33.927241284 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78871211 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.789350073 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.791298966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.788000291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.788858383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791651316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788240854 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791850747 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.790439894 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.788848956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.791442737 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791784532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.792165326 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788745863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791204404 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.789157544 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.791756611 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788885037 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792700873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790340002 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78932184 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79200455 seconds)
  done (took 41.106245525 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792529741 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792811395 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790224351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.790551838 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790208557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791334424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.793073759 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.789749322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.79293016 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.794080427 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789899701 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793656685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.791092933 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79120746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.79030064 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790302155 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792505255 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791243668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792880162 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789233193 seconds)
  done (took 37.550021518 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794951901 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794405339 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795764593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794644341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794889457 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796208305 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79474685 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795033501 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794459222 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795332016 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793831065 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795659442 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795197024 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79389749 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795502197 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794475852 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795285012 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795210202 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794866875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795085538 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795011065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79641295 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795574644 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794852435 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79596549 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79614935 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795401502 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796813856 seconds)
  done (took 51.987020684 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794086611 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794712132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.79195143 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.791885992 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.792495781 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.792553418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.792406823 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.792137159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794486935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793398294 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.796731332 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.794024584 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795093558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.794764505 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794969429 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.795964362 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795160623 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792550661 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793233698 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792941556 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796413606 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795910604 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.796474171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79281002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79351428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.796511554 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79322361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793335292 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797483127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792974683 seconds)
  done (took 55.546900645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814532238 seconds)
    (2/2) benchmarking "in"...
    done (took 1.814859521 seconds)
  done (took 5.352633617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.792673027 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795752877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.796215489 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793745897 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7931604 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796459626 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797559966 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793976397 seconds)
  done (took 16.083660116 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.796930982 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.79612546 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.796700751 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.796925563 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.798082782 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.796945614 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804062245 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.796822495 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.798526871 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.798744226 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.803583309 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.805430182 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.79949994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798156809 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.796926619 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799178245 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.797269555 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.798576915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.798388503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.797621674 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7991564 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799834379 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801163552 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.794387437 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.79987898 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.807855578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.802060116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.796969691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798397389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.800889985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798860194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.796665189 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.800489008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.798962427 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.798523542 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.800763873 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807723764 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799666424 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.805589059 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.800159554 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799876583 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.796897346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.800775455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.799031254 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800789935 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.800087274 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.799848085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.796697321 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.798846234 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.80187547 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805024573 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798969724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.79684681 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802731221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.800568034 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806293181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.802184096 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.802307578 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.808540291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808605568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.812551274 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.807457669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802007292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.801794106 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809140398 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.822353557 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806294618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.799101339 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.797031559 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.800779417 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.80715476 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813390614 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.808667591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.801550194 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801552088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.799307775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800860779 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802572361 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808845141 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.803626387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.803012389 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801852949 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811135478 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823722243 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.799285228 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.802282281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.802956897 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.802293922 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.802110686 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811848226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.802500539 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.802043923 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.800914159 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.800903077 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.80389501 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.80249305 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.801408274 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803123497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799757507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.802180672 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.802115902 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804488725 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.810533988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802786625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803194142 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.808258543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.802216832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801770939 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.809018334 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.80335335 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803235174 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.803059281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.808550742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.800109769 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805037413 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.811000505 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.80352857 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.80403572 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.80374994 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.802607719 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812038394 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.827859326 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.804054514 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803400657 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.80803366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.814897335 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803339043 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.806223188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.803637542 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.801512992 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.80063049 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.805549532 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.803581629 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.8058972 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804884491 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804051555 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.800687603 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.804230082 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.804676427 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.806263742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805193726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.804752809 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806956122 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.807038477 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.807002823 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.806277954 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.810332898 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.804670039 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.806974588 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.806224901 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.802911987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804906521 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.805555022 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.80575801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.805827942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805836538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.804612106 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.805896169 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804919612 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.804281825 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80589733 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.805907794 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809315666 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.806601809 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.809680883 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.804253638 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803200569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.804822679 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.805378438 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.806053738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.805728338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.80528595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.808596438 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.813588536 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.805767313 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.806333091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.807904755 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807799614 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807027253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809231036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.809717727 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.813554258 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.807873817 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812983115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.808014404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806153209 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.807093928 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.806617529 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.80592122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809411498 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.810791064 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.814637793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819040324 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813961143 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.809221072 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.811069293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.808520597 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.811920441 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.810800608 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.808145984 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.808510293 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80911738 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807292686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808177963 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.808983321 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.808340759 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.80668694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.808194267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.807709815 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.80860041 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807247489 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.809665141 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808676609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.80491074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807983299 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809742425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.806541561 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.805812769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.806874721 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.808610283 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808120214 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810579758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.815096239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.805385602 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809637017 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810210577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.809092457 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.80782794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.808806627 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810639414 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.809636154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81539137 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.809183274 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.811029827 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815938255 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.809322616 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.808939587 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.813019194 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.809011169 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.806550411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.812102827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.816705562 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.808439783 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.810973643 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.81199489 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809654269 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809895329 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.815564774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806824819 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.809705385 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.810350689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.812048041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.808010563 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.813241046 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.812418278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.81358262 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812059286 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810864156 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.811469926 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811886661 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.811451542 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.811428036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.811988038 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813575095 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.819406652 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.815286202 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.811587261 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.812430974 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.81173439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.815030488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.811996134 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.81149881 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.810320199 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823989814 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820205893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817098928 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.812723269 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.811425812 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816417423 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.81336395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.814867262 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811645446 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812280245 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81183719 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.810178302 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.808930923 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811293513 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.812065084 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814144706 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.813883271 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.816093786 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812150119 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.811576603 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.81336973 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.81310603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.812988203 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.812163094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.811875288 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.814284414 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816245563 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.811988213 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.813206868 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819150484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81489065 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.814741422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.813029795 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.813677575 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.81331134 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.815609903 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.813567688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817114625 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820486281 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.817140474 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.822584262 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.814494923 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822085728 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.815788581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.817333721 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.823119092 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.810845594 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.813087167 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.814714292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.814589352 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821006888 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.814879748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813811099 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.818567779 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815101282 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815109364 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.815635937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815253611 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813622634 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.815061957 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.822671501 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.815038452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.818401058 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816329425 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.81119209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.816733313 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.813536897 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.815633655 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819095973 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.816111668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.815810806 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.814703731 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.816275648 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814138921 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.815346316 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.815597464 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.813309057 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.814230179 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821416676 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.816472905 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819924494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.816649587 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.823433829 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817411917 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822874745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.816528927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.816130459 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.817165921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.816778219 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.817857285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.81579997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.817174752 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.817121421 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.816774398 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.819348049 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.816695269 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.818506652 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.817344959 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.818923871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.816916966 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826075629 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839967752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.818200636 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82185897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.813570304 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.818281753 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.822495805 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.817211641 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.816484879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82020604 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828065752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.826259272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.817338313 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.818192352 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819336273 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818479952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.817030184 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.81713795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.817430917 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.8182756 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.818343875 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.819122887 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821688923 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.817983949 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.818299578 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820520536 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.818621726 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.82707105 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.818975692 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.82034864 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818899699 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.818469918 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.818941246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.818552741 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.8187936 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818942587 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818855275 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819763377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825078237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.825269433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.821957478 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.817908824 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.820436997 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.820241294 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.819797534 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81989947 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.820713544 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823273476 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.820877085 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.820854595 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.819677878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.818685194 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.818969946 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821201622 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820201664 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822627534 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.826687959 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819938327 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816935093 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.819073927 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82053023 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.818584513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.820422468 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.827008937 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823167571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.830864505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.827698839 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.824801817 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.820391943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823272813 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.827778039 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.820293612 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.821267175 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821630259 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.820912783 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.822801807 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.824641764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822186284 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.827305282 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.820590846 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.821112268 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82809988 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.822150392 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821911531 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.821781884 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.825052858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.821449911 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.81737417 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.820690956 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.820862449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.828558874 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.82306052 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822932809 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.823295211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.820890902 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.82317142 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827063926 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821810455 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.822743244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.820199588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.822873741 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822203229 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823045989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.819345254 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.821661836 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.822634326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825149599 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828959756 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.819092891 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824141713 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.823003418 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.823634182 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824379331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823838441 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.819702214 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.81921509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.821830462 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823240244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.824471878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.825829435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.822878418 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.823987399 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.823737571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824383458 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82596278 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.832696248 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.830394986 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.819556309 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823333448 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.823405856 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825969242 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825308182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.824437408 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824623804 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.825535026 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.823239112 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82392615 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.823582598 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.826272669 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839934136 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.824274826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82350515 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.824396685 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827920469 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.824140781 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.8212542 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.824753967 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.826686164 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827599957 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832766567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.827016163 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831311825 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825430513 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.826856877 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.82773677 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.827233428 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.832415991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.827714651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827234523 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.828939519 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.829635568 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.841053424 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826872768 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835923879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85408355 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82566247 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.826070099 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.826891618 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825050219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.825401464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.827639539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.827467563 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827050729 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826071648 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.826730166 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.826975022 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831423915 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.827978175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.825688142 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.826494513 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.826720065 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.827481561 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.823156012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.82794601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.825352615 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.826995054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.827010399 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827053234 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.827526788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838722651 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.836960937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.82849752 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.827950057 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.824004738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.82960108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.829640048 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837044345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.835366414 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.827279739 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.828155255 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.829349637 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827520359 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.824277219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.827631923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.827368259 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827537506 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.825700993 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.839385009 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836514256 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.832396985 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.828738728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83047788 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.827292807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.829245091 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829066484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828669919 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.829097858 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.829716217 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833220005 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.8277454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.827563311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.83112601 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.836735981 seconds)
  done (took 1083.269543774 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825664292 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825207577 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824904575 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824930683 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826854959 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826150598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824748267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824940351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825595594 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826022453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.825944999 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825985937 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827314202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826236208 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825801164 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826214323 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826256822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827057892 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826627608 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826070201 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826185859 seconds)
  done (took 40.100081266 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829021598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.827388478 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.827289847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830139151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826362943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828750386 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827875232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829457858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829726354 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827989523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830017249 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829397626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82681477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.827352066 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826465672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830394415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831303195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826413971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.830294721 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827557506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830976717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828818152 seconds)
  done (took 41.985765663 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.832011935 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.832141414 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.83043732 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.82915814 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.830281177 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.827739498 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.831845081 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.831326617 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.831348707 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.831493122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.830127333 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.831385575 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.838278631 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.836971064 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.833313758 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.831347089 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.974177319 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.83200738 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.832890081 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.833600184 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.828368314 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.837557614 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.828367496 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.828503333 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.831678501 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83304698 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.831429999 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.8327154 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.832352591 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.83361681 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.837295339 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.831697675 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.831230144 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.834054287 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.832346494 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.834206567 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.836061882 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.83496291 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.829150756 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832077167 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.84260731 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.85127003 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833298244 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.838791189 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.831527883 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.8326169 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.837426696 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.842226814 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.830935354 seconds)
  done (took 91.732705703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832875236 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.834549869 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.831062485 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.833765225 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832742252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833209751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.833683474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833998363 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.829778805 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.831345601 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.833693927 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.830980953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830633869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.835503678 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.835392323 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830205926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831315907 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830527023 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.831189911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832150462 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.830760106 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.833463639 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.834348733 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.830910768 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834603948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.831896194 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831527383 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.83345656 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.831493718 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.832014895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.834812491 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834186912 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.834581917 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.832713109 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830637021 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.83578391 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.833359996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.831587913 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834381153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.832413544 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.836310565 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835493612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.833891578 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835059606 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833392627 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.833258993 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832377596 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.83334754 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.832816047 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835149732 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.835210008 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.833303829 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835719649 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.832582838 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836054443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.835929585 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.83350475 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.833390401 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.836023786 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.832666726 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.832634726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836137173 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.834571701 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.836267583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.836330274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.83399656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.833743208 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838379594 seconds)
  done (took 126.437406399 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837581871 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.837570486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838382133 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837366001 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838365859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.839090504 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838977216 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.838175622 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838128756 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838720498 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837650174 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837115341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.838417731 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837508101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837930966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839713004 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838282298 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839889958 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838525439 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838880933 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840589089 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839257308 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840075971 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.839541254 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840022864 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840755677 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840358772 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838756972 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83894006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838806271 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839572171 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840654271 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839041741 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839463396 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.840126003 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840403279 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839931243 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839308705 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.84015313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839805198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840601544 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84060978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840201028 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840571084 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840830674 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839607827 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840185035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.840717615 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840694918 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840965297 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.840296497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841636791 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840839485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841242109 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841157458 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839712266 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840837011 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840045066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840429791 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841261314 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842798735 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.840342566 seconds)
  done (took 115.822879703 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840046669 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839641875 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.83740931 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.836712044 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839100152 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838158294 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.84027262 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.839941735 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839993261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840497087 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840750548 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838798891 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838550077 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83940617 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837949508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839499604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838961857 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839457357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840325976 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.83857621 seconds)
  done (took 38.551372667 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838131412 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840056696 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.837763907 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.838096032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.84121867 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838015787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.842040919 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84194954 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839138519 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841602312 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841931952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840941338 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83852716 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838679803 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842771933 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839595287 seconds)
  done (took 31.207416846 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.839506927 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.842485466 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.842948033 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.84281727 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.839546728 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.838652654 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842340692 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.840132221 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.838853651 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.842218448 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.842166446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.843835245 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84226569 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.843283808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.839403733 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.842888182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839980572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.839853199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84199334 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.84487606 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.84044601 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.8403793 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.843112306 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.842504479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841012281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.840700713 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841501256 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.84039498 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.840334534 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.843178103 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841128934 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.842558856 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.840930931 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.839867061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.844570732 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.840543733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.843298434 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.84347502 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.844669104 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.842741646 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844318801 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.842016582 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844749899 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.843637652 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.841290677 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.844325643 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.841408381 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.841314774 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.841289105 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.842307165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.844300012 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.845950114 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.844948558 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.845814392 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.844546641 seconds)
  done (took 103.089279689 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844216073 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845279663 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.841636969 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.844206489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844563112 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.841916501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845041979 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842193712 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842329944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84508872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843055109 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845644559 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842505302 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844506764 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84246751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846049408 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.841820444 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843623696 seconds)
  done (took 34.957636741 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.842491294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843197233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.845728514 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842845377 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.844132059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845412013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842238045 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.845309934 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845306488 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.843545984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842775417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.847135546 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846117377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.846215014 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843584174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842539488 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.845956726 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845803594 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843448271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842403773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847688864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845828218 seconds)
  done (took 42.35184859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.845609855 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.845994914 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.862792961 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.86738275 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.867886302 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.882873908 seconds)
  done (took 12.944976256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843422181 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847684556 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844845036 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847464104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848338805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845501286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844626976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844639099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846960769 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844828772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84470328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84756642 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847238492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845204675 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847564099 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847504175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843956805 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845016482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84464111 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846559656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844606559 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848444741 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844815982 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845545908 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844777528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845044539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849186866 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846639668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845029279 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847933036 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848526798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84696719 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84946346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845336503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848771925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84883044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845046277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849100773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848220671 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846237719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848810409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84832684 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84912287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847246317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849422498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846991626 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845579752 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847252674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845693674 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849415032 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849670109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847386807 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8495474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850787437 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849132336 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850036628 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848979983 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846934574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851227523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847411399 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847469055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850860676 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847731471 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84761696 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850457429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848670024 seconds)
  done (took 123.694019234 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847367761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847617063 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848644847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848747308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848384741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847869144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848053899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848642372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847923715 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848172394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851886888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84832204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847845117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849373034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849160638 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848005825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849334336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848802914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849619554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85099906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848944222 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848473212 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84840226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850011956 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849131107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851818551 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849451832 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848230176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850472711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849680326 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848881693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849200968 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84925426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849352431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850469799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849704984 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84977471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85056274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84990304 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851981939 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850091759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853189922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850285237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850624649 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849797108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84987273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851184142 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850562598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850239065 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850594057 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850383186 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852076801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850801045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851393691 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851139391 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850814213 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850768161 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850778919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851411106 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852661796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851237459 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850985481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85492391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85082594 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851379963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851626307 seconds)
  done (took 123.877566234 seconds)
done (took 2524.47561844 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.873024982 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.847907934 seconds)
  done (took 15.500914752 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.014991474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.969400022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.85190928 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.9018982 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85382939 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.872739812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.861340119 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.854382111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.853405215 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.852996934 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.852593721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.041437085 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.906705548 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854249914 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.853610561 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.946170069 seconds)
  done (took 52.12543915 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.856790701 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857897497 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.868168084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.858912103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.856963062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.870147197 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.89124703 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.859519762 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.899976399 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.873777148 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.932197185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.872531819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.855114033 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.909962434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.871935708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.87228284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953626225 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93600325 seconds)
  done (took 35.678085277 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.935663241 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.865490225 seconds)
  done (took 10.590143173 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.877312645 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854783527 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.879560967 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.880907577 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.878023532 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.890091662 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.857566625 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.857231225 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.879997244 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.897526353 seconds)
  done (took 70.540805097 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.863132885 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.857907247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.859061695 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.856394381 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.850488828 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.853880178 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.857484582 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.853849446 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520389476 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.892495216 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.865408435 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.862898951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.857425219 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.858863484 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.85588666 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.881688027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.951643466 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.855032885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.854433811 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.863720137 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.858341202 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.911111563 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.874592942 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.861037542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.888436877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.520667045 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.866002565 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.86502649 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.949612423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.855387879 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.858362788 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.85983772 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.861583248 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227611407 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121194432 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.858949024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.872232858 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.866539616 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.855475359 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.953223057 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.859434578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.864656287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.500564719 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.10213184 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.948836979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901219144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.174167739 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.87769682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.860628802 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.888090617 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.862666868 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.861521814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.872590441 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.339609848 seconds)
  done (took 131.459732055 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854723734 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.207118172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026264869 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.856091015 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146269022 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066003212 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856048205 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905164131 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855556407 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092062669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.1124566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966339243 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856774792 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.856506577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853878687 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853079852 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016253799 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931475818 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858328414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853699302 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887484937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102608363 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981162744 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.858877982 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.887397773 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071016104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980968015 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963816852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.720346336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.854977261 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922781324 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.857146695 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.856231508 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855394312 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015887053 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954144185 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942572783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858110174 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855615967 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854998188 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.617897503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059057778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955595331 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.000322964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.00797688 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067049567 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642439371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85446705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.6040374 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025405114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.089589354 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094225865 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.983529869 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.857665176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.201021955 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854160297 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85447584 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109009393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999752895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956850076 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856524887 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853514081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851830345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150888193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.85312949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.950520701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853066261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847744131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.950587407 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951705295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.990730956 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063412665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883373744 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.5695063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.05974276 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099671365 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918611586 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101168748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849464191 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847127291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928283128 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.693692839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102044181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.138770433 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.102255468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886537566 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.578151145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844839375 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.076547006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.071475948 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110278328 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996095366 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.088313202 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170524904 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843865385 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842938204 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.061261519 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984132752 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845466039 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198225968 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078464699 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395702461 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865960886 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153213118 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980078132 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845902257 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487347869 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842319593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.077760423 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.889377386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.843539119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842687391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.066819796 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.836352691 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842382829 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.725179769 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908704181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845127825 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078874797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844622847 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115949033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845814282 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088558278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.260422139 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877275375 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.02132464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.993721252 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.844432553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088997825 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091357331 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961379763 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116889477 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.725291462 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841968972 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132745778 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844486276 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839037247 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014560089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84259723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989782237 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842407937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138755205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867573075 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076697301 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842290085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104165656 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879549647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894585414 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844053036 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961404211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843997836 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.673818942 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000643 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844764593 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840002316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.408480398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.841601537 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992085696 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.076147237 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865885124 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916468164 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513834736 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838427615 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921127978 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867296953 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.23522123 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840101464 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.094883992 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.842066311 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837792015 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.837017048 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138010727 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.077477028 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839869274 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837185152 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.746074784 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.837629989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836218466 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.022702695 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.159644171 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837233738 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043556888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842385431 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968180084 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840857849 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.917786064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175644299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835933235 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.838150162 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.83640687 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.839485736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837372085 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051137574 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.867921056 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.359118176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.977817567 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118669947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.153261004 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.088894267 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.88561433 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842654771 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098363544 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839379472 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.903985716 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.838798529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862450029 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072530926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841945192 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051289608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120409632 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693543797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888714153 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.840069871 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837681422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.837553393 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988045023 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925840847 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84116908 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.837873588 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957389761 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963833058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.054137089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.840307549 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.882988894 seconds)
  done (took 897.24477728 seconds)
done (took 1214.921918922 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.837813246 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840205119 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.828846399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841673059 seconds)
  done (took 29.120448748 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.84786857 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.844947246 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.84771732 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843515522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.846925695 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.845416249 seconds)
  done (took 12.84921783 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.890201165 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844440673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.296952354 seconds)
  done (took 21.804602938 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.913960704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.232907511 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.965016282 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.26954998 seconds)
  done (took 10.154759335 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.848320532 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.847732485 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848350303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.849174217 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.849561318 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.851152877 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.848317603 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.849035022 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.849764241 seconds)
  done (took 18.416377337 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.8284629 seconds)
done (took 97.946013858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785146045 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.914150292 seconds)
    (3/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.946664517 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.955130456 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.13689928 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.541354565 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.933863783 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892393122 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.997267593 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.964691493 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.396035942 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.891120403 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.017895774 seconds)
    (14/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100944429 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.896987138 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15247257 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.898489093 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.89292289 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.959827546 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.855831747 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.80191584 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 4.764900709 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.897563939 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.202403514 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.375326952 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.901385938 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.957316919 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.449961083 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.207844182 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213607124 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.873660839 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.05112169 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.868505102 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.246424007 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963070121 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007634575 seconds)
    (37/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.940879474 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.965641661 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.861521473 seconds)
    (40/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148613334 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.934697984 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045349948 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.114248773 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.048084292 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121130538 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.85085334 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.614079886 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.980083905 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.949528417 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.246740899 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.866380002 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.248039113 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.05086417 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867677266 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.935594242 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.04741378 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.107078145 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.042303396 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.880312638 seconds)
    (60/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.960533355 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.115768895 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184235302 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.851661152 seconds)
    (64/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.063363765 seconds)
    (65/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.999854984 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.326161515 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.053426245 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.926843452 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.548415466 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.9702714 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849865514 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.376555244 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.026158013 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868583549 seconds)
    (75/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.04285977 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.797309205 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.963490887 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.941108025 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.160999804 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.008731949 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692474846 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.873224458 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.968199047 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.880370995 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.523140603 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.166391667 seconds)
    (87/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298215157 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 6.874629599 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.113502737 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196933641 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106055606 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.561955392 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.964929677 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.991841537 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.096478953 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.778727153 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.873507604 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.967013178 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.963551356 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.98217194 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.901933801 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.897119746 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.106584794 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.896301626 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.100059209 seconds)
    (106/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051748347 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.252733509 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.858544675 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.981448075 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030475695 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.578065086 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 5.618205152 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.972905996 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.084983758 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.872364343 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.860189897 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.286116171 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.300797767 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.85595994 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.479812405 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.869267182 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.188532228 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.478717915 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.211238009 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.007476677 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.847366768 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.765913753 seconds)
    (128/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947055622 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878192565 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.10041761 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.884647425 seconds)
    (132/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.090883739 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114925424 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.534852409 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56922942 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978567993 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.846150016 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.930347855 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08267347 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.857866393 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.10827795 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.837841122 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.405681727 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.861714538 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.007449291 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.849927084 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.848991907 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.127298236 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862958608 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.94616318 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.846482342 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.035079391 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.837714246 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.280112157 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.864769833 seconds)
    (156/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.987979676 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.195546107 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.01643137 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085273398 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.8764308 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.319841133 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.094381511 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.831322012 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915928529 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.916339048 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.916789386 seconds)
    (167/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.361966273 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.000160868 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.911008144 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.330062971 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.870288025 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.261203774 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.926439457 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.278581072 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.846249473 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.174381039 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.267277962 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.117806365 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.235428554 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.138291583 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.843559921 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.947177944 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.913016981 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.417755768 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.75094845 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.003643027 seconds)
    (187/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.024920629 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.074101892 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.77335965 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.94084966 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.129424802 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.226150331 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.777443729 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.932183194 seconds)
    (195/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.973261736 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.795213382 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.909692905 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.859081022 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.964566509 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118048359 seconds)
    (201/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.941890469 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.824843166 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.833311534 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07046228 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.870933513 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.849655497 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.948390792 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.136217399 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.978377733 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.000325435 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.862776523 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.066020358 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.128549484 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.224019013 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.937183057 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.217975984 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.936009885 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.934010522 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.163964226 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.066366923 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.835703984 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.674676713 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.236343188 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.837354862 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.979103422 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.845036431 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.119945227 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.074784329 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.142925636 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.263141116 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.216999658 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.996204606 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.860352056 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.951927627 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.034920122 seconds)
    (236/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.819452708 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.277680249 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.823109891 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.285944047 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.859426978 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.092101031 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.93001529 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.463915814 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.410571948 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.130655282 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.712697459 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.824163609 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.228539616 seconds)
    (249/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.947889661 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.835587796 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.537013774 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.833160132 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.338054589 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.84190893 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.829850909 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.232674687 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.262303216 seconds)
    (258/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.885520224 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.938758326 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869156946 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9472818 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.870199115 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.151315134 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.028298291 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.694649517 seconds)
    (266/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.066378099 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.296386922 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.881160852 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.190341338 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.017093934 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.248334416 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292763112 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.952759836 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029411548 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.849494886 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.346701341 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.948659541 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.84793523 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92487255 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 5.640578218 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280242868 seconds)
    (282/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313636802 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044123682 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.970628184 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.949308211 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.941152669 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.848229855 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852609442 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.115515115 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.5826144 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.001066553 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.028505399 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.885297134 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.868366396 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.884975826 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.512577824 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.789594506 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.854394542 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.879483484 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.879656821 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.877327526 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.881588483 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.875360434 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.834429008 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.100997273 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.364212236 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.883432637 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.120925903 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.850606492 seconds)
  done (took 1002.425621027 seconds)
done (took 1004.282389427 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.12084426 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875976752 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.857815932 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.877608059 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.968616096 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.885358877 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.86981495 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.857602585 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.9037267 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.905032106 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.85242326 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.882583005 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.854950245 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.852902147 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.852046921 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86746504 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.174243972 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.887371254 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.868482234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.860943951 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.868809023 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.848761185 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.902378636 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.876090725 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.853986056 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852707495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.852072003 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.870605205 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.960749836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850260062 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850626837 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858242206 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.167886243 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.881457258 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.843708098 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.86882347 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.860098621 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.857241043 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.853294263 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.88088975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.262077259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.892095895 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.850229953 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.851770292 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.84859881 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.851543942 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.84980935 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.853341974 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860582081 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859141189 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.249092316 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904079885 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.847234741 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.846332439 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856959908 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.842819034 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.847025159 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858104498 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.862339411 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859135443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147711446 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.879613416 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843586207 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.857510931 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.849273951 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.276332715 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878085306 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.843677048 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.249934509 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.890317793 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.274366454 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888506738 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.837963697 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.85002397 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.870891028 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153326337 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864189237 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.833915094 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.840119002 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.831854874 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.842113689 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.844040064 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.835801558 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.832615791 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845516905 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.858199964 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.83953394 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.831342566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.837976615 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.84916272 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.837650494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.84098978 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.833437611 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.82588789 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.840516779 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.834235144 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.832842061 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831928195 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.836801921 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840700816 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.240576301 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890444902 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.827629367 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.827499157 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.829980241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844446642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.24249295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.875514553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.852717541 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87852561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.83269181 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136438889 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.867970375 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847127327 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.841129756 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.83424477 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.827317845 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.135594777 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.268003824 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.89046542 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.833511119 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.828548767 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847383165 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.833987146 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.828660659 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.149977464 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.86805457 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846677578 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.953936954 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.84307288 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.863189845 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.829446391 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.836427421 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.864933056 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848126288 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.865580787 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.836208319 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848329704 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.849343022 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.82966114 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.843158066 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.843880504 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.834628018 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.840760698 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.828171717 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.861713623 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846500043 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846187636 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.856188034 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.954391683 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.83119734 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.139392933 seconds)
done (took 290.958232495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.90326536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.828605296 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.928837404 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.828497483 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.911047526 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.916478058 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.825899553 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.827017836 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.826881291 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.202279595 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.826939786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.827011965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.830875741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.827792992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.913057036 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.830030328 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.827094025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.168931526 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.832357589 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901489467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.831370467 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.828123911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829545205 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.204312424 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.827743704 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.825776915 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901374688 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.830023709 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.167571361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.824608928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.823321404 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169954015 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923640005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.848620949 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.841430246 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837640271 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912835445 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.836152585 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.912584176 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.912892402 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.930505458 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.871977347 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.828150255 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.826334411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.835537259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.833583798 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.828057914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.859396412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.830296118 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828317254 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.170414302 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.840909256 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.839064983 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.829118557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.829055687 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.853735365 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.829769032 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.833891099 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.92518297 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.833519342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.894543104 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.205940573 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205892013 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.831942302 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.827485196 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829630664 seconds)
  done (took 181.682199041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899100148 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.910176206 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.900356946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.837438377 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.882295439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900159391 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.837462884 seconds)
  done (took 14.924954259 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.838031549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833144694 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88579977 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885654715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.834069272 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.980804273 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832974414 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.843802398 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.830482804 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.886121113 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.834458727 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83404533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.840310383 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.833184883 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.884452239 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.844316089 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.951279659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.834548631 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.835003103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.984940284 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831258324 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.840602517 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.887193199 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845703905 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.835250676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.839864178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.419161352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835667216 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831679865 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.834778708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831628221 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.87558174 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.834951327 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.832330955 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832295236 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.952504018 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.83627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832535348 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.835748978 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.832682602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.834323804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.834259547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.834276428 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.831602648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835114185 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.858100657 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.834745878 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.835279081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.835555694 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.835880837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.886337972 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83567071 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.832586542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832861601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.890259072 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842567841 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.837691875 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.832334558 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.835595685 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832732021 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.987856565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886605236 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.836096178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886132945 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.835295441 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.837055237 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.836894571 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.83599628 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933539244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.836197682 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887193087 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.834054728 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.996188035 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.859171572 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839040351 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.836617973 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835839063 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833922462 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.827799368 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.838748476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.827999476 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.832964259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.837944864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827767089 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826148785 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942036543 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93648198 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.826716587 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844119146 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.8332385 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.824228423 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.879714238 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.827453944 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.8271755 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880639542 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.940815388 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87956019 seconds)
  done (took 202.309301715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.828736971 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.830580182 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.824959458 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.839625248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822586485 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.822024073 seconds)
  done (took 12.717190924 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.825263357 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.823282166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822459811 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822759866 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.824162224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.82401184 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824461836 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825184473 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.827308661 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.822330005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824310181 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.821369786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.821344379 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.820945711 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.821676882 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.820112023 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.821825713 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.8149478 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817303091 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817891996 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.976386373 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.820289649 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.815838813 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.817250503 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821603894 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.814999674 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.826122476 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.813433059 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.812858553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.82215014 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.817994037 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.814764377 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.813818417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.818309308 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.816682376 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.813137969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816097347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.815538589 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806168128 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.80945692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.810294065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810155402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.809415691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.809685407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.809186475 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.812267892 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.811363769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.813230662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.810552405 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.80589345 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.806679145 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.80408616 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.804833116 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.805782797 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.807183632 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810206517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.812225968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.805570784 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.805255635 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.805680472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.805470657 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.804609077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.807467893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.811097662 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.802576844 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.807391064 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.80666306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.809801436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805524796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.804781601 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.807125633 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.802755432 seconds)
  done (took 133.520856092 seconds)
done (took 546.929459558 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.927273514 seconds)
  done (took 8.657412809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.019254772 seconds)
  done (took 8.819129442 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.439415502 seconds)
  done (took 10.202944435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.857204335 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.877697313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.839405735 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.833141882 seconds)
  done (took 29.191743533 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.904587299 seconds)
  done (took 8.666014912 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.852843382 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.829779141 seconds)
  done (took 15.47365972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.865351675 seconds)
  done (took 8.626958184 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.901374385 seconds)
  done (took 8.687783118 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.841079232 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.863064928 seconds)
  done (took 15.479204734 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.816211213 seconds)
  done (took 8.578252729 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.386943927 seconds)
  done (took 11.242371316 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.845870942 seconds)
  done (took 8.709209576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.850628467 seconds)
  done (took 8.612375561 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.976268037 seconds)
  done (took 8.737473576 seconds)
done (took 161.416622499 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.830233556 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.825941958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.823478773 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.822577553 seconds)
  done (took 29.060348476 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.858211369 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.858376409 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.858809968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.867501998 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.859749345 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.856449383 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.849026672 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.849747274 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.867772125 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.860036741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.858316056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.858764529 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.85616985 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.849320645 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.858728576 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.8591311 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.868303636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.859357538 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.850131505 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.861379928 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824934668 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.868434661 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.860228259 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.824634134 seconds)
  done (took 46.29299362 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.021965726 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.895131898 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.977903273 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.876316212 seconds)
  done (took 9.519736121 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.875808865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.878819516 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.889176383 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927718732 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.952269196 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.886865952 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.851311052 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.846560871 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.832050116 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.878876974 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.952650652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.872769398 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.963063975 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.824872999 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.019840133 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.825141233 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824236001 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.877782611 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.929038071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.944124477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.82580223 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.87706285 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.881493561 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.874019345 seconds)
  done (took 47.060642275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.824174128 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.83248748 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.830341856 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.823975171 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.824467762 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.825036221 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.831429092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.825856671 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.845092187 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.826099034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.823901093 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.825248992 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.823925635 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825609238 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.825443278 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.837759238 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.838649871 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.825030461 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.828295623 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.832035036 seconds)
  done (took 38.326146618 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.819225896 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.673253176 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.172077326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.077145686 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819272275 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.82127227 seconds)
  done (took 31.133539678 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.840528573 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.833096766 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.825379584 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.884873637 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.973463078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.835031318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.828089379 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.83887458 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875869616 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.893905314 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.850479359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.857656648 seconds)
  done (took 24.0865728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.823296573 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.828172166 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.822857334 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.843956516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.838144559 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.835596504 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.833990544 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.821278675 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.840636935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.847224204 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.83498468 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.840252976 seconds)
  done (took 43.765651177 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912060749 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708897667 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.871682977 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541639547 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358765881 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032796629 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344449888 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166517696 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.825879558 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095401142 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806082335 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0652579 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077026892 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823075266 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891471744 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286332389 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119470013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049112265 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847443321 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566687649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009667053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.525277501 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.670100948 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01914893 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103875717 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026500495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154149917 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859612403 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024002064 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929507598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90348777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892913785 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167599866 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267627884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023549643 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902938977 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544848492 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.61247783 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.881382738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.632645106 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.765507435 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.025252267 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904044379 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894992315 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829641529 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.5279754 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237456638 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.900138351 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.598909615 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895592333 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907528305 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987267601 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899889396 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.712573795 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84741474 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17617616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.893508999 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902936665 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468349274 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978324497 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.633492429 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.834437376 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.992781738 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637009744 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369317176 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.056677344 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.906221383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906367922 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836248089 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.635569457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028874186 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052836715 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.926569914 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556279338 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228298184 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.949516251 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986064374 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194927716 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.662771852 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.981913301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136566064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865662471 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841507911 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.748138428 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841800885 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169299501 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94267751 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.583124269 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945124929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250356506 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91976856 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929805751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916467852 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132304198 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.791877175 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909608015 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.640734915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190003549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930876956 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250029689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842861012 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.912804492 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165213713 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.119448923 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.121220699 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.4821007 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068450191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909246782 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.990208598 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.813979982 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036760201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.185345266 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974306068 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985053171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038715567 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878028672 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208298516 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936877434 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.082800739 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.895313838 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17267518 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.237320809 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161485499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995430658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914653758 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912552038 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.65269699 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535208415 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.136437651 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.914037696 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380448234 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039726081 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.913830039 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847461125 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.54171589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896174789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.019688434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137200548 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.847940786 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305367493 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847458353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057783476 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025686358 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.136096203 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559114634 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.989223453 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172633459 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380727837 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.24767724 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041426094 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932976352 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031686271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935377315 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.32637439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.286172098 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.917945611 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.917425336 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657473842 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.980658441 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916009198 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918460696 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708432052 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202740525 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947355842 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91531782 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.848049529 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928214069 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999519345 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920837216 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924642874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.44478598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670554735 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.926253508 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.595981732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14607053 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92504222 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.642763356 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099669256 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.999638182 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189450603 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981790442 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.84927099 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.617772204 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.618600497 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916633557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851167228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915510736 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924638799 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926451951 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.137711811 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200599951 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968247941 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.644341426 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.029549387 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927679396 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92161883 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917765069 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.441665124 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001026004 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.505885351 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04434616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052764459 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.930490882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851732151 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920304978 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921518087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916379373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.873732889 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969412609 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.616823323 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368712146 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175812964 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562735047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934977039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.619271694 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.044402454 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.941676351 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.652387858 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983688908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.026835245 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995751195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.92881733 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.659284406 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.697495774 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489829147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225392594 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240514593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364027142 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.412289013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256500759 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260787784 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153254121 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447624319 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979105383 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26652373 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86275739 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003467092 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565286657 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274846477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933944495 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146334583 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307047118 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.721725575 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07694736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129881658 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953978187 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.833446721 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962941451 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.443103318 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073837376 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694845081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147379696 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261734228 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678019234 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.029853859 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.920163426 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.623118791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99960144 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62974806 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.281747463 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.557596435 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.896137909 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411636941 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920389561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366446693 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278151991 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372612519 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.005032839 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856662461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93177112 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931176075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.921304407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.9030756 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.820359527 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.197777882 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931387915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156723748 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.160455261 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32594727 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.834758423 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.926837088 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921528435 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215447004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683215619 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168575885 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.362171869 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.517285736 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935271361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85629177 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855254709 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.62424104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922172356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898387051 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14618118 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.02862629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877096564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390698931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250025285 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177761529 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.937250127 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201822981 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206695784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.658687531 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951594743 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.022704558 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672519214 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.674052543 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145953107 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158699557 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721729146 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155588923 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.983685352 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.896205086 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.923008864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138203546 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145455847 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928562556 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169426165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648123088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.928343844 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296271416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987877725 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.942905601 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135274027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.017403175 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935043107 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004131724 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933591584 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.934791747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934750244 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971062354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.952721994 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.055488881 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.938346026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015860228 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013371309 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.513976416 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.935893672 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209747832 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303463334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264391688 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991424309 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925597067 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926412058 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859061954 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064150696 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371493922 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198796587 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055529763 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.066456715 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950509714 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66179406 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300482032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251917077 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200857592 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.821581908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926206583 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013562235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.150009863 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937170448 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.136529066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15550795 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23852955 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393668197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.15902353 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381148616 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19967179 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291752829 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927457308 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517251175 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.937347493 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.700840074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.963253573 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897610986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211375765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937679996 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305262007 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949013655 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.122102105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.379470246 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615012859 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290056237 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915195545 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986065774 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208760822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329052047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246550908 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009642202 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939131199 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.625773173 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065823847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.862164734 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189747987 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928556754 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139414935 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.640997673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938426918 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208369904 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245423339 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.925702366 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.889221186 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984034261 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.939101082 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152991238 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193264565 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177385093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938175397 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929801087 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.746035764 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20790156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99312429 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86333432 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.933199487 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02596113 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177265054 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949211887 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.44762382 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.632459461 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226338134 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.845271627 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951614764 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440703149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38577682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264647169 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467184971 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159172821 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485362396 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87432002 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318354189 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.935410801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420158979 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320590977 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.93488398 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.516669685 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055393967 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.206670575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261518335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.939778758 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733653273 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.974430155 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154449833 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525549837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873548745 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935840871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.993365503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930863284 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062900673 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942951673 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.915938629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89221948 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.78272288 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424014076 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.936239818 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.920032246 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.669849702 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.582234735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051963845 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088299522 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937672358 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.678868124 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.223818354 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18738549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.521502333 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.011641195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.936124587 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93344265 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860226819 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.128710051 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.130462801 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229707212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.374511626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.05550072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936278202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.148609243 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143822608 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.919277802 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088510267 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444370727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056288282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.863091893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.647106058 seconds)
  done (took 1711.072236262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954678259 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.953789328 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.946144923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.966935475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948013724 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950095593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.995136129 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.026088319 seconds)
  done (took 57.60293977 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933132567 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.153144747 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.944005912 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.933855115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.962365972 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.933910647 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.137266135 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.947960596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.95651723 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.945632395 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.938782076 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.945450512 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.270402408 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.963370444 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.934653529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.943668492 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.953902514 seconds)
  done (took 75.668156754 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.937559925 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.114045268 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.956430867 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.956704181 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.822697744 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.938633018 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.929737968 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.964219673 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.939449014 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.114679075 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.271289899 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.945590269 seconds)
  done (took 90.755342735 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.951988571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.941748473 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.941565348 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.94135347 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.941681206 seconds)
  done (took 11.589651142 seconds)
done (took 2217.708667242 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.174056625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.163016669 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.173977274 seconds)
  done (took 6.199960615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.084767889 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.132832566 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.253411147 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.257487072 seconds)
  done (took 10.596272322 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.237308545 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.307423825 seconds)
  done (took 6.408467137 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.267948171 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.960853691 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.328556762 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.937680664 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.936151162 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.935775208 seconds)
  done (took 22.678511072 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.940791474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.942636005 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.940700885 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.943811474 seconds)
  done (took 9.63228396 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.920998869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.66300176 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.921185894 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943374762 seconds)
  done (took 21.313482884 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.687917134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.064744329 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.683236226 seconds)
  done (took 9.300527509 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.553261546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.158379442 seconds)
  done (took 9.576716751 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.184860314 seconds)
  done (took 4.050119482 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.968595579 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.210468977 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.464197905 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.478059457 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.561273468 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.778102068 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.244242725 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179129832 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.389398386 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.398033939 seconds)
  done (took 25.53714009 seconds)
done (took 140.890417555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.281751552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.967000954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146204517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.297761193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.168984518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.142056972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.152793102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.28488902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.819517592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.814944962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.297482787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.167637916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.108759755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.962053635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.113645648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957141043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160579424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299930917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.984578166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.199103089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.163636965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.944826523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.138571672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.95995637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.165283647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.089975317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.490478607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960812542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125448611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.501664825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.094566771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.343166393 seconds)
  done (took 170.172201546 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.940418824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.940706426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939521307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940435388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.506866985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94123817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941962312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9411722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.225745751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.217859529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948528379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.535128075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.954054458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940511198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960421727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942043688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.448823119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959592259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.965035074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.967447071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967056391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.393265651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966003238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.437439412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.439226407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.96709257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.941882505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969129498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973246967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973493344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974820473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941645577 seconds)
  done (took 211.971976223 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.905492081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.943326389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950892614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.943156984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.955036179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957544864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945048036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.942176255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.551847501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.554743413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.96213126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.953626791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.95697233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943206626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959095217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942573677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.956844996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.952424258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957006978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.956658005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96206578 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.631786327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.959844014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.623795359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954015527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979151165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94267056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956964998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.959215335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957408667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961328752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.942417827 seconds)
  done (took 222.927324512 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.134320462 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.94953886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.951290266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.873487261 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.950381875 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.949379024 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.943413646 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.131829049 seconds)
  done (took 19.775468284 seconds)
done (took 626.721604843 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.39029251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.243371045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130671226 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974342568 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.209780725 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.008271161 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.970472025 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.034317476 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698244645 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041587537 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.641162634 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.994132272 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.724033658 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.999897624 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.092310195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.027132205 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.519622814 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.609647378 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.145554308 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.059180805 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.144778985 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93292225 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.056123095 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.72518731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.744486465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.983150876 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.144100896 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.526151449 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.982119403 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.128682517 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.714312833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.351015262 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98653713 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.969809396 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.028561349 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.005739739 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.312326805 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.984723194 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.098747347 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.733940544 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.035742806 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.58395168 seconds)
  done (took 106.559800098 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.941615752 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.940009585 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.939169432 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.940361428 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.94145398 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.940377583 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.93884098 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.939315693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.940279869 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.939274321 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.939449429 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.94106696 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.939138083 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.940584692 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.939832664 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.93985808 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.94066203 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.942291448 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.939896098 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.939187059 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.942721198 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.939448919 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.954883289 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.940189797 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.941373038 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.941209505 seconds)
  done (took 52.346087623 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.952879589 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.1032077 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.192234446 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.975069742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.953449304 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.956497665 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.971871702 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.959679311 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.956499555 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.956236482 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.059596474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.960362034 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.972351306 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.192298542 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.973713947 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.954905647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.954990439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.954515095 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.110905384 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971217782 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.973662459 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.959432876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.973463037 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.968248044 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.956272493 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955045177 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.958315599 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.42030147 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.964816732 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060057045 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000409559 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978380572 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.395552578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.201839094 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.012867559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.964331072 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.955201063 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.062850686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.961970732 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956286328 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.975023059 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.961398224 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.191579424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.458957068 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.970973883 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.956299 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.431939029 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.073646816 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.997088323 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967473984 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.196620115 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.975203521 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.957630825 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.956396028 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.992174056 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.96224065 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.956048991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.311883044 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.968796508 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.973483062 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.96198657 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.958013236 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.116990418 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.96609972 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.105678762 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.967685202 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.963703126 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.958979063 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.194696305 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975344129 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.454841555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.972641071 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.956971522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.062829658 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110676939 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.470778779 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.971299838 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119098326 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.413691776 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.982490682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965228425 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.412742498 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.987070052 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.965666073 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.960051035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.960104326 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.957816792 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.002387815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.974251818 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.388733736 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465154033 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.329957996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.986096302 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.97351783 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.958547615 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.310193303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.968430791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.95901969 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.187768776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.471335939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97385822 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.966441926 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.447710365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.975617196 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.978180476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.968360271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.198579091 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.977075592 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.003233218 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.960109839 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.965771583 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.962973793 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.97829703 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.967319448 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.959911826 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.441101378 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.08624503 seconds)
  done (took 242.555849239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.954550142 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.974518131 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.95248895 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.95735194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.95253605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.959279698 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.953473568 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.954063147 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.959946973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.953554011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.953361393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954588635 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.954755781 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.013136432 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.513229048 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.961146048 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.560110503 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.954728831 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.954376933 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.959825516 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.644592922 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.965196638 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.955331294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.957822963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.957304508 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.955129489 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.103983198 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.960482289 seconds)
  done (took 170.735315244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.961420996 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.141974273 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.982369961 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.001531956 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.970927418 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.958744699 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.98554864 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.984980923 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.967547287 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.960261056 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.960298346 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.024003533 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.975461806 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.106331553 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.995739626 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.99517056 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.066860975 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.972594633 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.960461136 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.960269118 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.990493923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.957806367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.024790014 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.091831714 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.984071862 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.080238529 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.969345111 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.962801865 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.962512262 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082640027 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.979691661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.02359724 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.991511685 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.980665931 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084949104 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.081728582 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.069217628 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993683959 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.968408837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.960591919 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.960958413 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.951430943 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082037238 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.983891596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.964932897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.071130736 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.984792949 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.965073389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.971551986 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.961458753 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.976110386 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.981763229 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.031751418 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.097949094 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.000067898 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.988201624 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.989005081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.277606818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.97390625 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.064944772 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.957807993 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.080923346 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.986516445 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.951585827 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.965065679 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.968619381 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.992045525 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.995664069 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068820409 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.972666263 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.063583335 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.000582914 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.970811481 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.963887578 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.966023009 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.08240065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.086543537 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.999220613 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.001760766 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.99771964 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.961982484 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.963899639 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.953321193 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.98158525 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.968364648 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.081531272 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086869516 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.97462377 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.966307811 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.966830424 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.965580516 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.990507502 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.091569258 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003167655 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.06270573 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.034635195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.042013806 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.981179654 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.977924268 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.969477322 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.028651264 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.981619918 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.977220193 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.330817497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.037710408 seconds)
  done (took 212.791578586 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.415886757 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.022707818 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.022283141 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.300179574 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.398565269 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.750585518 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.015400583 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.016575485 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.039699977 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.201833619 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.089821803 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.034599387 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.003502764 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.989207027 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.014194793 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.035692167 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.025104851 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.35439467 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.143236462 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.0929211 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.998437134 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.309234337 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.335322949 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.411876049 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.050052078 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.387628588 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.690954362 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158046907 seconds)
  done (took 64.202493143 seconds)
done (took 851.064071309 seconds)
SAVING RESULT...
DONE!
