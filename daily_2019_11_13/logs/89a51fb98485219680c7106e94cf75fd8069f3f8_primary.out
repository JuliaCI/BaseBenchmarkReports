cset: moving following pidspec: 27812
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.287800284 seconds)
loading group "string"... done (took 0.597305835 seconds)
loading group "linalg"... done (took 6.872345626 seconds)
loading group "parallel"... done (took 0.150748431 seconds)
loading group "find"... done (took 1.091544296 seconds)
loading group "tuple"... done (took 1.65808186 seconds)
loading group "dates"... done (took 1.189705176 seconds)
loading group "micro"... done (took 0.21052391 seconds)
loading group "io"... done (took 0.980261069 seconds)
loading group "scalar"... done (took 35.910066722 seconds)
loading group "sparse"... done (took 11.580492387 seconds)
loading group "broadcast"... done (took 0.902905144 seconds)
loading group "union"... done (took 11.80724957 seconds)
loading group "simd"... done (took 4.28586058 seconds)
loading group "random"... done (took 8.733029907 seconds)
loading group "problem"... done (took 1.870513703 seconds)
loading group "array"... done (took 20.208525189 seconds)
loading group "misc"... done (took 1.619405325 seconds)
loading group "sort"... done (took 3.162386183 seconds)
loading group "collection"... done (took 16.658811891 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482519281 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121958933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112821913 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117305899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143950766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11300207 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122252074 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08291307 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773415264 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146285643 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117702953 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409389479 seconds)
done (took 5.047565527 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172799744 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081943133 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080062544 seconds)
  done (took 1.301086593 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063814093 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119668241 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065635197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066121546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065740543 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065406533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065094273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065138213 seconds)
  done (took 1.651996634 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07202292 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067789546 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067791509 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067163613 seconds)
  done (took 1.414869823 seconds)
done (took 5.756195596 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747237898 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199995436 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181645521 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393544855 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131393142 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15438668 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647154837 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312962589 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181790197 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0810352 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102711007 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317208201 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106363941 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642519321 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075913622 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090053371 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135223902 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425036338 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066843598 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081531491 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088649896 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127659079 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085394177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074260866 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143049477 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067039089 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134312269 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079088275 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065908951 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206018999 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17113847 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653165259 seconds)
  done (took 10.147065545 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094628018 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096540273 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06803276 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122405355 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098183355 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070702483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070438436 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066076743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085781042 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127599553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088439418 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099902261 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064821202 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06802993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083555328 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20337572 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080712098 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080422587 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0698177 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073979747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10695172 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07750427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077153192 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07679817 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128012301 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180629546 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097802219 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096549404 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068823076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07931266 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114658639 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128253851 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066705372 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067172933 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123174943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095656888 seconds)
  done (took 4.575535854 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.947738943 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138513241 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089400842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130919869 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063856331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105274172 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064392842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079310474 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197748722 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.346092586 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563871475 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109775949 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102875878 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0669872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067499731 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065880688 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.315432612 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094449012 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104005992 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079577624 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068541726 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067933911 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.344114316 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066855093 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062458032 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067159442 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056966134 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121625705 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066958884 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912201129 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124147995 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065958737 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100207932 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1609104 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106906775 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085517649 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271372876 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067874925 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063676325 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147888106 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069777163 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065664216 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081964869 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1028473 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111418739 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064900721 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065936056 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158691451 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066471849 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078837064 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.612221641 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154119681 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07779106 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064258337 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245831976 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084312659 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068679302 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063739748 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174342208 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133030151 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066503802 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066370031 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067438156 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068671686 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348224947 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065523469 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.850716543 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069170458 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076353532 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068706836 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068399894 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071699705 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072146946 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086812821 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065447925 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074356033 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06516978 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064891339 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065808849 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083467158 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353140236 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065877281 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063848059 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067376399 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063969932 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085423262 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096584286 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066037706 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064829835 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099384293 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067420781 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064970432 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062960804 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103973074 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065417192 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082941839 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068321711 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.215396852 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067266429 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063632561 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085329888 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06685677 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096063968 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073688045 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097939159 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080145384 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067367147 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394529338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064451868 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064532741 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068091092 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064941536 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067475736 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065571642 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078459586 seconds)
  done (took 20.453316874 seconds)
done (took 37.264259097 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.231079919 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073815561 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073898279 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077267779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074901897 seconds)
  done (took 1.75536623 seconds)
done (took 2.964374537 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118383101 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097300852 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063733046 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09414434 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063499238 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098703564 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097859342 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079658366 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098353536 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063844688 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094878112 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063415247 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06325411 seconds)
  done (took 2.321312046 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081241337 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082266938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068992718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081107601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063199618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080683761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079903491 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087369672 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079631933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072126747 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063152346 seconds)
  done (took 2.041161056 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080840611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08263883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0682737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080112588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064924881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080548242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080022872 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084096944 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080165319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072271369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063355306 seconds)
  done (took 2.033343085 seconds)
done (took 7.590978374 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076607307 seconds)
  done (took 1.263329922 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583213031 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.100168906 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080321213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110911034 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181776589 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11801172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275054637 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08557485 seconds)
  done (took 8.901546237 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087919422 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08185515 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070529203 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068276247 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07175559 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070694809 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07050377 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070818836 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068520684 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067363065 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067333235 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067486023 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068907932 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069055617 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070516364 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069885751 seconds)
  done (took 2.400595948 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.089923294 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.08945674 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072844026 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073958947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071768251 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071112199 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073477645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072789078 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069913683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071416864 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074108117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073030899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070825124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064232291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073127879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07468692 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070477457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073275007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074055868 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073995788 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074187638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063545032 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070605138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072982438 seconds)
  done (took 3.052710332 seconds)
done (took 16.815594554 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112775085 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070624216 seconds)
  done (took 1.3802436 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080071435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082511824 seconds)
  done (took 1.363879874 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085077711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065103901 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091584897 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078495667 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065496723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065256197 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089260946 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065743131 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065407024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065959959 seconds)
  done (took 1.94352894 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068095235 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078002835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069988559 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080458994 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07337541 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064037408 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07234325 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06715315 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077710998 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062220982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070795337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081951029 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070695003 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08345117 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07186201 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06829833 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0704066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067208755 seconds)
  done (took 2.506736377 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064762613 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066649295 seconds)
  done (took 1.338081764 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066386813 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063464219 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066257106 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066366972 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062930146 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06242774 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063008829 seconds)
  done (took 1.653587561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368727192 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108471247 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294498448 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069638478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080632214 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246719187 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064717459 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0693377 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069562181 seconds)
  done (took 2.617988161 seconds)
done (took 14.015906784 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077490128 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084809608 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093570499 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.355977501 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090773208 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065031747 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112934776 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18677519 seconds)
done (took 2.289186902 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209652948 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60160515 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383511929 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194643745 seconds)
  done (took 2.392644635 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322500329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085150962 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058350976 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065844071 seconds)
  done (took 1.756166597 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064920766 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068185888 seconds)
  done (took 1.352410201 seconds)
done (took 6.930712566 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066153284 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084359956 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065195443 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063287959 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065311222 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062739487 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06294218 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065264885 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064970898 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065000131 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067816526 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065081493 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065032041 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062557287 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062823304 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065030346 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062416445 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062555527 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062897951 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065103747 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062602884 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062474423 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062823091 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062517843 seconds)
  done (took 2.812244299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082327124 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066169635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070922277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070193485 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069088902 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070267633 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070425443 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065432466 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070261912 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067082302 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06893286 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068958264 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0670565 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069092477 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06714097 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069103019 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070350088 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065942517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067245567 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068997533 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069897467 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065630914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068765876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070137989 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068488894 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07024414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066881594 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065352707 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070006921 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068763925 seconds)
  done (took 3.298562628 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069316399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062911907 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063709859 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06934526 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063884434 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064200462 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062685442 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063229601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06356137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062612246 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064060282 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062456842 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062646751 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063654302 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06339685 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066519722 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07806285 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062885378 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062701666 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063162436 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066106852 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06289792 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062651692 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062639523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062746769 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062321232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063201099 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062840796 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063764779 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062490368 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066156033 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066027613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062352431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069234368 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066268518 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062874811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066198522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06213593 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063627299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06208885 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06238389 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062436594 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06282156 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0692161 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062970175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064290622 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062397273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063577632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063515546 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065367174 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062351729 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062671381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064389339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06386311 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066461752 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062171869 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063305499 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061943697 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06393427 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.174657348 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061817206 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061921278 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06524007 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063058412 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076653723 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069114043 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062487864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063882352 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063277154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064872726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064122008 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0758023 seconds)
  done (took 5.981337729 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089774552 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086266945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064798426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064413631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061170626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063823243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066615662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063172354 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064874563 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068856974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063288977 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064554766 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064230958 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075949929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06341932 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064557522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068871052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061391151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063493293 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066412003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06354741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066548652 seconds)
  done (took 2.723172777 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15376316 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069537065 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103617001 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072732568 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066902625 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072079718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06912818 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069117875 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068857859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067451886 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067123629 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068745203 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066657642 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066966968 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067068637 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067474285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068783762 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067179476 seconds)
  done (took 2.587576213 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075886074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065186201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085469232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064492585 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065193023 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068085685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071306425 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075119347 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067331538 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065088761 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07321352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067520773 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067137989 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064906448 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067212839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065116145 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067423803 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065214765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073364158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070099067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069449013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073422863 seconds)
  done (took 2.763254709 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078357746 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06749563 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081594772 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068155276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061678767 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063527175 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069712713 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065228244 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069137667 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0668958 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065501657 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063793357 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068514369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065377468 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068427579 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065117706 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066709629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065021292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066840211 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061289807 seconds)
  done (took 2.588915679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085936263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066998877 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067437444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074986031 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066797763 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066836869 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074324132 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066225973 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066872546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086769153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066305721 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066669867 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074036524 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071712707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065934682 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07440501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074346467 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074034449 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066116967 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066684403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086128094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066672672 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07385238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06637836 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066372845 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066961746 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066571865 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071455781 seconds)
  done (took 3.230087044 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06611119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065486322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063283999 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063418272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062987554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063560185 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062937267 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062866001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065067912 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062704065 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065095611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064777109 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06482822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065149149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065288983 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065006008 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065312848 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062784719 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062709381 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062640389 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065081985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065132382 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064963607 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062834872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062530881 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065058101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062691607 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062445617 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065061429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062464392 seconds)
  done (took 3.162461654 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074945971 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071527741 seconds)
  done (took 1.391745818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062523126 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078351477 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062558483 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069130051 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069897662 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065566514 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07273164 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069029085 seconds)
  done (took 1.789311498 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079559173 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076067222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067213824 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079611069 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076284937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08187521 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130321171 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066083572 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072291182 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063655087 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078516144 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064332752 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071452442 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065633568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070981541 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072059686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063210264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071554897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06746056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063928753 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066448839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073614065 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067671722 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060901761 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066574158 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086398302 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076066884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065121973 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068138001 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072250418 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070497961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059465881 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065052592 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065815017 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063065369 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074540986 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079826551 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0678159 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073579653 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066402334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075988002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060442842 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069698334 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072169855 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07537711 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065967967 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06638915 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060649111 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063483839 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067768387 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06118218 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066037875 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060695319 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0749502 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068743309 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076254396 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065026884 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067323026 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068763857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069319499 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071949777 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067871457 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068273485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065500978 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075179803 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070449452 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074070614 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061061414 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060017025 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063620634 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074789794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08814534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071772992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066528449 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066946743 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063675787 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068618274 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066931319 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071122801 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071388748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065635141 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071257296 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072300469 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065639528 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068130858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0736666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063983067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068225915 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06307543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08136147 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064198018 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063419208 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06304383 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075583828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068778476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065063833 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063041012 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072018672 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05984279 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065442144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065737438 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065570922 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074761193 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068908043 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069305034 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072594246 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071211278 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064124835 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067212539 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060943846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064988648 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063576085 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071042307 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059128473 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066762916 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064909604 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064533816 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198322383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064448503 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06607775 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072998705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071447629 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064817868 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063134635 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069046238 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065552127 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069104247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074327952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064625291 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061637681 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061534688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069974482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065630114 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070011325 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070872934 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069518074 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061097771 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064143944 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071900341 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074949279 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066236884 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066477305 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071619226 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067254371 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065673764 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07237009 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068250114 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065586288 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071859573 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066831681 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061073983 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069344145 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068833519 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064608534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069888752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068694268 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068350354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066909471 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064173012 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07308398 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066701116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065795027 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065423282 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064270214 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075886959 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068087365 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061415256 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063410261 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074770332 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064088689 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066315934 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065530909 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068368257 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066710141 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064031451 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065329479 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067742416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075505422 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071234279 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067708685 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071118213 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076514249 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065797706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068619313 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065731516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066688815 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066031633 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073523364 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070796244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070180791 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06770025 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061826904 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070335971 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07228537 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064392605 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063255057 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064353449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069179892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070755695 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06947147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066115537 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063676591 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065955708 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068716445 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068124047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06512007 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06426322 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071971292 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063803882 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072233236 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065976264 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07570976 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068690782 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060533733 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068384817 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063399707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071422855 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060658735 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06311483 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064702526 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066474146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064115144 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067313733 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059282047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071072355 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071159779 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064577253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063565061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064312344 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070485045 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065734508 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067617222 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067548493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069828927 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074182802 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063648099 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067490478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074205559 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193198144 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061026152 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071396333 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06491666 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065074483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065167515 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063892326 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068979858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075194668 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073036776 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059947662 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06857184 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064307224 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065268675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061998936 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070355295 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068943448 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066817683 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072547125 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06761547 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066312515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070379213 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066278847 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066733967 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06728374 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069317232 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066821878 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068008591 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065323041 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069218338 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0649815 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063782418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067783583 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066382662 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066416059 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071578759 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06546557 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065703447 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068627233 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067305604 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066867891 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067055482 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06494147 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069175384 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0665652 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066185213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068214684 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061207407 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072238547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065882756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073428764 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06628065 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063301253 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072649264 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068202123 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072086167 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067057619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066736049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067553046 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065817018 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069198435 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07288192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063802605 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076820293 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073147832 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066362907 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068359796 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066680811 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067518241 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065010162 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067276321 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066813992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066265798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065070633 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069575251 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067760888 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065730959 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06693502 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066109737 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065760557 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066328008 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059916806 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064329296 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064898187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065282343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074522551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065617989 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065149691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064390936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066104992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064248172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062279186 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073336012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074551396 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066323015 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072053653 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06436275 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066868369 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075343922 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059727311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063789892 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063581923 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063466538 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072383236 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066011179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074654639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065321201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064524149 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062657358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065578935 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063753888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059718076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062875214 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067732497 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063252282 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063093229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064199198 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066514957 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064865059 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073016847 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06364569 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064918477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064439352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061460305 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.195211322 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065342813 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069752149 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06689524 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064316752 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063422908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065593248 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066762493 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067077896 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066155417 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06785782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074642708 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066203434 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068589726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069452212 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061708762 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069198024 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066553492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065477085 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065056676 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069850516 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06924293 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067389852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074783916 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065484067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06652441 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066585313 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063686588 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066369644 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066113859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066012288 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065034124 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067919863 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073845459 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064291369 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06892175 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065751877 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066795747 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072752346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067136798 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068650338 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073289427 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06618045 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068646737 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073365408 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069669498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069604493 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066587339 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067738506 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071218821 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065118947 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072489959 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066413667 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066921197 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067465836 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063678995 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064911424 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065348216 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064644955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072331089 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066067165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065341255 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064561729 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063486908 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067340935 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069386018 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073650409 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06815886 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069222007 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06144238 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063168232 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066674188 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063939922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067073036 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068463649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071304007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067967512 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065990597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064608839 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07426329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071234962 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069171967 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063850515 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069200494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066982796 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06793256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066675284 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0658874 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067285237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069331853 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067408288 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065316827 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072325164 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06945147 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066950332 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067585967 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067022667 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066058126 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06125237 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066579899 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06787908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070697594 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067984576 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065882479 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076111757 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063827988 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06615147 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068880538 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064783292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069610466 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060557235 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066652228 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065942542 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065893319 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060976602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064224023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062541558 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066400371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063472324 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05980649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073949509 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073083884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067375296 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063271747 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062952702 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.192326594 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061828133 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066314962 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067139014 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069046604 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075980163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065545033 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065767346 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060998931 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066159402 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069404278 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069184156 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064137736 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061961833 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065477856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068965048 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071325348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064160796 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066354961 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069044896 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068482725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064018721 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069818336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063237782 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070030069 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078105113 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067443924 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067026656 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072276906 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074565596 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066977572 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061699189 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066445045 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069548441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066590975 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067690603 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067973367 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080891727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069120714 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065741311 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064793208 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068582757 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065291092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07408066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067493463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066416158 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070204215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067933304 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074899003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06895054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073097639 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069194552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069476987 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066115958 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066263252 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064189996 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065915775 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067047644 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06715678 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07138638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073845716 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065117831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076694626 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074700289 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06799587 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063184086 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06480524 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065528473 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060987843 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067189366 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064263162 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064146141 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064025769 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064509565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06643245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070819331 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06668119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06669358 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065714538 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060315092 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067643375 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068312988 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066646814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062918591 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065918048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066252952 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069688487 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068825761 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063912965 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067318855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067231743 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066519973 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061449952 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072297045 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064763704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067843317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065157036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066131519 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066875481 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069004658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070833367 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066738914 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068106924 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069407501 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067845972 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063161568 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063085153 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070631437 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063233627 seconds)
  done (took 42.105752804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099968772 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063243473 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061903438 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061677636 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072964789 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06223058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061235713 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062443071 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06258221 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06469656 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061610684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061664874 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070711304 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07706836 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0734663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066500825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061334518 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062390694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061508265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062829631 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070452571 seconds)
  done (took 2.746449759 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07318077 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069100004 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073104493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075764406 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067011378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070170988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072124776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070187322 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075762332 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066787448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075520185 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070558831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066945258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06664733 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066564885 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070513268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075292708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066865003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070765783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071928147 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070206279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072057247 seconds)
  done (took 2.877583724 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067118871 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065327179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067431009 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061125948 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065472614 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060901743 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068862404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063420074 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077290831 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064444653 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064292654 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064163577 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067100677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060646183 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065631782 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06355166 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107076118 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068662072 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065157006 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066700943 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061456921 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067121153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061219151 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061544853 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064548431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0691229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066436191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06361707 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065469791 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064284538 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065286631 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063323954 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066962041 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065505035 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064393132 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064842696 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065268079 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065315416 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061118886 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06344329 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065765152 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061307674 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06578096 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066345407 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063615143 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063192053 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066975223 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065194571 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060590961 seconds)
  done (took 4.547753337 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078395532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107992947 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06727464 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087300908 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079703148 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074970059 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068726408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088499177 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062924971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063824659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080698419 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078849016 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065439078 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069545311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071698554 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065098482 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066275972 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06391985 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068946194 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064442023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069186483 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071176421 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079215207 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078064034 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068960771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064507294 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064783519 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069356828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077642263 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069476527 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069346558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070350293 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079536142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070336791 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064012751 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067512954 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080356987 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064965069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067169147 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062207521 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066793684 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068896343 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071306223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08051324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064783862 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069626235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064825112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062410671 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077040212 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06707949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072418229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079107205 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068640805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065284702 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06928035 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07915003 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065093264 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063560319 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067932352 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076826158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0627865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068277854 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078031072 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066499619 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071540289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07833748 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070110375 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068597351 seconds)
  done (took 6.30657563 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074559304 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071165473 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080138226 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079265722 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071321667 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072023083 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071483555 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07140086 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071049489 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076260425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071353892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091665471 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067445903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073931218 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071686931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071687586 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071492498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071750947 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07155649 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071308628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071611662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079124764 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071975002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079168436 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097067543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066841287 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071361563 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071576861 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07937115 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071624183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078311688 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071440261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071470997 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079259094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078468357 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071392393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064689938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071157864 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071204754 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071024384 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066622531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07913483 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07134349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066661417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071126231 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070845833 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078966349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078088794 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073789236 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076104017 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071242318 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079061888 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071221515 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071509983 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07919221 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103911008 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07878226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079009589 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07116173 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078678603 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078808561 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084659224 seconds)
  done (took 5.986002367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082210715 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074497408 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076160104 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060725198 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06341709 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069263347 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063331634 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063757076 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073650724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07354175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076115589 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069062998 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071559458 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076667959 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069124029 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071636412 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068825033 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068755888 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07352159 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069277218 seconds)
  done (took 2.765245671 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072977619 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081412577 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066812634 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071076202 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067997078 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070692432 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067465054 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068554287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065997886 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068415195 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075607712 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075673764 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065913414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070763988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074989571 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07051655 seconds)
  done (took 2.475435748 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073428116 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071251825 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078520547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065196352 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063474983 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061840607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064822755 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061152328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061916893 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077694842 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065021029 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067627343 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065285477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063896466 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062584533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067863458 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062001704 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062669339 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065248248 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077238493 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075720115 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063823499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065802637 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06530349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065528807 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070848065 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06431812 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062928404 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062388714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06495147 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065944846 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068476731 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062257957 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062857013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063589454 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062693244 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064990517 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065254713 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067586729 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064598366 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063155931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064764342 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064737835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06597809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061337645 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06558781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061488234 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067018559 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063009999 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065123794 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06470486 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067077704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065291472 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071298548 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067485334 seconds)
  done (took 4.966334418 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077851545 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069532082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061239367 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063399277 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068447182 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066866168 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068507416 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066758467 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06709056 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063226109 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066796881 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067992346 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067038195 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06859831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0670331 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068783823 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061119174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066992088 seconds)
  done (took 2.558378458 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070466986 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065220801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072160201 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065673459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064714596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067299706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06109868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063716452 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063916984 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064937941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065410213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067916899 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064014477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067670757 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064844773 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065092592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067138842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063915469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064959619 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061208412 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067151663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0635717 seconds)
  done (took 2.786446442 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091434921 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08048065 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13670475 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077691673 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082430273 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070890824 seconds)
  done (took 1.887102739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089033619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07811018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065416775 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086661244 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072942677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066398771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067038777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06699033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075228281 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075286942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06674067 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074953663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075322241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074459518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072411706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072155612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066452879 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066277354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065560424 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083014982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06718172 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074945903 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066893249 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066461499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066810162 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07454465 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075193054 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075225954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066707062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075186968 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072195461 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06652629 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07568153 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075552155 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068423205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075170142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066735588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083316421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072287721 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074058779 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067752862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07211985 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074986253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071103038 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075458575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066748139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071095898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066572555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06709872 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0847412 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072162074 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074066385 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072616526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075162473 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074833577 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0846415 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075170052 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074385883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072720648 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078093748 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074619644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072491168 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074379545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075527692 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072677476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07473028 seconds)
  done (took 6.167096832 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080796741 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084814132 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067311869 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075139159 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074239917 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066789679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06685248 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066611915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066971893 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066486094 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106278892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067272399 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074605922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075150943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067325942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066957072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066865301 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074597971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066811064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085440143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066649066 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074765772 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074456162 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074386535 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075329389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073148962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067138866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067077961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066842352 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06665273 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071458643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067095655 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074530359 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0663502 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074526163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067106004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066559542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071867838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066694396 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072699123 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075273341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083105308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066561717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066268491 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075547782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066687914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066465011 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066112826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067061019 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066165116 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075375195 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075248692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075475386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07419466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066796489 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067023836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066608317 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066496619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0668375 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072515321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074278522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06636012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08482369 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066885701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066964488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074907115 seconds)
  done (took 6.076456602 seconds)
done (took 127.803486825 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184705535 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164410546 seconds)
  done (took 1.690479363 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067707221 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095584058 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077254497 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128206143 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066260796 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09936328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098442908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077511151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065717678 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065303241 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065195807 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068519312 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130698108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065854673 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065281878 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06792708 seconds)
  done (took 2.661693314 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095897566 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155072498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098443936 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064175788 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096054824 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071873819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06381795 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074264624 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069998362 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064489898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0720164 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069960693 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064441359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069652246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07052509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071982471 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064243558 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072260243 seconds)
  done (took 2.767855662 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099958377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090216572 seconds)
  done (took 1.544049333 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153344094 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105036209 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142959422 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340480354 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16604178 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226918187 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125652411 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126271943 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115597249 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122876358 seconds)
  done (took 2.97871293 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09612454 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150853261 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.251904077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114010331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072067933 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093809014 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114886505 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077458456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080168682 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079452731 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079837085 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075342838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097844412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072643665 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072561185 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075105935 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101345726 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071344553 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073491407 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075886029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097818706 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065259685 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072520823 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071254917 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076576608 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076610689 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064622843 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064746237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075988054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073590707 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076440437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092711248 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07664892 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106147187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069401659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108325387 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075566813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072878635 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073585896 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072977951 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077644575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077536009 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071432246 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075634194 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064706123 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075113114 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064996482 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06445119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076866595 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066056702 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076965182 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07566415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105744873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065947246 seconds)
  done (took 5.907854731 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10047756 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102424594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070521368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110007904 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098494335 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071746359 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099797357 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091964753 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10155921 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06922834 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067462314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069546786 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081084881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082059838 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111806548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103207108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072581059 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070401347 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102979338 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101558746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067612914 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093628791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08845417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100343231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066630523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069401422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067419531 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069427864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076016955 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077695155 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074568761 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079789269 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083860615 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077555739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066478084 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067467915 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067468376 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079583463 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07876692 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078098663 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077389572 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067051773 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067228702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068585231 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069153422 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066845246 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078405176 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080097237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078343726 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068978445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069616899 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067471912 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068804491 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0800216 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077171095 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080036761 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079387849 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067400939 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067626495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071436578 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080125285 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079067643 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078728281 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068781201 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078262619 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067641083 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07952271 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083332931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067440647 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068965975 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067731091 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068649478 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0690306 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077081689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077247372 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068517131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068979643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067412102 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079644247 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077807154 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067259839 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076425502 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066202385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067594919 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06841405 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068748777 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076727975 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079538233 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069185366 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067530479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068093978 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067458521 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065383703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075144555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078686444 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076927156 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07648472 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067623758 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076799087 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076754573 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067998098 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077377548 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066470643 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068313855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195861653 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079037127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077801698 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079828337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069041511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068102383 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078729285 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081125362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068109423 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078367205 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081055713 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079109215 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06770691 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081505295 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068677434 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079830637 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06926331 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079405092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068722226 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079766479 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068011009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068167484 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067781475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079753496 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069739673 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067501186 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069699281 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069390287 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079030585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081723145 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069419428 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081241315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077989872 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069151386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077543405 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068107278 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078614569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069702734 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070102879 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066834769 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081367504 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067704108 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067391014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069815251 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080632784 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067844054 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080074354 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077719075 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068312875 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081212367 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079958848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077138842 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080622725 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069715876 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068422445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067740266 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069286624 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077443648 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078403698 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069759544 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068607939 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078620782 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079185639 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066922355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078296192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077730185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078575183 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06790155 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068839975 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079870331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079878803 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077718475 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077522562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077502163 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067473129 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077091036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077295602 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067398918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083726796 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06730888 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081729566 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077949224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076164837 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078075797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079489849 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07949009 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079521542 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08199656 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067379873 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066926014 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078891177 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067442263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068408251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076945057 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068062477 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067903583 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081256 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066826728 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077213766 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065823018 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076484441 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065104352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067956676 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080825785 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066086362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06751836 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07679089 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067532369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074805172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078140096 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075683689 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065837926 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067764151 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077064601 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075921073 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06565355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06564454 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068325929 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075528874 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074215398 seconds)
  done (took 18.312314289 seconds)
done (took 37.232549451 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21264809 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151405856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17972753 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118400948 seconds)
  done (took 2.125953663 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121750376 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10106191 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095000291 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065008079 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101517961 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065498907 seconds)
  done (took 1.951738156 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310547791 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210530114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181901283 seconds)
  done (took 2.098220787 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198351586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18692902 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394325949 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254074757 seconds)
  done (took 2.54140264 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143264573 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089252973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067335342 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083195267 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134061596 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.1606934 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101551703 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125538734 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077918741 seconds)
  done (took 2.43175079 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146672549 seconds)
done (took 12.736125458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10791405 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.148996532 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067338841 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185418713 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.195502021 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109420124 seconds)
    (7/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.147561125 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.210864005 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.171063038 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.212263715 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.20388463 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.227993642 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077141903 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154521716 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071596144 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.206592889 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073299299 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077507808 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196449541 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.118810399 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072183652 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081938079 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.090227551 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177759173 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101442155 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071070569 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.182920936 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109901242 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157402454 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088309852 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071918771 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147277235 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073371058 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169596552 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172246856 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125984315 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070849927 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136053905 seconds)
    (39/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149284044 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082073764 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.148428515 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089117454 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075398737 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072998592 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072097784 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072780047 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070821528 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136062007 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073700215 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07197235 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085174131 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086229385 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071729848 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157042522 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075535205 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.206670875 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193387508 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183398637 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077147821 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067014289 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089296494 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052118641 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066307227 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053364522 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089472248 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.171978128 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.150623932 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070807603 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089273942 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07015259 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173151745 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064139783 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156072351 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.138145643 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07356454 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.065013606 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050200197 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064046021 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113332448 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088101487 seconds)
    (81/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061906041 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088563451 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.32139416 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.126423033 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061650494 seconds)
    (86/309) benchmarking ("sort", Float32, false)...
    done (took 0.127105303 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159400541 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061100778 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.151034282 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141205432 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097882129 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073650064 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.174461427 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077736828 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146006667 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05169537 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138081401 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089588329 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166516664 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085567204 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069884326 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067475167 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133047256 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107057171 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135247164 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075492046 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.293612844 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076421489 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099229513 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142547191 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 0.132475377 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073924796 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075009795 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09244647 seconds)
    (115/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071992623 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051203073 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097003542 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071702154 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07907834 seconds)
    (120/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109082237 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066114503 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070613832 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051143008 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084915167 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050816911 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052926963 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051149055 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074286641 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066064214 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071369883 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063747212 seconds)
    (132/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.148491974 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067545571 seconds)
    (134/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050717308 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063786995 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072245683 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071351046 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050715267 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067363755 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053052745 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12129356 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071028738 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072433246 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074078352 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166680324 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064289918 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.192083014 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074660398 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088188294 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085962564 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108882386 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137287051 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090362652 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075829036 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067387866 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050591878 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050823203 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06492816 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106720669 seconds)
    (160/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.138281036 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116957114 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051812838 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063945845 seconds)
    (164/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051118588 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17119317 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148348138 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109246841 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068759792 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072825418 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127970168 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172092923 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068667207 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071000436 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101695345 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064433396 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078132082 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108886582 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106462367 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064581278 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072625349 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09153232 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050985175 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065274716 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07499786 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050589101 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090819595 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087678329 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064199915 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077832585 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.234300082 seconds)
    (191/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052696512 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104862636 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094357951 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064509512 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07328782 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100465887 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080083884 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075643024 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051791847 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053874097 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076826278 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096141955 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072228498 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186778874 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087400272 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065940806 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073816068 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072336801 seconds)
    (209/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061074131 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065699768 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062195152 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067116632 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051328552 seconds)
    (214/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117306206 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069044051 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052224868 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089792354 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051773472 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183235008 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051870746 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070868201 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071031567 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074182164 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090640684 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050983323 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085509297 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051142961 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052149456 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070692863 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066904153 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053184869 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064228786 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08648453 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072444722 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052134771 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092758851 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051022456 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132182785 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069320847 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079092435 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079835224 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13568139 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079620293 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051375857 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089357726 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051351138 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065054839 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052302269 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079739497 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065084606 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071319252 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06472888 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067994262 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071281747 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051290103 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072531746 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071540767 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064748511 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064917077 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087431756 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066955397 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067469011 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106558566 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064768836 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05183239 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064537551 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068094073 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052084371 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06442406 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065314576 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065278055 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073009683 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050678854 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072376884 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064653197 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050897192 seconds)
    (277/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060315073 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064848005 seconds)
    (279/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051697419 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072360875 seconds)
    (281/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062463213 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062214179 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065026412 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063347151 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052269873 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064761115 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065386563 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070778967 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063882543 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052023481 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050804288 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052335506 seconds)
    (293/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051863917 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071935293 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06351353 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171000579 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097713181 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060418346 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07009267 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066260001 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050768439 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064580104 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065190521 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05223203 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070303226 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137087996 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088334638 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090541401 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051229297 seconds)
  done (took 30.261719918 seconds)
done (took 31.675311897 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083598537 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090898417 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073565903 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091685382 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079828627 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075244128 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071070209 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076835985 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078530913 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080320245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077131907 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05433642 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072965296 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073261321 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073411676 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090524511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077151462 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071886678 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07223048 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064082366 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072598181 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064906548 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066462845 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054166817 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077357279 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071014208 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071773571 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073555682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065095765 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065155818 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06846826 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072403751 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064730924 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076949261 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071996291 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071890117 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074207549 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075959382 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067168902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065134022 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073437987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064969316 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071945013 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072602783 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071244452 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070305627 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072137445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077068074 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089761922 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067312526 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073571457 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075524817 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075778848 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071454008 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069110916 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072208414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070321514 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09003403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072601068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067097378 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073188983 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073025579 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070502946 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071975225 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07203054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074503556 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073977275 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070063352 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073770135 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070208326 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064251564 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071769303 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06785056 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064621999 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074624498 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075311096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063524407 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070493508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071454761 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069997595 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063957511 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066649613 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066087759 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070396674 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066366697 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053712169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068400071 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070368907 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06353239 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07172705 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070201645 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071137012 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066008786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073936014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064064468 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069463769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065108861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06459177 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06616978 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068137827 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064349475 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066934205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073145936 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065876835 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070775779 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077522625 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064224151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070999227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063520479 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064051472 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078168874 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073376646 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064794009 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066555412 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063147253 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071026081 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063402142 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063870745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063878249 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063926787 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069759157 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063725941 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066135431 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07062574 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075315736 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063560398 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067050471 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065493787 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063357276 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068575768 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063772064 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063576225 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199334347 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061122446 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067446767 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065203647 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071654493 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066557836 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07237247 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067037 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072674823 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069000107 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070271033 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071032408 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06445978 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05787081 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06758367 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06769555 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067104944 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06502802 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066711819 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065138978 seconds)
done (took 12.308184245 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066446785 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140848788 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098083709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094184636 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084811406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065735325 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075431415 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10106241 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06700201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101333661 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086839287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084145767 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111586483 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064238099 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065131608 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068974531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06688991 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080633397 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100020702 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085889511 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114918128 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064673567 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09393458 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088829597 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08623643 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100380999 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066101698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068920269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068688665 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090624106 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086014067 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068850556 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0657103 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099691682 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091504175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082638087 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065390838 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081622954 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065677376 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064817474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066504801 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096863295 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079211753 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079281758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068904075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068228214 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066198215 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082702503 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087722513 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077462555 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08538719 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101579101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06782597 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064878924 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063759123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08426056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064559961 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067716855 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06556585 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067434189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065370648 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068261966 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080155802 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081125413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069363546 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079712284 seconds)
  done (took 6.74453408 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083889733 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089375029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08471328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085689846 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067025635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066359007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065690553 seconds)
  done (took 2.048023228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067538021 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086734096 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088295413 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090759032 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086582347 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08962709 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077679615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06859584 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08263158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067667383 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088893862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104912958 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068882649 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071973427 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089634513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066097825 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089294723 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06554163 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068662114 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088897191 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06752817 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080901285 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069310805 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066523883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07994452 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066066172 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112884717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070606539 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067498442 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068639808 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063965415 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105772061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079419836 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074809933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065599556 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079847754 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080023162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064141709 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082073783 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07087222 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079329828 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066413254 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06686229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064173027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070625548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077907503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068892407 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067871709 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068262305 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084843821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066287559 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079386889 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06873111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068004681 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06718384 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06928123 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075219407 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066560842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085436403 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066917114 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081668171 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081605631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079212178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081386996 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067840574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078917334 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078975644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068399837 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067574602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068965906 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081631802 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064438033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067395125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076225491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067631656 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088610394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088566286 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067667969 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074876823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066423724 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065777015 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065769972 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08833989 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068019391 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065373526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069699095 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068390605 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064329204 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064714973 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069564429 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063769246 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067086053 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068745367 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068790849 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068417912 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082157731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067723267 seconds)
  done (took 8.719753903 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068389244 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067125921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068558675 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067203183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067329528 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067136115 seconds)
  done (took 1.933049222 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092174803 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068528141 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08030518 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071314969 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1027837 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085922837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086008664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077729948 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083317347 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078206484 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085842988 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088023133 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092014859 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07259148 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086173571 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071249822 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08632769 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074930976 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077743792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072361401 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086206677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072166778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07249021 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081150763 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074809709 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07125617 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066431276 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077906525 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077905996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077842287 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071931817 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074863059 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070225798 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077458025 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085866689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070539336 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071402566 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076307996 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071852272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074924248 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087087352 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072475813 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073780525 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076475306 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077513003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069895612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076620817 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07537205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085354991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076140992 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076399789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071204706 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074922694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07640873 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069980647 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077388213 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076448771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085340291 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071348699 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070019994 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068034648 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07486189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076941518 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074674596 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077571546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076132787 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069950389 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071574848 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071663118 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071129845 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075958083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067998151 seconds)
  done (took 7.036763027 seconds)
done (took 27.977625623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543990384 seconds)
  done (took 2.033595474 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600171566 seconds)
  done (took 2.116034536 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.508839255 seconds)
  done (took 8.022763322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392763901 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489019013 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.680391668 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128958793 seconds)
  done (took 3.247531678 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667214413 seconds)
  done (took 2.192392112 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.205850992 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193421171 seconds)
  done (took 1.935324249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372279158 seconds)
  done (took 1.887828501 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.10394449 seconds)
  done (took 2.621418998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26067898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161882292 seconds)
  done (took 1.939977815 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457342138 seconds)
  done (took 1.974295558 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.804736421 seconds)
  done (took 6.323086961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202554523 seconds)
  done (took 1.766901382 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23935456 seconds)
  done (took 1.760167926 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.69059891 seconds)
  done (took 3.213182322 seconds)
done (took 42.557309276 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079184275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080537308 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079320926 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076452189 seconds)
  done (took 1.821444045 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07643617 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07140373 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075787995 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071625538 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075816843 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072084199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072999418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075999445 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071133539 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071875895 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071321251 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071391722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073452999 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073338953 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069965853 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074111285 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07480967 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071581102 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074252892 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071176675 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070080706 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073571407 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074037867 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070885764 seconds)
  done (took 3.273238816 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076886029 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071478684 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073547378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071282727 seconds)
  done (took 1.821935511 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076745985 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091042083 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087309952 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076786074 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091271152 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084893066 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067860064 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067891633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072002616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075894495 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067073401 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094898188 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086575859 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075527346 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077623012 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065521755 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06770787 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085560772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076037394 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076370707 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068737469 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07594375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066985658 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08697789 seconds)
  done (took 3.38844656 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076753137 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101023494 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076798545 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086481055 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08842032 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064404411 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073109023 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087772007 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121184194 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064767859 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068831914 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064318856 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071268936 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064378343 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07493862 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102729156 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106865347 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0675408 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094201687 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064469489 seconds)
  done (took 3.158689643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072168348 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068347921 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064417998 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06792456 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075860448 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071455409 seconds)
  done (took 1.958176651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067645181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066529298 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066059053 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066163954 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070584035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066095172 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065027962 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066142931 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066247592 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065905985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065419597 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064837804 seconds)
  done (took 2.33122147 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192969986 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067563468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067675506 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065226914 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069380959 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065350576 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078457388 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066890398 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089167546 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06558269 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065740901 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067460987 seconds)
  done (took 2.497841095 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203849258 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074929424 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233361748 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135194766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111239078 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11366973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102164107 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111974977 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141587736 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100783991 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166223574 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162753201 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105547272 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135125237 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087383358 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.095956218 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153384753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159769199 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102542197 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163654853 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141829835 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122276817 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144343092 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099392403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104177821 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120388239 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070127869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078947916 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167474622 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129727434 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143983605 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109046646 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092342677 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173784464 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169298734 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140031673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13173254 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082741235 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100429266 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129853772 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193462926 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086048526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159529577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243269134 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079653484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132881049 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118939157 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118602678 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105532431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088127917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144520173 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180264625 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137684908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086715011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110817984 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113425638 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115248415 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102574104 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179817533 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164871863 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125341523 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070198121 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096986893 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151356669 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12965801 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107592726 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124082681 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093004425 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131883765 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151822989 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116967363 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141524279 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127370863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087038695 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11718562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137777661 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126533431 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168121299 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122490585 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07166112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123049652 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102296438 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080223776 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138407576 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074212322 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172559263 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096196414 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104210196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110611426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107044831 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106401924 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158212581 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140710826 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243900598 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065040065 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102360498 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118420295 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146094018 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086122245 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10718857 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115100373 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076783631 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137895236 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073830076 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122732971 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073713368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124721642 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131678555 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075044053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119925537 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099090078 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098874197 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131555559 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157182599 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087841727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081358329 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16438226 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121419422 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102197229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141947341 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154162822 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097035845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101543067 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147340587 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17753738 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088050284 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160111177 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105973636 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082858791 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086009127 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122636431 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110485468 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120222629 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080838207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117040902 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165971348 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074010782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093811751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131558509 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078490745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079157922 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10126527 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09859233 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09311941 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098827509 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102450505 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134100573 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120254409 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102359328 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267331105 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097835621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168218914 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08752199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098982033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102041166 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068880198 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136221848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155295163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078842179 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162435859 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123167526 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104133128 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118224411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081955547 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138828485 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077406602 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069410868 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143327726 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108246078 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109399774 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149998638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103348143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126395374 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117963142 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132857435 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131064148 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127260248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104085406 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08677208 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109714532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123814733 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071594269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090374423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078909802 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102271889 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09462546 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081945915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14057959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123380324 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098714884 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110188943 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095120899 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145413521 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075606842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127704946 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117268637 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092620922 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148970924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149501227 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128814701 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097064885 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141312995 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068536255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072238636 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229885737 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123205172 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082326361 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082881582 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116428213 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145943454 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127386941 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138152298 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109913334 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119665895 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15364432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068235828 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115025827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146419888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119753115 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102826103 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08888675 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097568154 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140176196 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108048777 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181027016 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112650032 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125191807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150722665 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097793236 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078882998 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102240362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134042257 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103315672 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142882726 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098162803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086934408 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109048426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073095875 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098772372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125905655 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118305546 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133506914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112812397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131600932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076113595 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115636586 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118646549 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121736464 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06292545 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117497553 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159038519 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092147458 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116610169 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150261125 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07773394 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121594182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319537121 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146017164 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083412578 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109328408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117187447 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126226712 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118882676 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13833597 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108044487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13388103 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107459266 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08531247 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085568368 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096994883 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103343068 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093782493 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106906109 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114033848 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09368406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131914457 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101867903 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108257701 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116283843 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095061033 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087527991 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095415579 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172752371 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117529908 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168328899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097014019 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143492582 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163244606 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07365733 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077669532 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076703392 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13776088 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082934742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129613479 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096260755 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10455615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122397211 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140540284 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093545874 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067542902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106783693 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132975948 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110915793 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097212182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102735021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160211184 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09869455 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078240313 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111932676 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102718812 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102971835 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167919521 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204156347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098701056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075444147 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079962757 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126061745 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152151838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079613288 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10112699 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117412163 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109127494 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126380517 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101120976 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09795395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113006225 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147653098 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127030043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088540359 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110532556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127963054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154111906 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103785206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09441639 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169262638 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150580914 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158638789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087573004 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113055963 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113467825 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106944627 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137013885 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082142397 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1618222 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08076572 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134573421 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103060194 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088811899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128503127 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09725618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103805554 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146200893 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115980296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081152927 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076974451 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116600981 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11899297 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104905725 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073853801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136628838 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071573898 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129922495 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165202999 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079306534 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101935309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239669229 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079737258 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107611327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101468389 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088705782 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096974135 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17133363 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087425538 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148469043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140786096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111936971 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135643896 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099038472 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634125397 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076317577 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150136741 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115645375 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170955304 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095755295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117042607 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10848491 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122554454 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143247658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103864628 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172981284 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130393277 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115012282 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078713307 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101156959 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101346004 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08774643 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10341333 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111950693 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114336965 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092137685 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114547202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121425508 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080631007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093867815 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153954542 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115279383 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142962266 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139007211 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08392382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116102669 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13645355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078337396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11945941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148583785 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103542656 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095922807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078162165 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244538591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167536998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072370194 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161103906 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11901489 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107415849 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111387484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113412401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130567465 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106514647 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120350087 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09282224 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1095822 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111614811 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081656412 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076945886 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103476882 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111924913 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09671012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097624872 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09672256 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149387443 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070943898 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094674659 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103193176 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14415846 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172242143 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087337842 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081683035 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118019976 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111974112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11208478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118777203 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078296691 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081416722 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080657335 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076018973 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106370506 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110325627 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102896666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109872784 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16191161 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081658344 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218469269 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09400908 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103442756 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068582265 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077270684 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094589417 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096302829 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106960161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099222111 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166204633 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092800425 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08754919 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090180235 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071595593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080561048 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269238907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10960434 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117377492 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096603339 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062158463 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10775568 seconds)
  done (took 58.120930006 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107683626 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080989321 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095247535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148998021 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121332578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210381075 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15572544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198114496 seconds)
  done (took 2.754968553 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068033875 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093244095 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099409508 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081653188 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065558244 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067085704 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222605438 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078611958 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065767436 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087073113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07750629 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067427327 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413976415 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066355695 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066720922 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06191445 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066417945 seconds)
  done (took 3.385079879 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36260331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600211647 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36816262 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072293951 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.415989774 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090940584 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.038390775 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128098244 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071417704 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536552364 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700573471 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125403324 seconds)
  done (took 18.15773588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07528908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069053862 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082574735 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083611258 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072119466 seconds)
  done (took 2.087166783 seconds)
done (took 106.312098437 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080425978 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375229279 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053283595 seconds)
  done (took 2.095425915 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082742019 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084498458 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08559951 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08438798 seconds)
  done (took 1.985674035 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074664202 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075459325 seconds)
  done (took 1.791518395 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226021632 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158168703 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08657276 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082714914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078304962 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078839086 seconds)
  done (took 1.886812405 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072653414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075223252 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072762441 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075988195 seconds)
  done (took 1.939089871 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076838428 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052292625 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055206994 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055697795 seconds)
  done (took 1.882656075 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08655189 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078544335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077655767 seconds)
  done (took 1.887072307 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10102166 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084919308 seconds)
  done (took 1.829093335 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081426937 seconds)
  done (took 1.7256813 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100191394 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11387528 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130552286 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110000797 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13747564 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108551556 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085397709 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086322939 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076860055 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086950417 seconds)
  done (took 2.680687087 seconds)
done (took 21.895082508 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079615888 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461749757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360805868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089145992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669288968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356152985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023584394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091619176 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112693952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067326349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08380461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649006631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97479147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418692734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965534282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324719911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650169185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067918393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067577074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067760113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012181388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06748822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067796429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068172455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649124744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371162827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067799023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32172311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067135629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069239475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355164714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067850874 seconds)
  done (took 16.395642915 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071790054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117424919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073463839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083634668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070378185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06974358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071251423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068950768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119731707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067492196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084319162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067461073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071340458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068139179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086690029 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067840243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068893013 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068574028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068345466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06843175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086858902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067396263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068272534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068750328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068160951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079789702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068218107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068397571 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068479525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069974555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070772537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06885966 seconds)
  done (took 4.046621643 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116271672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124937734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074056621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102802846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112062698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143040579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092392138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126964776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067650342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08447114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067869914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100271471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068421464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087436093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068552551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068877553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068905769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068692759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068318742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087262562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067939364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068756517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068626269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068210174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08118475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068488333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068531905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068524084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070068664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071260685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06902354 seconds)
  done (took 4.298698154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074146986 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074475454 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082658636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083319789 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06935665 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072277001 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072639452 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069296136 seconds)
  done (took 2.259923375 seconds)
done (took 28.653531415 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07993482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069169105 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072545165 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080578156 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073209453 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078695491 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067387638 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074218136 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071794559 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07288775 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074713604 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067956364 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070932242 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066999318 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073595106 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067599522 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080342179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071441124 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078558343 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079194529 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070082764 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073171524 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074015098 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079109559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078921224 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07895058 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077356786 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072688902 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0690824 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070366352 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076059893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083354359 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068212159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078647366 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067521803 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06735247 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070912311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067582276 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079292009 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075859317 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068905354 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075623777 seconds)
  done (took 4.732552117 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088574621 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09008093 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083862421 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061304184 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066352582 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064167634 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088041713 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059562137 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059426293 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.0871662 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055559685 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059011113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062544013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053890688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059028971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056647009 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061197769 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055850735 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059203267 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059442396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087964138 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053884207 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076934726 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062107476 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058929854 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06149815 seconds)
  done (took 3.399543438 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0755324 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083725896 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087691686 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125679716 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102519102 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076780636 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079400455 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092206996 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084853724 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066633044 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070980064 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09272947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087324657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073236152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067250401 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083789099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081272113 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068398899 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072705563 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091657123 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08477199 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084389592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092341901 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080368311 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0669477 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06930722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070919961 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080483475 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071929645 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076686484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071203284 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070547977 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069258753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078464023 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0711387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06871619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090112466 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076700213 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077701797 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067652329 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070689088 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067983228 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090723643 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125546315 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06685142 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073700823 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074915234 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076405784 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067235199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086299011 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078833122 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067329944 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070405039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066640816 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067627016 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080668919 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069640717 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070015514 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076597384 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070311985 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089707349 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071500686 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082707053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067165475 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075223867 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06668035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068511923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066845677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092423277 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069227523 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108362535 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068584793 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068652387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076516042 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075277899 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073906788 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067631475 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082443179 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07736796 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070704003 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075902426 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070496998 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070457515 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087498747 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069825254 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069120802 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068381295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074122467 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069769129 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068559957 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080348716 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06739582 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070451219 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083706596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066813449 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068490719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073266371 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072033982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066715961 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078232213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072095852 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067875979 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076334972 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067448957 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070449567 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079055204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073679592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06661434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071599815 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073500061 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06787884 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06835662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070295366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068755516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075498673 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073313712 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071388751 seconds)
  done (took 10.555367828 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161202392 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155891292 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070872431 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144356638 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075958747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078479267 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147055304 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094284887 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06776369 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067984708 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068514246 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110339667 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105180784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115748454 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07857322 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067364673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083121379 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113731291 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149030385 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142292237 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083704255 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076737335 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070072355 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068739969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070797597 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078287801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08550445 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076602142 seconds)
  done (took 4.410562863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081788034 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096231241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074073486 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089281842 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091168077 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06775104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070492155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069372613 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080069838 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078674565 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06759016 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073850007 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075069134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071069568 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068770374 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074802133 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074561103 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069028328 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070767621 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072770482 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077563919 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091283694 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071373669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066679597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073031905 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067028649 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064419055 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084399134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067988103 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091176693 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065610308 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07554228 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081190073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068273696 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067208304 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067243932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066909443 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067121917 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06907178 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065932218 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065854896 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057354892 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066604847 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079367492 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073733047 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056390045 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072307874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072472605 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072473542 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065303799 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070142366 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070080623 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070943411 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07447364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072106688 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072441215 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068549785 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073429812 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075182601 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067342851 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064148761 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065882051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071753359 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065534001 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075265349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071652864 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06598284 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067130898 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069143111 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073637997 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067027867 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070302906 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064984654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068965563 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071867826 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068849946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06808687 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065916796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067117717 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067956371 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055390918 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067060434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053337455 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069995479 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065477282 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065861179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066884308 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071789524 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079885819 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068798347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073227744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068238821 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066157138 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070001647 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059906995 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070113656 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082421648 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082222792 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067309222 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065280378 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081544987 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072217044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066304214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056086759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074962966 seconds)
  done (took 9.147988435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090390212 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070081168 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083221748 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09029158 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086437236 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074766699 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076090151 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0693306 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082177124 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073885946 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076371396 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068181026 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077155955 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076843427 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070264399 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077072486 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071968861 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082932555 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081896008 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068018322 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075936843 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080011046 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089533942 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08051974 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078399178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079983642 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089245426 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071687558 seconds)
  done (took 3.900443674 seconds)
done (took 37.804240185 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751265926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921532168 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744008377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.097949012 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.827630669 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.939848454 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.867180425 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.757602281 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.903145313 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777044687 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.009150649 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.779794544 seconds)
done (took 65.05034599 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.79435823 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.884706945 seconds)
    (2/2) benchmarking "String"...
    done (took 2.006439059 seconds)
  done (took 5.571289735 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.041906175 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.320969987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971771249 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737198649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.742352702 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.971214847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544579967 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.286188014 seconds)
  done (took 30.255902735 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.843595031 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.975574648 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.414084619 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.454023043 seconds)
  done (took 15.418376222 seconds)
done (took 62.846629482 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733225584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.739519052 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.745964864 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724551703 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.800415845 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.74919403 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.2403291 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.87497937 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738792556 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728197217 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74147858 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.173621802 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750596281 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.119722551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.741193786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.73948456 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.754114727 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.333076003 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.899687434 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.751758727 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.73994483 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.75084133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.740761731 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.866524522 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.755569781 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.74002837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.176016347 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.748663275 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.356686771 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.743754257 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.772276955 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.324049047 seconds)
  done (took 203.474089012 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.742090477 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.81011759 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.897181008 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783246694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.237253166 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.923612869 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.854231535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.288782621 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744871832 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.766534703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.037685856 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.742726233 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.067597975 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.724500683 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769609988 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.74598403 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.029464144 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.041916541 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.774295507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.90861997 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.754168011 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.926833633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.891246244 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.994139681 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.752612967 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.845749353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.762432579 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.755949213 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.933574106 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.007436621 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.754929088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.743254401 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944896401 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.613543042 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.740957472 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.754578098 seconds)
  done (took 169.752200695 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.119902599 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740557878 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740031205 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742516784 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745966654 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.743573049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859874544 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866045682 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.191083594 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.028773514 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796218856 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556568234 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742853894 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807243572 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.755840349 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.741841936 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755091703 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.768809909 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745685584 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741211644 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866645532 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755045086 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.91798153 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748100835 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741261935 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747073156 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.113848227 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743077776 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747162158 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.987653778 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.744000314 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740993131 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.638855881 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.64703488 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744860306 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827404556 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744666834 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749333688 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744921336 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.961953789 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7432963 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.744855888 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.747435225 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927295834 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741708521 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.864951421 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744036419 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.239381242 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743968705 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744182844 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.588263222 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.442114726 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.748782118 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.746206938 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.747463665 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.7445115 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744847443 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.750188167 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.534626345 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.972772182 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.75080275 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.749146432 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759230493 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745578562 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.804306262 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746255439 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.833425583 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.810930052 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.864891436 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87549321 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747410836 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812958847 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841068397 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.746780466 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.746638526 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746253986 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.745382654 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827419356 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.746460113 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.896036877 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754430973 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.749919603 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746651083 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80096144 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.817654113 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746219365 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.644881217 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.751771652 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.746031551 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.073684367 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815502392 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.747516433 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746536635 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.749665385 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748641191 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.88259494 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87050386 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.527350792 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.751164221 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.747894542 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.470984261 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.752639361 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.894728614 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748259357 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944897235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.753936091 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829991603 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753416609 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.749956312 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746664427 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780255939 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.749113326 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80642475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.74514637 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117852945 seconds)
  done (took 399.002068955 seconds)
done (took 776.087446889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.408345406 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371167091 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483921543 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.395502401 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.366325568 seconds)
  done (took 13.716991344 seconds)
done (took 15.405337277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840016084 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.843823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.778007661 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.841561945 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77298763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841338303 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821185578 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781264221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.804396192 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.777156308 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810487848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775019615 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76516107 seconds)
  done (took 25.144274711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972469581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996233869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823640067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988521789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79744869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003502977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.915096713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.899856113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905090278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766703984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762088462 seconds)
  done (took 22.527057569 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997252996 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99614344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830555568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.008198838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804199168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985274076 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93246746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90604143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907772769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765579533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763958065 seconds)
  done (took 22.590952287 seconds)
done (took 71.953004723 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.759639049 seconds)
  done (took 3.453642236 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78135538 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.919587338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.766364541 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.764035355 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.763349131 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.761316562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.764271415 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760730459 seconds)
  done (took 15.976409856 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.756554094 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.75781453 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.760474999 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.758508206 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.761179689 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.759735583 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.758200953 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758796043 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.755983866 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.759008688 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.757757929 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.756628744 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.757971719 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.757340407 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.758954493 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.760703833 seconds)
  done (took 29.830972103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.757731729 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.758130888 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.757645962 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.758131033 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.755922962 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.758534099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.760152227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.757272513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756360975 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.757493504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.757988686 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756245918 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.758066244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.757412043 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.759684368 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.759360747 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757201662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.757924408 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.762388532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.758532101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.760602182 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756404361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.758055399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.759382441 seconds)
  done (took 43.892427494 seconds)
done (took 94.845230412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.663781044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.152113031 seconds)
  done (took 8.510877462 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.76479552 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.760567742 seconds)
  done (took 5.259761364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.760736895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.760851296 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.760210983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763467106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760033956 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75935912 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760330335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.761052757 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.759662385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.76281944 seconds)
  done (took 19.304343063 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.761026715 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.763272128 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.757812117 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.762458128 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.761270852 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.758922102 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.762837333 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760186078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760847243 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.757955185 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.763704123 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75990406 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761844468 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759864032 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.76270528 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.76106094 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.759784237 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.758402697 seconds)
  done (took 33.390046742 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.760645452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.762045575 seconds)
  done (took 5.220282785 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.757464357 seconds)
    (2/7) benchmarking "second"...
    done (took 1.758324271 seconds)
    (3/7) benchmarking "month"...
    done (took 1.758978908 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759726164 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761358604 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759220476 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.760054373 seconds)
  done (took 14.011305669 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.76325679 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.921890546 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.996677198 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.435967595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763678151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76652011 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731595632 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765605119 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.767090417 seconds)
  done (took 19.60913375 seconds)
done (took 107.000862666 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.574390096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.757882367 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.107536282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.814101884 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786736813 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096668967 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766591381 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.989860996 seconds)
done (took 42.592442045 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.840146167 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.308526585 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.339114054 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.138499353 seconds)
  done (took 12.485729598 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.747408865 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273331615 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800420588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352042522 seconds)
  done (took 19.895587616 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.127324401 seconds)
    (2/2) benchmarking "read"...
    done (took 2.121133518 seconds)
  done (took 5.951205072 seconds)
done (took 46.875279782 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764602565 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.764482419 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.76496378 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.76205285 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766442812 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.762327381 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.762900024 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.766652202 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.767297403 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.767397258 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.767043973 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.766555485 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766622221 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76527103 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763775794 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76698192 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.764075476 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763925894 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766445702 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765129643 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.763139757 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.764696994 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761811759 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.763400095 seconds)
  done (took 44.058123897 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.766554213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.765370204 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764550127 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.765260863 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.765702519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.767042958 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.768694195 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764778847 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.767138174 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.768664617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764590922 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.764706894 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.766272063 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.764528635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767304508 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.766172346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.767212779 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765257688 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767688609 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.76495079 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.769447194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764318798 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.767750832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767494511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.764396993 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76726119 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.767336 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.768073963 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767098516 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.762881713 seconds)
  done (took 54.691337536 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.773507235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.781074701 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766647249 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766671648 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.769739662 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.768602925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.768001446 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.770015758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.768969195 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.769271326 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.768492 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768077895 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.769707197 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.768278731 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.76827683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.768788689 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.768014799 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.767776261 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.768175106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.76883944 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.768175664 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765880559 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.768076467 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768636673 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.76784299 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.768226674 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.770198991 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.76567035 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.769633247 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.769857261 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.769579949 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771734988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770427948 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.771984697 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.770432764 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.771241469 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.775678524 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.777788819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771529124 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.770147705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.77172923 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.769373139 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770332366 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.769558308 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.770549189 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.769055014 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.768521668 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.771743337 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771961017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.771305562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.7718525 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771539031 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.769569145 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.769837229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771317584 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.770905082 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.77211384 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770786299 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.769865318 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.771599241 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.771088825 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770941061 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772913756 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.772286438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.771202286 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.772220686 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770698696 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.770862431 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.772276927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.772227533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.77121794 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770335975 seconds)
  done (took 129.167728438 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.770075486 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769807119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.770110494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773108645 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771878153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773811595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771255259 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77201904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771118608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774435808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773652566 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770264147 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767718983 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772480311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772505248 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.771456772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774158015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770792312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.775263539 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.777052863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776422948 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771059921 seconds)
  done (took 40.698914183 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773906848 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773171922 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769114011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774572839 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7722046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775753627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.7733479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772696496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773518126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772940527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77340955 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775163609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772043122 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77143201 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770490502 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772475516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776618224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772952662 seconds)
  done (took 33.626041555 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770558879 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.772805382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773961049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774417062 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.772390118 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774487887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772082633 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778304064 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.771903376 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.772306803 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.775769274 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778657093 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.77664602 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772868063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773842654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772348032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.776429591 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772036861 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778511186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775725773 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.773165506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77757643 seconds)
  done (took 40.745844849 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776728819 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776764836 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.773661038 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775622048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.772847383 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776491612 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.777201704 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774013685 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779191656 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.778037514 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773765223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.779597908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772236855 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.77587657 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.775090263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773544972 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777633792 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776536111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779446788 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.776784412 seconds)
  done (took 37.233429513 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779593533 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778076075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776925489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778010027 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77882701 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778443678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775773248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.777368179 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777413997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782053294 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779051319 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77887618 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777617797 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.778358163 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780897523 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778027336 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779839889 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77946379 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776604307 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779037204 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780987036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777618812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778023628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.779694631 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779553142 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779699176 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780346137 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778193136 seconds)
  done (took 51.516443267 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77787192 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777388997 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.776340779 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.777580258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.776386516 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.775637431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775552308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.775095272 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777159344 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776198076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.777848964 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.776867293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778542394 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.781345729 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779567721 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.779196368 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777580519 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775759924 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77762402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774822922 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.777981448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779966728 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.781889646 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777865753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778337177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.780100044 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777002758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780544176 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780610287 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.778013303 seconds)
  done (took 55.050203544 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.79861902 seconds)
    (2/2) benchmarking "in"...
    done (took 1.800242578 seconds)
  done (took 5.311151048 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.776093175 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779909332 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781665023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78034606 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780630183 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.78466131 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780811839 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777491193 seconds)
  done (took 15.955626146 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.77842359 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.780448565 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.782807986 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779760829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.783154422 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.780617877 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784724019 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.780364798 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.782315092 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780977076 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.787026513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.790085774 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.785007917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779982429 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779120964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783141055 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.779274959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783029602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.78179782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.78060611 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783286237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783787121 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783115482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.779979827 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.784267241 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.790247917 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.786005766 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.780563665 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.781148796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.784237759 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.781282192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.779805952 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.782280468 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.782315231 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784464217 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.782392398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787386071 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784127173 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.787847152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780540182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782239797 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.778079678 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.782804695 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.781157583 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783422089 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.782669106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.783458654 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.779730562 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.781938501 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783593887 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787423536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783636931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.779072354 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783474508 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.785604141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789195062 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.786528258 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.787033603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.794552293 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.790825574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.794922411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.792706049 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783381661 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.783551634 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793908818 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.807143981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789672719 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.783562629 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.779973516 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781500367 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.789855261 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795420359 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.794897397 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.786674691 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782706538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783451113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784976658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784934412 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789029378 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784888146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.785033187 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783383744 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79599946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808532758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.785103964 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.784135896 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.782574809 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.783962441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.7850641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794013511 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.788793631 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.786051429 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.785022626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.784594531 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.785289122 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.7851812 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782083864 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784515899 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.78217684 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.786264999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78581229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789606004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.797328043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787034753 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785999625 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.790431292 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.787179416 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785751727 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.790811547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.78639122 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786259738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787038234 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.792681989 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.782775962 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788426346 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.793818488 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.788553541 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.787291877 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.788184551 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.787665697 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795685897 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.813869886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.787787729 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.786953032 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.792185527 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.80103467 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785193705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787777811 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.786900346 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.783695594 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.784871995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.789638005 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.788079603 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.787416353 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788801111 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786839906 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.783527332 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.784373815 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.788386871 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.787905401 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.790554057 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.787828692 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786644541 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.791975546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.790459473 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.789123584 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.794838457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.786955194 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787324584 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786785013 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.787062711 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789252958 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.787760384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78824181 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.789468743 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789853721 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.789206962 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.788289388 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788886675 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.788306782 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788881686 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.787145146 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791317458 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.78911386 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.791967313 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.786660402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.784211767 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.788787168 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.787810617 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.7868408 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.788743004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.788624362 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.789766827 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.800617572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.790792274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788617056 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.79088702 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792502526 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791838381 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788708661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.790881814 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.799031926 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.79392923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793282732 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.792062348 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791459478 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.791464115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788698075 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.788028757 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789189275 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.792342421 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79893197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80403595 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802139062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.791303338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.793813187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.792643576 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79758129 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.796197539 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.791276603 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.790582372 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792708595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788274494 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791200622 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.790680463 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.791340049 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.791054974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.791971069 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79087978 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.792988519 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791236897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.791995816 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793616759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.791527256 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797176454 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794255237 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.794348266 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792213613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.794062857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.790941097 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.791892311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.793261568 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.797267653 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.788845249 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792674576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790486577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.792982371 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.791290998 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.790300396 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793297887 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791677296 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796852019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.793993651 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.791240028 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798192751 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.794827234 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.791721463 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792510471 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.791407681 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.790296124 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.797422032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804380248 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.794401959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.793822263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.792381655 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793434665 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793871665 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.797473623 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.789224279 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.795834567 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.795870498 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794437226 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.791973128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.795198009 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.796677394 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.795500369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797963446 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793752285 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797548256 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795700296 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.796883639 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.796134635 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.794867428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798928767 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805493717 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802017777 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.79253893 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.795743322 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796737423 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.799158527 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.796265695 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.794973984 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.797290549 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80871414 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.804925286 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801687744 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.799256218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.795657722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802839435 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.795504624 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.800462916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795662463 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798887382 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.795757694 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.794685437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.791199633 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797732691 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.796120594 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797117827 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.797417026 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.799805535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798582211 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.796574135 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.795306916 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.795940032 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.798112427 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.795881655 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79629567 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.795385425 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79721844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.795466199 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.796010602 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804290326 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799025232 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.796183983 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.79611856 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.795794353 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.797095772 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.798199165 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799681353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.801772022 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.80829972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.80055394 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.808772607 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.799269981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805700571 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.796275412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.801528449 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.808056152 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797646184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.797907584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.80001152 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.797798774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805483448 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.801476665 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.799875791 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.804803792 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79972426 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.800513433 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.796863847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.799577553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796853457 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802849541 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8043483 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802663596 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799976391 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800361903 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.794359417 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.796987604 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80000826 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.799452623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804313891 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.802587693 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.800336392 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.800074328 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.797819063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.798364693 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.799410037 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.799697865 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.797133162 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.799206773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805784415 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803002742 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804952657 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80161572 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.808949196 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802515385 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808631434 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.803376821 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.802295015 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.800847648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.799895278 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.802222902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801045327 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.803113343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804183874 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.804214882 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806691417 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.803098077 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.803037632 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.800862099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.80088646 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.799630983 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80865663 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829976973 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.801181559 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804427009 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800631801 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.803905745 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.805003568 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79968824 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.799375773 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804224513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812865694 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810652422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.801197093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.800553882 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799858315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801903091 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.79964707 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80372852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.80496581 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799735443 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.802594172 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799419228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806233117 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.801541417 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.802044085 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802999798 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.803156216 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.811234421 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804814578 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.803754745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80546565 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.80329125 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.803898057 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.803131937 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.806140844 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806681853 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803003077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.806138066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810859913 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813063664 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806745436 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.80513459 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.804676694 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.805866297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806249516 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804267471 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.806417491 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805321695 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.802795127 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.804407778 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.803904634 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.802572878 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.805374506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.807477516 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806135809 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807151589 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.81165738 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804760678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.800296025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806523397 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806739279 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.803214958 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.804571108 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.81053356 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809654174 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.819175398 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.81673071 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811015098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807130075 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808929622 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.816091241 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.804427595 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.806252979 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.805881379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.808935906 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.808659764 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.808474838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806809744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814232017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.807279817 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.806476906 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813162793 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.807988108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810226267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.808387584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.80985781 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.807591043 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.806109353 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.809176056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.803986404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813705542 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811694933 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808047485 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808492705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.808178701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.807671759 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815222844 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806989663 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810424034 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.804199039 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809950916 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80962235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809867822 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806144671 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.809171809 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80753178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.810997907 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809037207 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806300154 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807620988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.805647313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.807494003 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809788871 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807793778 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.807466149 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.805332761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.809048976 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806811137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806400454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.809387835 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.807985062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.808784579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805551846 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809792623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810474857 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.817916406 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.816442497 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.807024562 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.806173295 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.809092677 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.812656373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809537652 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.806606035 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806919576 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.807821826 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.806170693 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810431663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809105024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.810568778 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825076184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.814026261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810702554 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.809311319 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813215562 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.806417345 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.808358574 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.807878845 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.811066436 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.812237199 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.820121819 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812195223 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81513872 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813440019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.808469798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.812272084 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.813746585 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.814965134 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.810414203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808877165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.808443541 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.814716234 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.826070982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810159901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819575565 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839591627 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.810654226 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.811713354 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.810696281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806569198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.81124891 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.810986988 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.811702324 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.809823689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811361599 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813413319 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.812294762 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814276185 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.811604279 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.810505388 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.810928351 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.811203421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.808977362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.808673144 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.811808694 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810742545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.812720836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.813522058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810721481 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813783956 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8252942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824639993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.814232703 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.814776842 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.809424822 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.814105367 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.817052378 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824721286 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.818628294 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.812275832 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.814264112 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.813499186 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812526981 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.810567565 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.816793543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.813064668 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813659399 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810086313 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.827525212 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821004146 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.819857663 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.810993303 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816115774 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.810596581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813731867 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813659541 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812686253 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811224668 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.814344135 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818896815 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816136153 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814133137 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.817532664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824160665 seconds)
  done (took 1073.824809167 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813710224 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812883342 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81154319 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811815976 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810827107 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812000168 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812316809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810511422 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.811349627 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811535982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814902718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810059743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811059918 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810118982 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812517447 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810230685 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811508388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811859451 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812458922 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812883402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812763493 seconds)
  done (took 39.795222005 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.813073051 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.812106864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813553292 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816616976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813328653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.815083975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814215749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814998514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817072681 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813773512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816582858 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816839632 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.811471022 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.812398716 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813931267 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817241382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.813241009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812708979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.812463817 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811875022 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816091617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.813363265 seconds)
  done (took 41.659836337 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.814581207 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.815944093 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.81496623 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.814479254 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817028762 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.811208549 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.819529735 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.818584531 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.81660809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.818466866 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.815592429 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.817320465 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.821422265 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.823008181 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.817867266 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.822599201 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.961652931 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.816969589 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.818037132 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819778519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.814469321 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823228003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.813172901 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.813465674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.813104411 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.817923706 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.815253504 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.817120882 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.816445419 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.818012096 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.820626391 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819490077 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.819563582 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.819561073 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.816411464 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.816857092 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.821194683 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81720875 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815287603 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.816277123 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830244876 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.840386002 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.818933256 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.826609871 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819428176 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.817909601 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.818584817 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.82443964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817265829 seconds)
  done (took 91.004965385 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.81449093 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.816778712 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.814933857 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817720198 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818996289 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816104808 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.818903807 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820270206 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.814202155 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.815648072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.81840142 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.81639525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814450768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.8170147 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.81696765 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.815948347 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815100978 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814203978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.814968624 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816350744 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813602773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.816968146 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.817763812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.816192958 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817822316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814806564 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817330917 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816435892 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.817002857 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.816306886 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.819349437 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819355039 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.816545628 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814961794 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813409224 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.815588341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.818286871 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.813906705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817346611 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.815093381 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.819633391 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820174821 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816363074 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.818988064 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814369184 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.816602941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814352429 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.814164957 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.817205468 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.820327777 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.81905503 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.816796646 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820267562 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.815737321 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820181675 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822726028 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.817520006 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.817722724 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.819677001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821187628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.819515489 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823319508 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.816665583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821047659 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818805274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820236034 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.816501791 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816648389 seconds)
  done (took 125.32508453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819353068 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.821451735 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823093486 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820559285 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822092997 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.821602621 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819932468 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.820393105 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.819990122 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823554262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824008009 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821758778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821092496 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.821694691 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822900059 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822180753 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.823708163 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821881604 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823480274 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82090729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.822423653 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820653057 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821296026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822161133 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823506198 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823992228 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82236021 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823277872 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824577932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826849059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824667776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824982278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.824354443 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824994752 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.822181424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.823940368 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824813974 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820341553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.823344849 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.822116534 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82400316 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825053093 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.823014155 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.823441397 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823014102 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.822975051 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823567459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.825023908 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825140279 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824792398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822490436 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821781493 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824417469 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824553752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826451875 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.823605555 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825177464 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827064638 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826056217 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825606188 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825598905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.82698145 seconds)
  done (took 114.798239429 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822999884 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824533694 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.821461855 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82097872 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82211494 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.823937476 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825522083 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.824769306 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824221067 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.824342339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824729358 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824281586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823153736 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826954195 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824252699 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824356839 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825077287 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82187343 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826289876 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822578729 seconds)
  done (took 38.235953185 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.821899073 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825808928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.823379883 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824559931 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.823386711 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820995909 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.825608508 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826358156 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823589417 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828032797 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826946421 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82413034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82579883 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824378048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.826649501 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823647645 seconds)
  done (took 30.952194304 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.821829434 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.826666473 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.826270404 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.82614719 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.825761759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.823573235 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824382944 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825697837 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82511071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.826708374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829015407 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.825350479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.826659959 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.82982915 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.826890133 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.82908675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.825023673 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820184887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.824030056 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.830320185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.822915523 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.827497985 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.82732248 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.827698018 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821240089 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.823241692 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.823095129 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.825554991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823762425 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.826733118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.824810792 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.823100331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.825206429 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827727609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.831691453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.825025226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829725048 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.828284846 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827990205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.827185359 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.827942913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827927198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.828805788 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.825992289 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.828191446 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82935553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828723588 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831762329 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.828373255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82790381 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832958613 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.829971258 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.829053065 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830844803 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.828620736 seconds)
  done (took 102.235518839 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830145233 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830479897 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.826900509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831703603 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.830930251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.830522592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829360469 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.826741972 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826108887 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.830619246 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.827459315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832875705 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829888784 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831959851 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827975968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831040029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.826901996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828239962 seconds)
  done (took 34.690047512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829104966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829948774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.831125622 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.826508823 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830671637 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828510216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830456207 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.831878465 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830675152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.829742405 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829670715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.832856711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83106237 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.829281261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830026009 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829047506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.831660518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831707921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830178811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827691964 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834379992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834770569 seconds)
  done (took 42.034800826 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.830283515 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.831901202 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.8448796 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848777408 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854459805 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.863224664 seconds)
  done (took 12.835950993 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829908453 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833175345 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831040867 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83574011 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834601056 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831097046 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829647444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829865593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833522029 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827602981 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828294137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833557084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83300705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828950584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831969737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831397093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829388095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826311422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829143466 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833095536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831187824 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834561751 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832425361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833315672 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829370794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827770581 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834839093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828416758 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8283645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834067247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831336989 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830530667 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833989858 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83167272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832763028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832096283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830733944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832913907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83440095 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829478063 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833439716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835853817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829687226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832840824 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833522873 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83266513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829596607 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831893231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832262789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83144347 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834096102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83355161 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837304656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839776181 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840077037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839003849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832321701 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831497971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835536402 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834223212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833967175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83770121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835477352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833574368 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835471613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836957264 seconds)
  done (took 122.714927577 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831141151 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83318093 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831948443 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833992794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833719963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834286052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833147309 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834806145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833432736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832714779 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835764786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829617163 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832844829 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832813757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83459048 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831974877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834324753 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834337124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834267979 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838754838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832127542 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833673997 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834540142 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836844792 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835700118 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840105471 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835274286 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836087071 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838488721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836284085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837355857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835552723 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838762865 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835895646 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835336564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838752388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839662909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837930929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835737171 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84234454 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835132892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837369908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836571935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838737968 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839190798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838735756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839865257 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8376243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837224877 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840431965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838877247 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838684759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839488354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837962282 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834850053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838325999 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838813048 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838090144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840328533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840208847 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836804524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836287978 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841216764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838427791 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834141469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837500439 seconds)
  done (took 122.970299041 seconds)
done (took 2502.831433207 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.818602393 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.864225762 seconds)
  done (took 15.448485177 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.991987958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.949373693 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.835270747 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.836633127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.825308502 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.838160332 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840029819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.824540749 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.828022136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.827813454 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.825936359 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.018170231 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.825205746 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.824395169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.827655219 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.921454467 seconds)
  done (took 51.604487904 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.834379803 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835357547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.841561528 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833931284 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.832733362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.846171417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.865617902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.838239169 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870993039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.848096379 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.90397172 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84242855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.837126591 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88623429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846151469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.847984286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.921454892 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.904965745 seconds)
  done (took 35.19874026 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.910176345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839096272 seconds)
  done (took 10.517353876 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.837726404 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.835110825 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.831825322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.839358757 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826114019 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843121572 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849533076 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.866514445 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.863891592 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.849658101 seconds)
  done (took 70.202873725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.836105554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.830341775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.829913593 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.827640424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.825557246 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.824723852 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.828060357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.822195461 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.518566814 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.861368181 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.836521502 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.834206018 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.830571669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831072148 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82829143 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.854539337 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.954413592 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.826290855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.823755436 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.833628028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.828986989 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.904818442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.84256244 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.828181554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.860206238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.521668094 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.831165719 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.83258982 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.966456089 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.823875439 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.824871438 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827567607 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.828744394 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.217366264 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.112998168 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82329002 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.832055129 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.831826384 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.822134773 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.959493045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.82691582 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.830194553 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.817272122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.102362476 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.911764809 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.868801216 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164807032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.825293771 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.826767402 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.855201063 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.82677956 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.826428031 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.838081904 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.344657866 seconds)
  done (took 130.409547142 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819843977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.122124795 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974562604 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.820789578 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091944197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029592391 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.817212142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872710731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821275753 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025427422 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979942595 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936246492 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817142298 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.817785039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818091176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811345357 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979808323 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886981 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817901619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.814949904 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844479098 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028157692 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.945240872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819519887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.836923703 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.029400536 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.936636373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930100919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.095317959 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.813442527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888460242 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.811159678 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.817850768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806544467 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970203508 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.909862608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906532894 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.809955614 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809175133 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.806979866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.473221016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009231851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.910960885 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.953032038 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068360908 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018074741 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459357884 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.811717122 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.448458067 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973987105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.025793659 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.021722603 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931377731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81010123 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.171039152 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811217592 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.807291914 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046971933 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031162053 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9151763 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810346341 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807003701 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808571002 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05502429 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.811396825 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.904457098 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808524894 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804019516 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.905811175 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907885459 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03340257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023863774 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841046996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.09315288 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.275670015 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023148507 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872157013 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045791323 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.809601424 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803680084 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898327021 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558023514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964541059 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055584556 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029096325 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843861679 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.416903404 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.801956338 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000055975 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988877804 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.00054596 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048443759 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.960505199 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.025726581 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803323152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.80524957 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.074046762 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94079953 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806400274 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162253266 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04158842 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.356925307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835128466 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102707607 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93983966 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.166464149 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.430773751 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.805472426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975076144 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.844569579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.805962974 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802963317 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997626324 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.610141476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803046747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.317964366 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871947049 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805003327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010585479 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.803263754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012356427 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80174128 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041757652 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.790337622 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83711762 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026539499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050742565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.598927192 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052031986 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047099931 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921718226 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035174516 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393384844 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805116849 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083161158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805218328 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.808052198 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.974230401 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802573308 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978698771 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807806205 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033684056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831154354 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961409117 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805088448 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.039643534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.841096928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856115181 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.804610271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934795008 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803864435 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685259679 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962121869 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810962158 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803304441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.426748877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.806027917 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950006476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041015027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829793485 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87620828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336059125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805718474 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898372905 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831498646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.298864281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.806913751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.964945866 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.783760124 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.239987142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.806227278 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048977048 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.991227124 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81143954 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805302006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.548444568 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.512258299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804852153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.964172504 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.546863684 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.450497501 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009075728 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80792878 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938038125 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809865679 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.888485053 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159517432 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806322736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.808898022 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.808656469 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.809890649 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.810513243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066811475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835263044 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.332063399 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.945118573 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027244678 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.115500838 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.029868831 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854261843 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811969607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051826569 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.810758674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.873391894 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.807670951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833366935 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044221687 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809267235 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040859929 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061094064 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772656176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863888076 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.807044897 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808775844 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.806272692 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96246389 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901667873 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.807377014 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807969548 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.921604547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935143485 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001631481 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.400136867 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.981672068 seconds)
  done (took 885.131104038 seconds)
done (took 1200.279960382 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.807971647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807751319 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.796052069 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.801127423 seconds)
  done (took 28.956743563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.810779252 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.806598596 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.810538804 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.805444995 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.808692548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.80644576 seconds)
  done (took 12.58442952 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867481071 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.801403328 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799949023 seconds)
  done (took 21.205775232 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.876568525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.215606447 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.915054734 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247933288 seconds)
  done (took 9.993736216 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.810246883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.808795337 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.808227293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.815038551 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.810762473 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.813000079 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.809963608 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.81150397 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.811110868 seconds)
  done (took 18.036996019 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.24108701 seconds)
done (took 96.763225426 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.958857326 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.794692122 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.905042426 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.887805795 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.898619372 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.831522407 seconds)
    (7/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.932372643 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.789112577 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.409567574 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.436773524 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.774297609 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.560189371 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.804337811 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.094420939 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.924827033 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.782296599 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884047886 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.834245658 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.159951764 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.132502404 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819673764 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.934179698 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.879805779 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039389585 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.868894358 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.890524444 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.780614043 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.337093131 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996674868 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.877717873 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.236440455 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.994779006 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.210873025 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.978596764 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.793029332 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.762382602 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.926324381 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.795004347 seconds)
    (39/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.072051407 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.189656052 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180176851 seconds)
    (42/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.672073408 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883798727 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.872123644 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.821182809 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.908737683 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.008519664 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.792711849 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.845840451 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903570408 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.068721626 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.686675772 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.828261611 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.975083649 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.809809803 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.299768997 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.15167174 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.138145621 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.818097512 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851005851 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.024968477 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.159678705 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.90532581 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.55722573 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.797268118 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103875049 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.930259716 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.882158324 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.937291373 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.87901616 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.681886975 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.952393492 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384830592 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141784974 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.797564509 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.536874602 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.391889175 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.011004249 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.342132018 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.691076246 seconds)
    (81/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941018049 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.124282941 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.09144071 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.621292925 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.970100878 seconds)
    (86/309) benchmarking ("sort", Float32, false)...
    done (took 5.557820485 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.979623775 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315457345 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.778674673 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.783625655 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.894827477 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.803114324 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.160177765 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.920189592 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.854807749 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.971580228 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.893246781 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.179332116 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.799084692 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.037852203 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.363588186 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.920749599 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.794953981 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.809780735 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.892233621 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.574594813 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.970991903 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.129644198 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.703323003 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.903306521 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 2.250197464 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.821466712 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.404058354 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.831063823 seconds)
    (115/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.086170497 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.058654049 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894830135 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219805724 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.345442715 seconds)
    (120/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.156319123 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.853550884 seconds)
    (122/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044639136 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.29629121 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.082955316 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.108195824 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.402034434 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.125551499 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.112931967 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.684343055 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.029783556 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.893147989 seconds)
    (132/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.068461928 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.184278977 seconds)
    (134/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.054184537 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.030251451 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.823107394 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.835459242 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.035766108 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.881240285 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.796420188 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009153822 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.837820918 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.831027914 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.049590195 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812653634 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.053694965 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.806966078 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.894537117 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.773482459 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.789669127 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.896908687 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.809783643 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214988891 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.809333196 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.960714189 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.843409339 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.42106825 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.811255479 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.539293265 seconds)
    (160/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.267036182 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.839068251 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.313208961 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.752760465 seconds)
    (164/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.982104853 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813900482 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.039892283 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.106058886 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.91628185 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.84050785 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.919302822 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.819106611 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.318047371 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.849883314 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.961748453 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.085508577 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328687725 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.023709392 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.895005179 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.116131219 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.860743151 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.813840122 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.422618009 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.692813859 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.90101838 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.752000469 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.84778999 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.865510059 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.219890349 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.493614548 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.846427886 seconds)
    (191/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.959493563 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.801074711 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.366978826 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.890631825 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.096528128 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.949402948 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.944936544 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.904760513 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.948725786 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.026956462 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.994514341 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.942082029 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.898787775 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.799561516 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.865547567 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.814504791 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.633510433 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.020501526 seconds)
    (209/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.984688452 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.092407747 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.109954942 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.814629954 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.484824646 seconds)
    (214/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.813159023 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.875377021 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.798700654 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.892773887 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019529242 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 6.827296327 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.119855477 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.843037019 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.836477182 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.940966571 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.50827588 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.028318803 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.834084354 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.19611646 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.03981074 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841820166 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.915979289 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877407291 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.858332852 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.720755091 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.857111145 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.300467392 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.4936776 seconds)
    (237/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.891763967 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.715417332 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.312197097 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.391789177 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.675156948 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.823258673 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.503913637 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.138974192 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.463524757 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.023684309 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.915375076 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.769224458 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.759920073 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.205333848 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.845945443 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.956656531 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.883094442 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067112621 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.442555708 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.205582826 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.84205537 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.139624361 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.11715948 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074942045 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.925793021 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.9632556 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.013643845 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.824475131 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.479597277 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.15217013 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.838787724 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.199526429 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.258203407 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.481687865 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.919620202 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.104584434 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.890559145 seconds)
    (274/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.853041067 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195685501 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.00803066 seconds)
    (277/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.99206182 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.21400175 seconds)
    (279/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.977571362 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.919367004 seconds)
    (281/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.080936671 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.144291661 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.440220545 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.898099074 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.802252844 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.568219036 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.816747612 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.680445254 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.953221468 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.23148037 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.932692113 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.024799763 seconds)
    (293/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.30786957 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.562904852 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.939186227 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.817208861 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.156230223 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.337233172 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.859916142 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.902837738 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.195029675 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.118730068 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.820729934 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.857762781 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.86973587 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.84332142 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.621058273 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.88995908 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.803955923 seconds)
  done (took 998.429378824 seconds)
done (took 1000.244672565 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.853204825 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846471207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.828327037 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.855480169 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.942364551 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864888608 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.840245299 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.831145438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.878404629 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878759262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.830853236 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.862705345 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.830409703 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.835644332 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.829614995 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846454385 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.139467614 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.856076259 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.848162605 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.840483741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.846764682 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.83018719 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.878326298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.862877982 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.834136476 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.834958182 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.833999426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.851861207 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.942123995 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834090633 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.833561367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.84424342 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.139946967 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.853742452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.824898871 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.8512927 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.841786345 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.839103474 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.834953117 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.864722486 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.281092036 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.836321776 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833651967 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.831296075 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.832547419 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.834688669 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.833247825 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.837204547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847007963 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846086906 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.27721071 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.851548196 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.834819266 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.831725497 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.841291051 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.832329575 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.83574999 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847378331 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.851836357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848149289 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129725732 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.86184088 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.832555745 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.848336728 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.839244851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313626247 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.832533652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.835541853 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279707936 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.840802308 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.316629371 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.847381487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.835090186 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.848265383 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.864081152 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.141371007 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.854986791 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83794733 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.840450666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.83215538 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.841751352 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848196768 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842260926 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.833467808 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846748424 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.868356697 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.845244661 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.837738304 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.843315043 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.856281248 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.842512506 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846352067 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.83655235 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.836208218 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.845493748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.838565952 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.838219655 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.836525873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.83986803 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.844695807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.282393659 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857099936 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.832108643 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.830370012 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.83496639 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848684587 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285300918 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.838762915 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.857404778 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885667589 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.834764581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.131444894 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.86351072 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851158312 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.84378909 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.838967063 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.828812406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.133540316 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305000625 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.858682723 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.83593347 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.834741838 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851425168 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.836427022 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.833449633 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.144137891 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.861520277 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852292347 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.959765231 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.84655073 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.874772442 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.833197422 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.839426367 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.868897603 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853003005 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.869951381 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.838139852 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852267231 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.855100312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.831259586 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.850957005 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.847342199 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.837443059 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.844898042 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.831737803 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8697007 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849986155 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850813131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.857554273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9593191 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.832658051 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.134393591 seconds)
done (took 288.534830967 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.904191436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.828387983 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.935507154 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.835353137 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.919733907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.923033916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.83217565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.831787204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.830338871 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.215711553 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.833003517 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.834093438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.829876439 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83233957 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.920068928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.834469131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.832943123 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176926568 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.836160392 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.906334317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.830554387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.833792317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.833673393 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.215934429 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.831397514 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83251432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.908047829 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.83575457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.181451443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.836375339 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.827214396 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.179690182 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.926719308 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.85522318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.846663528 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.843027832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.922208991 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.840364105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.914292314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.918787229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.938119645 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.877887587 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.828743493 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.835441479 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.83986233 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.839174552 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.832853949 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.864950421 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.830721501 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833403692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176959018 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.847045223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.843522088 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.834652727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.835273307 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.858679781 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.83359931 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.838572803 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.92812866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.838695108 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.899597879 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.223062795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.217251775 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.83720025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.832070829 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.836731972 seconds)
  done (took 182.069027637 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.903066442 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911523448 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.904363638 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.842434949 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.887843908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.909420417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.840519041 seconds)
  done (took 14.963584415 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.84209806 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836856839 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887048945 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88706319 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.839412505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.988664262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836969328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.850066345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.835140733 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.893230308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.838627063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.836661555 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.847960486 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.838455795 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.885918243 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.849614468 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953862549 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840783756 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838494784 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.992530581 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83776215 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845451549 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.8941998 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.850975572 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.840266402 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.843338766 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434454216 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840245771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839132906 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.837793921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834989252 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.881670118 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.839920637 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.842012973 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836709855 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955076601 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839375643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835701982 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84111187 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.83960087 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.840075909 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.838980644 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.8401645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.836175092 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84045697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.862968669 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.839611339 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.840409508 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.841665593 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.839713994 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.891068623 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840291448 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.838149589 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837898049 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.897167945 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848729771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.840434847 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.837365516 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.839008708 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836662314 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.998617232 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888140775 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.839664419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888014339 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840739259 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.841627549 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.84349715 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.838118337 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93624132 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839885603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.886733423 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.837433914 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.997781872 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.863613406 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842408833 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.842502117 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.844878861 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841387723 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.839589274 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.846991362 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.838619839 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.841027888 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.847881963 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.839282698 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838383635 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.964463891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949143498 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.839739666 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.853969613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.847557355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.840583804 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.894383021 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.841119296 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.841042427 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896313051 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.963195724 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.895669276 seconds)
  done (took 202.956041133 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.846034036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.850477091 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.841515135 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.857615213 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.840740636 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.843745925 seconds)
  done (took 12.848596678 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.843673228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.845080087 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.84318714 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.842825375 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.843098905 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.843110057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.845694697 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8436753 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.847600635 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.844142314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.844641229 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.842441318 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.843698661 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.841954001 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.841052396 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.841648788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.274876806 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.838825049 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.841323243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842486607 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.985809445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.841016765 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841948366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.842511478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.846594103 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.841597231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850236031 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.842674103 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.841283492 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.848205773 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847215744 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.843470032 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.842545415 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.847643928 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.846710042 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.843091792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845948983 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.845434415 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.840278981 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.842481712 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.84402943 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843621571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.843346923 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.843698845 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.844875014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.847544522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.849735811 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849949656 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.844236129 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.848758298 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.845441214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.842468974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.845307996 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.843171414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.853142931 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849250636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.848856131 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.845455614 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.843338086 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.844484927 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.844856955 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.844203324 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843989879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.848953704 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.849880972 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.849615515 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.843706382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.848464029 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843420053 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.843158477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.846114743 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.840554559 seconds)
  done (took 136.160979938 seconds)
done (took 550.774221158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.110335524 seconds)
  done (took 8.880232854 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.949476149 seconds)
  done (took 8.822370861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.422233277 seconds)
  done (took 10.193444881 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.848792107 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.842216351 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.844342761 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.838241232 seconds)
  done (took 29.155315961 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.887336694 seconds)
  done (took 8.659098405 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.853039766 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.834733646 seconds)
  done (took 15.496524107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864491915 seconds)
  done (took 8.638413235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.950689331 seconds)
  done (took 8.726117376 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.849732619 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.838617524 seconds)
  done (took 15.473317418 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.824707836 seconds)
  done (took 8.595271148 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.565901033 seconds)
  done (took 11.348972529 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847834106 seconds)
  done (took 8.634379791 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.88788176 seconds)
  done (took 8.662287276 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.024649341 seconds)
  done (took 9.795892655 seconds)
done (took 162.851868259 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.842033631 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.83681453 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.835744257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.838934152 seconds)
  done (took 29.124096417 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.878623405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.879858745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.881399301 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.890893057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.88303741 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.877353513 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.870957808 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.870304545 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.890052044 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.882633563 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.881339841 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.881792603 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.879479117 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.871968554 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.881906392 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.881340289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.889550201 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.881321449 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.871285135 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.88348475 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.847419524 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.891616319 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.884190804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.847172435 seconds)
  done (took 46.852375587 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046611123 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.918021399 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.000161424 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.900077509 seconds)
  done (took 9.636732284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.898746828 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.901476831 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.911082035 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.950964465 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.977479201 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.908949058 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.873887956 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.869125987 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.856525972 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.900094617 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.976230977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.916466089 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.984594537 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.848046739 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.036351279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.847534061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.847454688 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.899339707 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.951556195 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.964653951 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.84745836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.899755471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.903503367 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.916498146 seconds)
  done (took 47.660257552 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.84589415 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.854229611 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.853712722 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.848693312 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.84988631 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.848708464 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.854780452 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.848727552 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.870705441 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848792405 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.848652436 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848172517 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.847819966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84811652 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.847842097 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.861661876 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.860774061 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.847412792 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.851575082 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.85518219 seconds)
  done (took 38.816197355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.842168924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.695098532 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.19354436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.098657867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.842278964 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.841569362 seconds)
  done (took 31.290846215 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.860670407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.853697882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.848469202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.904970341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983432441 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.853997167 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.849395392 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.858791406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.894341406 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.91152237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.865319443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.877431159 seconds)
  done (took 24.340749848 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.844155876 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.842278005 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.841603387 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.859400177 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.860070452 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.856782851 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.855095613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.842519275 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.860394295 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.868190494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.857018665 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.862664373 seconds)
  done (took 44.029578083 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942563466 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.89120477 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.886034049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5343825 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226317586 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05557267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384022882 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185464302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.85193836 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120289149 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891522137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953229266 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102954639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359749665 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882989083 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.308948377 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148509784 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059414348 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875952239 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561093397 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913036404 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04217732 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.629316472 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909108006 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059288281 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977117723 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.111570905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847445414 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981909835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884781387 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859321162 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848599093 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123274976 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226178002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951872331 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85984051 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468306318 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.56217258 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.834904021 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.623930442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.616079426 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.981203529 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858841532 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848495683 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783114246 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026989975 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227752547 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.853745114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.560241544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850933368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858811916 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936873199 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.852674537 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.668067599 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770430141 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856832996 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.847453038 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857262003 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425975063 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001453671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057782114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.824695277 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.952411268 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571574009 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247123737 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.005235032 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.857431954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853963437 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787342928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.645335344 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906363328 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200300544 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.867762159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501804413 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154132564 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.953710761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793593027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121812667 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394588872 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.82596653 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080478573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850759549 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787795407 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.885802111 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788892824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126170769 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89142488 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.614118897 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892822659 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185733445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862828596 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872072616 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876690498 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07744942 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.738221647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853155245 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.6918171 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9948524 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870781504 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187061601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786523825 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.855996792 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107978344 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.063734069 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938128527 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350806442 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014707468 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424779405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.903164707 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.018222305 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900895763 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.125232251 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912372927 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00875158 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90878214 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852419804 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174556772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453920524 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.989630382 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.934052949 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977655116 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173084337 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882823611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919114264 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866927623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852687909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.691186245 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40975946 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.85797579 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.856207048 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941752191 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900863741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.854149267 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805230713 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.476361218 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908073849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.865615105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078364911 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433512483 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163705432 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790798321 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204672409 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942685105 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.078239099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.50029215 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.939735004 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115553681 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940564615 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.981803945 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903015015 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875081878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955024192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876381303 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.02040895 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146554059 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.858911013 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.859876708 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656594612 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890392317 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853860682 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.86140182 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609530031 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13028759 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882561396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858007171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.742968072 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.868260311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920952928 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861025958 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864640211 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.396536532 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585286147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.862509255 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442946354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083284374 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867137193 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.576878466 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967966469 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.939594894 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131565535 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917378911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.790896634 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.567695209 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.55086202 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85688692 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792206725 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857029798 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864304254 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866755492 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.053945967 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13324863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899707096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.575078731 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.899753599 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866495214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.862745696 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857074907 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368418531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011689541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06168433 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901274732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000500091 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.871187738 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790520894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859968269 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862053584 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856731496 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.856892631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888477412 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.580670941 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239359727 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1162049 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.467190729 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870507397 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.603447783 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.917365374 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.916104187 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702974574 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041569699 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.955766561 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866885828 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.869617341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.581421047 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566145207 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427179728 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180422667 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166389552 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301789207 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.093332088 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885713024 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196340012 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793978784 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419788252 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916460231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198462251 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805658983 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943110682 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505075372 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208641123 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875016021 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088736209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253486985 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.623610259 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01185046 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072018587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893602574 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.030176149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828665733 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.381103085 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003455728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.593748116 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073276434 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195735508 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561872176 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.994267228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.861469014 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547814392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946098555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.571171512 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.03342802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.05406054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.804265984 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346367779 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864985377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088187986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224648412 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.032659939 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.984368785 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799026161 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874582187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87327252 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.86272149 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.860080889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.723265844 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.116485425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872770432 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797204719 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.983448934 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156174606 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.765572493 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.866448904 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86232318 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181537847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41559499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029948875 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.975413961 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38014297 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86776199 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796902584 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798292417 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.556503747 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868281378 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.837746997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071212807 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.969033807 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778140967 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.953080778 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941704686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121326925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.878301656 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136976273 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140243498 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.559963639 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888858598 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.96477429 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557994708 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.979733875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.864837113 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102362522 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621854272 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089463227 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900334142 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.82400351 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864540732 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080438901 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866661804 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773523773 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104778061 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.588954055 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.981036542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194992214 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942068212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845327485 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921963104 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.965008712 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875694045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94296906 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876228489 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.876781209 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8777155 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91085931 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841185155 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997895952 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.879736022 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957298444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04104637 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403156532 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.868438031 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139559532 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235591909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196499208 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925628402 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864128505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876227649 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798247378 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012501272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093050911 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139806746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994291807 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.980983216 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890211073 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566486291 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090439843 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105110226 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139873464 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.761496193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376269788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904669498 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.866615712 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876538305 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.077299769 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079569991 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175507076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016320254 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955854661 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228608575 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140735645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864121196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865848796 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458120871 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.986226598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555362082 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.910338239 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822540269 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150964588 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8770265 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25347667 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890372102 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.025890012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.383134932 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667374389 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161199347 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853682852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930402621 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142544396 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263540493 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182681372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936010074 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878100935 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.976966548 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012727193 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.766779475 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870714053 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865429576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917216275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.579733713 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8790929 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151256897 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180969082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.865007608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.773796571 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892999673 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.878511637 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090982454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14206435 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121730686 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878506405 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873586578 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.68289932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143374617 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932580718 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803419534 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.869602936 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969142276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114608882 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893684401 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.321633974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.581418859 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149079437 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.87049643 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890165382 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044594174 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238964596 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192296781 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405404435 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077703692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457892631 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444344971 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16902943 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.87266094 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.040702535 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171514233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.873243975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.956308521 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906495834 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.141592454 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182861201 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.971222019 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581941331 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.837282759 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209247632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430006993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809332937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878355522 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.93086127 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872402843 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.000078002 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879341505 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.781118007 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041192714 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652452856 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154565381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.87100981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857734748 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.600881996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173562683 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903683567 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016789636 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871389741 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.57450765 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231552852 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129178979 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.962024655 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.877029245 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.878365941 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870334163 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860358409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.065997237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.06781418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151425807 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.989413084 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907824856 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877221782 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.089225461 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085828247 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.819809144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014446711 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966843901 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913161712 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.783876477 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376017985 seconds)
  done (took 1671.71771787 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904445027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.90525455 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.931979799 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.89748984 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894939947 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960042598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.915843487 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976632173 seconds)
  done (took 57.192953677 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.874593753 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.069509 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.882308955 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.877754629 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.879376694 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.875279266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.036800029 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.88057219 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.878319842 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.883394935 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.874854713 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.875024755 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181731274 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.893472152 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.873908728 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.861105783 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.878903011 seconds)
  done (took 74.398703767 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.910317955 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.944075374 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.894867067 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.890472702 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.854763178 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.889771497 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.695016106 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.899445481 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.873195951 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.104117322 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.515915865 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.898595105 seconds)
  done (took 90.176421968 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.884246519 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.882436703 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.881506929 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.883225604 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.884914345 seconds)
  done (took 11.227862439 seconds)
done (took 2178.265723393 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.120040998 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.091137003 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.110995359 seconds)
  done (took 6.009871572 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.023542808 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.072643901 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.192439895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.197729478 seconds)
  done (took 10.296106306 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.167496503 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.244412295 seconds)
  done (took 6.219402529 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.267093337 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.883781713 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.253330016 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.873356206 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.878121794 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.878240249 seconds)
  done (took 22.443127567 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.881648067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.88430798 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.881012721 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.882548144 seconds)
  done (took 9.338360666 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.862140526 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.596176955 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.865219343 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.875646652 seconds)
  done (took 21.00755874 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.631511269 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.641069874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.626082777 seconds)
  done (took 9.70782493 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.354960735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.767968541 seconds)
  done (took 8.931934966 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.137866478 seconds)
  done (took 3.946375732 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.01330452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.188123652 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.393049351 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.392671453 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485670646 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.585981179 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.198951334 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.125390254 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.313606704 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.32028552 seconds)
  done (took 24.825246618 seconds)
done (took 138.056969703 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.259192961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.240296057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.076397499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.215124417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.159870266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.076919218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.305883498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.200461502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.721436445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.717836546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.252088204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.112430709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.036740008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.24192428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.036578379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.112993517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.098676332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.276970569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.945298538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.10612667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.308988809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.8527126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.0974053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.86660828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.098001385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027778823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.430750093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.113624452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.106924582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.442631732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.027942899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.264035217 seconds)
  done (took 171.641038016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.790781059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878517829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878328186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87862382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.212636852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878637766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879119943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.878673624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.971592725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.949392616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.87720528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.197050154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879175309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877508365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880153634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87685786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.118036338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.857854702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890901111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893967639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897888631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.138207476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900413891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.211651714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.141848481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.897704486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.8785666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900864741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.878885479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888957819 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.893279683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879171555 seconds)
  done (took 207.866269346 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88322474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880785481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878973595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880165621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.879856083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884450181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.878767804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879048845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45295883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447415577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886648872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.887309363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882470943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887353384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886438876 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878853289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.88936941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889537102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887547889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890420005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893455859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.595140761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.895137318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.596635169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.888135182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890242555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878904801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.89272071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897494619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896983282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897810721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880525322 seconds)
  done (took 220.744079798 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.079634257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.889946876 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.891667519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.828821426 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.889587888 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.890922641 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.89112766 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.08614065 seconds)
  done (took 19.289614705 seconds)
done (took 621.363422698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.342528607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.19370676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.068089303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.91364515 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.159665384 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.94875716 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.907859463 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.971279467 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.640274949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.97549765 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.549724187 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.924052492 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.640420399 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.931844883 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.038682344 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.961778332 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.484300928 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.575166056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08981994 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965033401 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.085148376 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844572716 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.980972527 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.655691493 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.652716919 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.885564204 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077882148 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.489955601 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.918875701 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079556274 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665236738 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.291300405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.918201556 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906610714 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.96115866 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944040093 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257285749 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.922365643 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.036094816 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.649620776 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98073631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.527566876 seconds)
  done (took 103.828022519 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.882804703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.88076427 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.880127362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.882897188 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.882533773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.880216307 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.88269129 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.880499516 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.881465675 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.881820016 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.881058663 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.883658533 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.881059057 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.882823733 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.881554622 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.881289286 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.883040257 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.884399056 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.880104363 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.882193186 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880878698 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.881439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.894037632 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880105105 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881069702 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.880955716 seconds)
  done (took 50.766601192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.893596707 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.032903962 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.116222487 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912009248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.893330752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.895666066 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.911834048 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.900400039 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.894872048 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.896451812 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987956208 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.902426825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913842965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.118060292 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.911219199 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.895506822 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.894631285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894881014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039606515 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907651266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.913292262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.899921263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.914718048 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908996001 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.896765538 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.893506477 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.900064306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.369085956 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.901540272 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.989157702 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937952229 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.911399954 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.33655253 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.12374273 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.94673261 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.897115311 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.895767636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988924602 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.900717201 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.895442284 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.913624552 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.90173419 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.115898039 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.40008711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909063592 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.896821846 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.383805176 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999112165 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.935306059 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904337337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120902541 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.911928095 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.898489876 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.898573546 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.932500662 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904235921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.896957641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.262204652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.906388129 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.914596663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.900937879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.899550917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051147565 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.901671978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039602537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.903029129 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.903674115 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.897061735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120500302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.913089704 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.406193549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.910364033 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.899510855 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.989097869 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.040369297 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401950018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909736806 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.052876433 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.350756483 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.920541613 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.902735848 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.361751702 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.922589947 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.902953328 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.898900918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.900722839 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.898679535 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.944112618 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.914231118 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.333655395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.406201715 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.278198894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.919228501 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.912486629 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.900203645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265699413 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.903322585 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.89945475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114652526 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41679696 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.91235552 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.906604958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.391660112 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.911838556 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.917306117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.908136752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.123856141 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915087849 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.944341206 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.899876223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908562409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.901553199 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.916952406 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.906297306 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.900855794 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.382462569 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.010462622 seconds)
  done (took 235.229519165 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.893908951 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.892397997 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.892639885 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.891694406 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.8943055 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.899396655 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.893429376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891353814 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.89926572 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891930226 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.894073515 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895890517 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.894813105 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897581356 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.933773131 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899641848 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.549357316 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.893489994 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.892696837 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.891989803 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.540204606 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.895901634 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.894051523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891895283 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.893955575 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.895218542 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.898045506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.924600365 seconds)
  done (took 168.247326138 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.901206447 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016461604 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.913144723 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.928454559 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.909043727 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.899347141 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.923362676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.910829773 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.902043243 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.899432586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.899973675 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960325285 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.90837955 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999290385 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.928205703 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929635415 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000806737 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905820104 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.900093826 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.89882016 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928565131 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.892430537 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960018417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.020976907 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913684894 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.015175193 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.901475141 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.904341146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.901546036 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01658967 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.910318427 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961411929 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.9257948 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919875272 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015920245 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.011562521 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00416727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927817627 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905019523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90146158 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.901945712 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891326605 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016106542 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.9146471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.905110399 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008548117 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.915219446 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904824027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912265502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.900042239 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.916174246 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.915074296 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.964981477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028611925 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.930655089 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.927216827 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928870264 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.186864929 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.91604498 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00162229 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.893725665 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01917473 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.917970249 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.892501678 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.903442692 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.908493511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.930143495 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.932989263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005395894 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907105557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001636961 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.933200401 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90678574 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.90447957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.906515373 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.020012352 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015721817 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934839331 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.940808635 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.936151556 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.89880988 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904108247 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892569947 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.921083256 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.906692985 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.0182109 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.015116075 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.90837128 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.906271819 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90496451 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.905407524 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928497409 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02435459 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.934135042 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.000506784 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.968434675 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.970915503 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.915203963 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.917534586 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.907387288 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.967206191 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.915017009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.916502238 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.238474089 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.979268115 seconds)
  done (took 205.865371755 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386717637 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.958060872 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958052888 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.192754416 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317209738 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774310426 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949534915 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.951721214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.975577341 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.123503066 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.010758785 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.967559526 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936939483 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.92382528 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.950257496 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.971198243 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.954238562 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.25097077 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.066961364 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.024587663 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.929733866 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253243292 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.263876452 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.330566004 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.985195026 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.275392946 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.629575523 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.195197565 seconds)
  done (took 62.345042213 seconds)
done (took 828.096441525 seconds)
SAVING RESULT...
DONE!
