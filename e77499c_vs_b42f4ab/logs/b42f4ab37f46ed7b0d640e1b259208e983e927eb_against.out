cset: moving following pidspec: 18254
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348414743 seconds)
loading group "string"... done (took 0.545026627 seconds)
loading group "linalg"... done (took 7.244525628 seconds)
loading group "parallel"... done (took 0.155996203 seconds)
loading group "find"... done (took 1.085099088 seconds)
loading group "tuple"... done (took 1.77382316 seconds)
loading group "dates"... done (took 1.196314082 seconds)
loading group "micro"... done (took 0.21460522 seconds)
loading group "io"... done (took 0.921761901 seconds)
loading group "scalar"... done (took 36.169985011 seconds)
loading group "sparse"... done (took 11.127925399 seconds)
loading group "broadcast"... done (took 0.892743996 seconds)
loading group "union"... done (took 11.884931966 seconds)
loading group "simd"... done (took 4.382245035 seconds)
loading group "random"... done (took 8.748164862 seconds)
loading group "problem"... done (took 1.723090349 seconds)
loading group "array"... done (took 20.394175126 seconds)
loading group "misc"... done (took 1.63490942 seconds)
loading group "sort"... done (took 3.254981586 seconds)
loading group "collection"... done (took 16.74255896 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482167746 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122177757 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113675941 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117624439 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13752274 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112990725 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124707008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082794275 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.775666724 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146617445 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117202757 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410751803 seconds)
done (took 4.859176157 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172888554 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082380795 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080590588 seconds)
  done (took 1.233840464 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065049948 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119981568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06538194 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067026746 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06565725 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065525289 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065912334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065360448 seconds)
  done (took 1.586808542 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072381315 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068602242 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067980627 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067539178 seconds)
  done (took 1.349308219 seconds)
done (took 5.490558761 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761114568 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200695375 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181254257 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395196522 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127408076 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152855546 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632708383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.30580271 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188152626 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081061226 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102688847 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316917485 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107297217 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62983362 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0763402 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089915888 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136717766 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404101405 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066922508 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081723037 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08888123 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127655904 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088087951 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074464738 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143192563 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067887229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131357295 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080412693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066143805 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207476211 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172469948 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657336756 seconds)
  done (took 10.054204225 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096742381 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096903654 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068182083 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135774945 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097633957 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069032171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070572384 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06658864 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08588471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127057635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08969655 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100459575 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06487583 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068146817 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084232715 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203187507 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080896675 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08040248 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07008975 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074466843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115587133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077914376 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076925306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077062626 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127651835 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178828217 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098654876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099948397 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068398024 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079897512 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114248451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128044499 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066967613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068052498 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123551184 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095473858 seconds)
  done (took 4.540576511 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.278119355 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139869055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089811558 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130787509 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064109792 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106087007 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065430305 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080735677 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199109422 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.293796246 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573374746 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110329932 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103555542 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067454646 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070513382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066054508 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.315283605 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105714166 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10115979 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079839455 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068548353 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067625038 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339779793 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066286761 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062617353 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066601478 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056759324 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12095914 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066626731 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.91147223 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125014076 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066390634 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100144313 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160677922 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082232278 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085672947 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.264811081 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068581956 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064363153 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149160052 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069461919 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066155596 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083210327 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089983543 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103116552 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112862912 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065716886 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066254406 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161561416 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064289367 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078215456 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.006315332 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153587984 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078955561 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065255865 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249261618 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086092838 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068643461 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064159092 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.208307302 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135982494 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063302109 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066547155 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066123062 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067122987 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068770465 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390472516 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065668008 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990017344 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066899042 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075640505 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068617877 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06864678 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072242957 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07207874 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084710709 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065527648 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073984621 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065091638 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064960974 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065912921 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083038406 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353970647 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065347132 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066476754 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068042428 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084760674 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095571065 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06508781 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064017066 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098443502 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066490624 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065164033 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.205141443 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067548798 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083308126 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068910809 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11266742 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066615571 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088312888 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067601937 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096265453 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069426956 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063638709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104286253 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07997366 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067187885 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398354589 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064671349 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06463655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067535929 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0649254 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067021078 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066084383 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07898339 seconds)
  done (took 21.000040614 seconds)
done (took 37.9457769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267054316 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074223 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074419703 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074484805 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074712858 seconds)
  done (took 1.733046809 seconds)
done (took 2.882149655 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118993371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097977205 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063845281 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094293766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063952588 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099116517 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098188162 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080552816 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098291094 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064300877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09563891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064103404 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063978149 seconds)
  done (took 2.272168808 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082051387 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082954105 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069388808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081975828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062915889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081987923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080165967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087824887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079996777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071343606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063389369 seconds)
  done (took 1.987002027 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080983577 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08343297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069184016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081122542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063001276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081024166 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080658821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084640212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080416439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072967453 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063357978 seconds)
  done (took 1.980529282 seconds)
done (took 7.378554257 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076952631 seconds)
  done (took 1.206215507 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588674311 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.071936884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080534656 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110211768 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182529156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117306852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26808551 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084828311 seconds)
  done (took 8.815260099 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101374958 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067889287 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067739683 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070713334 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068946308 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071534002 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070261319 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068299835 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071114523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069003675 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070334445 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071415416 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067487588 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068891204 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071048926 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068906579 seconds)
  done (took 2.357277026 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091146363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09043789 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073280105 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074196487 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071836969 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071580802 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07374416 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073226621 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070605072 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071393879 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074528635 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073051818 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070970442 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064465404 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074004861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075164879 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070242457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073417355 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074353923 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074622315 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074180312 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063898946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070709845 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073160337 seconds)
  done (took 3.009467899 seconds)
done (took 16.52621823 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111785578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070658753 seconds)
  done (took 1.324459279 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080590472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082763327 seconds)
  done (took 1.312764307 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083791833 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065227967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08936186 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077002361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066342149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065305033 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086397749 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065921719 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065691168 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065866245 seconds)
  done (took 1.880442781 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068224731 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077467113 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07054281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080722186 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07318758 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063993992 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072119148 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066990131 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077043059 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062015918 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07046832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081262964 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070358857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083215452 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071619641 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06754892 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069884986 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066508734 seconds)
  done (took 2.444899677 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065262532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066454759 seconds)
  done (took 1.28723172 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066190475 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063317599 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065921403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065989571 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063088905 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062589453 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063370413 seconds)
  done (took 1.602374457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.374492892 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109977032 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297582686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070089811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080970922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247637609 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065001069 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069816108 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069771938 seconds)
  done (took 2.580026133 seconds)
done (took 13.587953697 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077755552 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084205079 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094477018 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.3583619 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091043497 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065466364 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113452145 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187793849 seconds)
done (took 2.237599822 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211703924 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.590268354 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378935672 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194077623 seconds)
  done (took 2.31899374 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321475466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086785248 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058648075 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065858521 seconds)
  done (took 1.699325895 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065591732 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068512086 seconds)
  done (took 1.297695408 seconds)
done (took 6.692449587 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066165097 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06562522 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084365254 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063254793 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063195421 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065157154 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063008054 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062959148 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065467074 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065000492 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068011259 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065221813 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065194695 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065035223 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062881243 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063127579 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062552756 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065081975 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063141379 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062505293 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062687355 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06509958 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062904329 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063135177 seconds)
  done (took 2.758491336 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082170338 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065716682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071762532 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070855444 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069443155 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070261662 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070473396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065470991 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070996339 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067335617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069004318 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06903884 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067157171 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069105485 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067172972 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069137448 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07057064 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065571841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067596122 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069525675 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070259058 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065799085 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069409415 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070111077 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068798696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068791595 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067414542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065972196 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070715774 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06874922 seconds)
  done (took 3.246040298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068565438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062613228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063166205 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069969004 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06317452 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064544373 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0628803 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063688705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063702013 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062597766 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064121952 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062540079 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063092992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064164802 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06361839 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066430687 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077778418 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063241794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062757673 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063511278 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066384281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063101676 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064747154 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062781591 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063137103 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062577127 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06326601 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.175153162 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063537133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062642556 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065806855 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066659115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062725511 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069570665 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066049699 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06274897 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067221413 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0623321 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063314232 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062432723 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06250233 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062888829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062963466 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069315998 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063521846 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064605056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062942964 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064005842 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063309209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065403026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062455977 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062585159 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064540923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064059437 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06682448 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062386879 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063275615 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062537615 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063650266 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062573676 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062664476 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062370396 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065219379 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063236312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076862322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069356725 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062519121 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064054995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063799333 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064957587 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064781106 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075402157 seconds)
  done (took 5.93934119 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090352704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085909158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065016608 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064301533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061548871 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063381416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067112816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063186637 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065332999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068849967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063257746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064417149 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064399707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075662015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063683897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064804999 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068827605 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061543509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063783467 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066781171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063859185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06651202 seconds)
  done (took 2.667542319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153436648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069913917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10431471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072421206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067199119 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072010563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06912862 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069252707 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069575102 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067449152 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067323312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069209398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066944465 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067637824 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067268617 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067501956 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069311292 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06731971 seconds)
  done (took 2.535405223 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076591758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06550344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085572191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065772226 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065632079 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06845373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070047006 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073367804 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067861257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065454402 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073539351 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067897769 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06762116 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065226221 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067476972 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065193347 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067420086 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065202224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073578855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069749066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070152125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073325141 seconds)
  done (took 2.709612789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079445463 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067611295 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081508171 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067935827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061250299 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06374837 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069716765 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065170174 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069451223 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067071704 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065638388 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063828808 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068587195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065437007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068814661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065348883 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067221237 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065003691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066688522 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061270006 seconds)
  done (took 2.530267568 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085460414 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067189898 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066767858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075178157 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06704908 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066695069 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074444796 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066774831 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06675373 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088015943 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06659302 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066507659 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073882345 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071261146 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066518286 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074459334 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074298375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074136434 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066448475 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066579412 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086070351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066737181 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074029651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06633736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066426274 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066692534 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066503604 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071203462 seconds)
  done (took 3.171962414 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066157095 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065436801 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062732772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063192562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06329016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063294039 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062646238 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062823305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065332547 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062856313 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065276459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065337822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065249497 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065164429 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065287449 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065154084 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065044488 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06294752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062754066 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062903288 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065162903 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065182031 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064789469 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062539089 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062808295 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065139389 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062988139 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063069895 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065154892 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062867969 seconds)
  done (took 3.110366328 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07378526 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072851973 seconds)
  done (took 1.335065169 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063058204 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079760598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062499578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068915086 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069280289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065713794 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072473028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068978152 seconds)
  done (took 1.735519211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080840333 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077178991 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067372301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079442766 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076059665 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082944669 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130868808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066423817 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072023233 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063455805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079032586 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064568325 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071683611 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065611839 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071141261 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071762881 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063410665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071279668 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068236063 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064124267 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066735543 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074303667 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067927521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060933634 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066743772 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087250786 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076126271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064986034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068192562 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073072439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070813482 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059684771 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065451988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065827466 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063890927 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074672314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080585745 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068870038 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073852917 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066481257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075846543 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060838306 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069757149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07167061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07575441 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065448266 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066267519 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061057469 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063243321 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067652229 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060814935 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065409039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060194812 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074715836 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06863466 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07564818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064052597 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066979673 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067915822 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068782 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071932737 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067246742 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068025501 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065414395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075178247 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069960596 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074451059 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06071996 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060137926 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063688757 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075164825 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087670477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071675127 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066370157 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066639195 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063608717 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069202304 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066690383 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071265279 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071964221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065673884 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070913169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072585956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066434218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067855129 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073777571 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063621448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068054071 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062959525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08026621 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064269476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062958567 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062848187 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074890986 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067727659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064122168 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062644356 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071563889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058853403 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064833757 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065459708 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065081322 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074739927 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068737945 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069336671 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072859281 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071569802 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065077879 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067484058 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061488754 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065038527 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063595399 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071474031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059072098 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066970216 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0649173 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064856329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072224229 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062227402 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064105888 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070884649 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069876125 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062501854 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061247942 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067066446 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063794127 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066993713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071805878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062707069 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.05946914 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059171204 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067207486 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063742837 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067482725 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068136098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06703908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058893216 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062255332 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068855776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072665276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064611693 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06555315 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069894573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065466242 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063405548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070143878 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066501116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063488207 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069525746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065076692 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059577688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066856458 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.066704164 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062627597 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067473752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067086737 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066378431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064917215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062431148 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069446073 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064167156 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062576478 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063426008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062149826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072865411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065008648 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058340958 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060796741 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071029309 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061280054 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063130029 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062828093 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06562445 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063467518 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061392158 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062682465 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064912542 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072181406 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06714885 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063748807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067877303 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074233771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062880445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065668213 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063602899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064244382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063722261 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071584692 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068855773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067517822 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066049238 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06038099 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068563712 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070240893 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062235773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061531916 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062636006 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066642604 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069149463 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066254682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064382256 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062117721 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065082773 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06639563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066130473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063367116 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062738904 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069321605 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061499216 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069769186 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064525943 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07246406 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066474566 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058303744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06526871 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061941522 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068879873 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058425478 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061424325 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062696601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06399597 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062654744 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065369584 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057703604 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069795309 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07047038 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063194461 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062336052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062552512 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069086723 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064740799 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066626542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067106223 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068916717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073280079 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062991052 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066547413 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073614547 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063912527 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.285832472 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072627569 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066939119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066748471 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067140501 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066291315 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071889061 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077730929 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074900161 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062034146 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070644627 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066352533 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067203842 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063956956 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072848564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069769631 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0682632 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073568365 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067907429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067487419 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071118472 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066907771 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067801234 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06888944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070410777 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068794224 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069214351 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066978915 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070202909 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066601498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065570854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068913041 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067342614 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068137004 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072508459 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066799554 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067741347 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069715866 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068053318 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067709411 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068197678 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066373401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070078049 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067584169 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066822671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070468017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062744976 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07363143 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066451023 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074299161 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066835045 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063889256 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073986593 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069450595 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07326404 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067215073 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067567041 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0678204 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066600017 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069721161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073710139 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064481893 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077633307 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074062177 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066754288 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069040314 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067264295 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067729543 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065916173 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066940993 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068245935 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067121304 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066464931 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071333989 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069302374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06716308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068639037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067394634 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067324926 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067262956 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061541208 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0660268 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066509425 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066034766 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075556869 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067551231 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066288826 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065681035 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067856364 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065207388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062207711 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074282564 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075188864 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066667826 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072635786 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064953919 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067083467 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076299123 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060177125 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063866762 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063679983 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063748428 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073117772 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066094051 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075008909 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065993659 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065293206 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062886683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066758089 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064208814 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060357376 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063511842 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0691454 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064461553 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064649471 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065569829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067640361 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065758047 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074523494 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06445006 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065828798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065095742 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062462668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064162094 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063953919 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200434862 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067706281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065464731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064071833 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066060803 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067708653 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067482185 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066713469 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067668782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075702612 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066055783 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069196779 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069541375 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06131775 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069338379 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066323157 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06564137 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065912578 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069900814 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069097278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067842262 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074540539 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066224681 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066558909 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066497577 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064448892 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066471485 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066204051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066075276 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065529489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067138572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074277666 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064019896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06914423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066615534 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066629459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072412836 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06687084 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068999573 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072967871 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06620654 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067857285 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074381232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070730332 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069366556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067551575 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0676031 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072349487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065620902 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072942186 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065959715 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06698208 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067866669 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064487139 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066187664 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065657761 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065325606 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07170699 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067157412 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065559688 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065458962 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064005308 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06653307 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069502123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073437133 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068788243 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069586726 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061518012 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063546474 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067350875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063982667 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067992409 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068633147 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071276142 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068257852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066580083 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064694849 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074907814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071428589 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069495697 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064125172 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069516357 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066690709 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06844623 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067211059 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066216366 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06694933 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069702452 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067254292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065529466 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072789753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06884501 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066401159 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067334627 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066259359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065638194 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060838209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066355956 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067186578 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070240515 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067527326 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065448044 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075469563 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063412655 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06551365 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068307539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06452436 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069823295 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060557883 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066956349 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066103121 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066453739 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0604916 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064400357 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063060146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067354209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064556522 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060069121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074922614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072837156 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067098004 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063713774 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063078857 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059772885 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059900822 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063785862 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.200913311 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069406817 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077070448 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065756156 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065551132 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06245601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066645241 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068992841 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069148138 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06437279 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06205979 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065318591 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069449711 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071368356 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064794215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065960019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06927815 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068911411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064367019 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070207791 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062861927 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069811521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078776361 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066991824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067075137 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072145951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073222461 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06707267 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061883041 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066561247 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069668835 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066402544 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06734695 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067551455 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080745107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069721927 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066099317 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065029565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068961597 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065667902 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074421486 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066877827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067074165 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07090905 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068655205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075650985 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068720922 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073677142 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0692802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069147238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065126714 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066137864 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063768414 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064936696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067325495 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0674175 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071723131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073802133 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065664161 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076854422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074895218 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067798118 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063323077 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065437363 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06608265 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061658942 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066410626 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064130878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064667122 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063986281 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064636273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066644608 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071244601 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066717697 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066831806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066928261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061304427 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06808054 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068059301 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066445093 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062385727 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06557864 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066259694 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069367089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06897549 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063388847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067284937 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067483318 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066982427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061119523 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072028224 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064622934 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067646483 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065123493 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066135033 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066524192 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069054463 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070127051 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066583253 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067777494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068868619 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068147181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062592529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06300081 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07026776 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063441304 seconds)
  done (took 41.925110996 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100749284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063453367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061969435 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062667288 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073461858 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062695388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061542377 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062860317 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062950367 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065110565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061989365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062141758 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071046184 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078009602 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073920386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066887199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061935181 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063210039 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062429225 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063473528 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070965166 seconds)
  done (took 2.749458471 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073836408 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070265179 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072803736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075729517 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066948836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070494113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07254941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070596282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084882476 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067388498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076106619 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070373644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067041499 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066970997 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067018813 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071146137 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07607866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067935632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071079928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072857671 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070919182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072167835 seconds)
  done (took 2.875330561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06693366 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065532106 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067727861 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061183374 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06676718 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061544098 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069781836 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063744135 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069130758 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064949487 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064978027 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065085968 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067908631 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061178747 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065844898 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063740515 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107809481 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068823578 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065606155 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066824544 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061901415 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067837008 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061555152 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062247003 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064715649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069342237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066714364 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064012124 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065457905 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064781823 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065494058 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063985063 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067305235 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066290698 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065079457 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06505593 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065438807 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065230168 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061112956 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063952768 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066270258 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061705538 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065884172 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066998578 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064053645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063474984 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067377541 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065410208 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061002746 seconds)
  done (took 4.539186118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080554584 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10898878 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06783941 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088067535 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079752111 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075186844 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069254778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089396058 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063691459 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064321699 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080931723 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079126399 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065705543 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070050707 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069297219 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065714944 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06666928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064687869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069515966 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065082545 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069631988 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072261388 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080032686 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07968823 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069408707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064872835 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064850776 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069624296 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078169701 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06962016 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069887167 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071160134 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079942563 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067034159 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064475954 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067932638 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080754576 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065117857 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06737004 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062751173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067399023 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069230714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071745716 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081059875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065381672 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070590326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065110022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062410145 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077610682 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067399449 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072874551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079178635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068804575 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065165813 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069499411 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079733245 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065354115 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063356845 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067895702 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077372411 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063016972 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069004096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078870183 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067189153 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072351685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079096384 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070756639 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069099133 seconds)
  done (took 6.314872703 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075170868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072321084 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080036657 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079564338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071836423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072191685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071743756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072194439 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071863406 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076584139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072048613 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092479415 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067649479 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074471446 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071942963 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072391563 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072407861 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072067359 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072328218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071901134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071903718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079691493 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072047336 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079614716 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098631521 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067762601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072105112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071695602 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080138919 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071680563 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079143194 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071990608 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071817598 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07968956 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078920279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07171352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06533496 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071210039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071832143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071762112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066648278 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079404827 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071582786 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067189037 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071551478 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071478712 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079421326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078605325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073906064 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076127022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071665452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079316104 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071129097 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071499586 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079154736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103619233 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07895764 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079358969 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071854966 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079400847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07924001 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08586681 seconds)
  done (took 5.996118024 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082975837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074098204 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075358063 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061465621 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063610428 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069417678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063988179 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063932902 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073794462 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073904714 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076367829 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069530571 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072126211 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076264294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069103058 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07249402 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069365396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069418157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074175695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06915222 seconds)
  done (took 2.74861167 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073484967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082858007 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066546822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071842238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068329594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071280419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067835461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068715786 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066540732 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068746478 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075713754 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07535669 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066696841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071077258 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075168953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071325839 seconds)
  done (took 2.461326722 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074911674 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071867435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079017549 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066189199 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063665596 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062427191 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065895626 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060985419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06200327 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077115689 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065442328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067715216 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065437063 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064169544 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062742953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068107621 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062084703 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062955788 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065367243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078070608 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075837375 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064259376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066024416 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065495577 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065433007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070004249 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06508684 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063399004 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062767507 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065871695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065741924 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068565288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062534779 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063592067 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064462155 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062613952 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065068195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065507933 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067974351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065036684 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063212159 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065019946 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065294685 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066228222 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061856615 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065710188 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061675165 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067155783 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063189082 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066105577 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065258544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067839279 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066139481 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072001826 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068290042 seconds)
  done (took 4.968505404 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079980688 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06912074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061417357 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063866843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068910359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067134009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069019556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067263454 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067116036 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063730661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067183939 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067945138 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0670852 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068606659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067577108 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068841705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061534729 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067111461 seconds)
  done (took 2.546170932 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070523683 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065567651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072590404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066125447 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06561359 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067533894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061448435 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063908444 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06401999 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065143825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065808998 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067528154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064303485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067522787 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065161197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065872882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067686936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064211994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065454171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061500456 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067675059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064175823 seconds)
  done (took 2.775897441 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091890227 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080803511 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137824008 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079004209 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082726654 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071310526 seconds)
  done (took 1.87192148 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090184135 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078754216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066518979 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087315081 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073139076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066667223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066701194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066954524 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075659342 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075676569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067229877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075910277 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075573239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075010265 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073129624 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073066628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067444556 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066898572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066293197 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083874557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06728722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07566281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067198006 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066999835 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067302806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075347331 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075746196 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075765492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067370945 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075745423 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073098964 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06723018 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076282494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076145305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069140578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076097803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06725083 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083926687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073045097 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074984258 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069075344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072963883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076507023 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071609203 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075764073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067350034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071933422 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067490601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067214426 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08588044 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072856412 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075000014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072921985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076317913 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075729556 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085470642 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075546146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075043188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072621958 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078371388 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074761411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072557874 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074950838 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075435393 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07328738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075186357 seconds)
  done (took 6.183852428 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082397703 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086319973 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068005969 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076104528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075326383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067452524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067735793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0672013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067380689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067511783 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107256392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067735133 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075207611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075812959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067502718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06712494 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067479541 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074949038 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067535531 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085590126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067446133 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07516106 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075095892 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075484211 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075943146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073384614 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067447672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067585869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067044016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067106577 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071935309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067554281 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075110878 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067123365 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074917747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067718589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067307753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071987207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067438272 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07310611 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075034051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083599922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067259352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066774667 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075712343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066905755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067118835 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066507015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067096216 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066623697 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075708853 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075346056 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075943316 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074723979 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067129762 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067108679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067086686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067136907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067246803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072487563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074799091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066570858 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085603416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067249712 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066858566 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075280646 seconds)
  done (took 6.090782475 seconds)
done (took 126.948968852 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183453113 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168915575 seconds)
  done (took 1.674933789 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067442349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094692396 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07706204 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126995992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066619008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099270029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098175954 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077674717 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066061965 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065738947 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065969128 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067752461 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130168953 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065856964 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066292404 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067452405 seconds)
  done (took 2.638854039 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096685453 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156588792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099028975 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064994967 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096544079 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072745612 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064294104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074817777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070571157 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064740247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073057032 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070293874 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064941038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070372079 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071033882 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07241382 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064756627 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072700805 seconds)
  done (took 2.763636434 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099623483 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090232727 seconds)
  done (took 1.533711732 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158743785 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105394879 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144076527 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342604431 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.17119892 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232859766 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128418528 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12888678 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120146224 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124026085 seconds)
  done (took 2.995460263 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098329185 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149655056 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254013284 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114457275 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072043503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093674789 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115997784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076891234 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080899531 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080468331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079821092 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075566901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098565866 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0732696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072986845 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075206418 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102371296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072262933 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073793551 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076610017 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099335559 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06538317 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073232398 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072185473 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077481738 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077434558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065310114 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065039873 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076561519 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0737292 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076390311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092408035 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07698085 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106297917 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070160864 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107144935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076081844 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073923972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073259017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073818228 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078150534 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078390491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073261188 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075241317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064926475 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076203597 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065159621 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065070458 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077480368 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06634004 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077592036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076377273 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105856881 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066417681 seconds)
  done (took 5.920162974 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100103827 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103786792 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071430282 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108376778 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097809869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071502622 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099892887 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090194815 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102000435 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092119477 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087995575 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070688395 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08130456 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082929441 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109228183 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100673513 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095403713 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070476722 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100663824 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1013259 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069134507 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094373078 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090331993 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100540121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06753832 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070121879 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067890171 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070260149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076202711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077586632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069551041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100981106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083545091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078223145 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066612166 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06812918 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068461019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078295401 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096729616 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07825367 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.0775634 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067160443 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067904455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069645989 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090142106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0667251 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077907805 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079449676 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078051279 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069785924 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070147692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067957766 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069406849 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079005164 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076421518 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080001562 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079071854 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068464123 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06817696 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072192586 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080464774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078579918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078495323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09200321 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07825007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068058016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079522502 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083459585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068298373 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069586547 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068319181 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06972331 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069836131 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077285221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077366323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06955226 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069030805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067778868 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078213833 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076911918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067705277 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075422487 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066483327 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067866583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069343096 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069341149 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076171563 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078123775 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06945199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067624037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069054497 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068368566 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066191107 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074995076 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078078661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076797687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076212535 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068017157 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076699944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075681526 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068775899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077187416 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066681098 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199064093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071088089 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078356712 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078442933 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079384629 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070479095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0682818 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078621573 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080176357 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06930038 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077740517 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080686911 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07950329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06796706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080287565 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069378308 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079310214 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070058911 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079738828 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068776452 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079022002 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068992428 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067175538 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069782506 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079801327 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070351183 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068317239 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069441908 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069737675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079353174 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082342629 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070962816 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080878036 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078642438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070262887 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078660274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069381479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079450439 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069824559 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070501538 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067978527 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081970024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069238754 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069139678 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069365321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080332056 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06847638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080109673 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07733211 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068055759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081190846 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080107317 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076747896 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079984655 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070820775 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068907896 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06868782 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070070638 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077199704 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079026283 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07166816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068798438 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078313351 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079114024 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067687696 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07784375 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077228517 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078356524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068527655 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069500552 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079442605 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080333641 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077249727 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07729796 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077917726 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0680679 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076472632 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077267312 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067796776 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083751359 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068260907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081234968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078013949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075655146 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078035543 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080146532 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078924412 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078873317 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081356531 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067266236 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068049987 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078189686 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068228782 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069351222 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07717141 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070071148 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069491194 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082026986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067717507 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07764209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066298539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076501024 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066156697 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068651057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080791043 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067183644 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068973748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211390931 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072361447 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078376501 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082124466 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079262562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069522996 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070583582 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080032494 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078719297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069513076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068983861 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071919692 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078495614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077661521 seconds)
  done (took 18.669639375 seconds)
done (took 37.5440126 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207347563 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150821115 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181936953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118081646 seconds)
  done (took 2.098711779 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121692241 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100359923 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094173977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06449589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101219978 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064627588 seconds)
  done (took 1.931796511 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309795951 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210545112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181239555 seconds)
  done (took 2.079918837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196609638 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186997178 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393774343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252752594 seconds)
  done (took 2.513318014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14390742 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088975702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066591683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083413514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133894329 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160358293 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100990022 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125297962 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077515936 seconds)
  done (took 2.41022907 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146508249 seconds)
done (took 12.557518881 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121598842 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194810081 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099063388 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.247483201 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074135673 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090846799 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08222663 seconds)
    (8/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.174489417 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069257425 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07685239 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20742548 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.227727796 seconds)
    (13/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167199031 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073204487 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.146301386 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173198244 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098963097 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08235718 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118124129 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091590814 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072521873 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087240713 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076394226 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090324613 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172685735 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181691226 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072416142 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.073120922 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071434746 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087751324 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07074533 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.14566634 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105445887 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129922581 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.14895908 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190878795 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145606466 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096423133 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.191038511 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074980004 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091976459 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149469158 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106179959 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174899207 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.061724054 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072082951 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09052041 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072766653 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063560459 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.144988298 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159488257 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086679377 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158732083 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09647502 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078751343 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094555097 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111076975 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051201018 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066766759 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148648306 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051387387 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170429531 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192537052 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162149717 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144593948 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087527564 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074825759 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064452131 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063077727 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101070296 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204688891 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080984596 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.202024467 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.06582891 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.103832497 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064159842 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18430255 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102396137 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.145670618 seconds)
    (80/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098144212 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.327175992 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110641648 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07941052 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066630492 seconds)
    (85/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150984224 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088858534 seconds)
    (87/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108819293 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195910254 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077569473 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112111956 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10755378 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088849459 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111710991 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077110203 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163569416 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.386255625 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051380728 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051664523 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089100264 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052372665 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070748653 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099162472 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075315246 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06739575 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158726596 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072042819 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087461088 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052026074 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.195616904 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050977902 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066078492 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.148680886 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088427677 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.131538713 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149062231 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134700976 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075586168 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065401455 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051576174 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051191832 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066165223 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150120363 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.132101776 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072652799 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.052849589 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097070497 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052029996 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051914604 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071448196 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068294789 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074484793 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051940869 seconds)
    (133/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072671807 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067035121 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070436745 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051193223 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090073857 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051077704 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051009965 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051211045 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065603188 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090365585 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071181907 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070044521 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050538061 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065427707 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079069549 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064154315 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052458923 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071952386 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071647248 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051408285 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150137742 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06445936 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072663725 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074131229 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071372564 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181919472 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05095581 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074042335 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089028206 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071305461 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111411781 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074622467 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097774445 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075416407 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061114761 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071588876 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051726479 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074565673 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148741188 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067317833 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065743 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053217017 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071384469 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182667138 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066320498 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050505854 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.137898902 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064355995 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075069088 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070895313 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062209343 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050432931 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052419356 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133973377 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071027396 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072659523 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060610315 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06472156 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072455742 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067170697 seconds)
    (193/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115935232 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060764213 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236907696 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052892071 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072402832 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066881798 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090707249 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065494061 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080455294 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072412097 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071132607 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067806641 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086800147 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053182639 seconds)
    (207/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052455534 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071416636 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186439398 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065511779 seconds)
    (211/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052766996 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134726816 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066067264 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065394582 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06565351 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073995362 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066359468 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072256918 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071543416 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066243868 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051695693 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107835667 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05308742 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07606879 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071147218 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111606149 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065564992 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052290993 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.125872329 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065630809 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05262612 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07223144 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063822621 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073435651 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052890175 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067537494 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071687599 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087609519 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061666058 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052130122 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074925339 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129448754 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 0.127134003 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089233405 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051634554 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172434139 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092531106 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051258475 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052042854 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092223381 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078110524 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051070876 seconds)
    (253/309) benchmarking ("sort", Int8, false)...
    done (took 0.138849114 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067973993 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068527628 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052730167 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118243776 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053399987 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065131083 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064747985 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065063239 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104431791 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065467081 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095277548 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070909136 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065030962 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071310251 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051243624 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072573909 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072584865 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051597259 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061330276 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116850213 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065566484 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051254478 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088035542 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17172791 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051091343 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07863071 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051237689 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064546972 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072278878 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093838166 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124080415 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064999667 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063761309 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068866551 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065941543 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06347253 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06529822 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05179833 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07232624 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051185464 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134549709 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064296008 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.133082716 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072400651 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071475663 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069767499 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084195041 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090077814 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125454789 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066087078 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05219146 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070120187 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064809417 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064777305 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062719924 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066626125 seconds)
  done (took 30.295348007 seconds)
done (took 31.685065709 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082960024 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0923306 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073158613 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091942811 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079336107 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075610173 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071406188 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077352077 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079068592 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080765251 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077732127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054375895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073163339 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072972986 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073791598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089867529 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077758677 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071575312 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072245953 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064257998 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07195281 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064957147 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066427702 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054777072 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076837143 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070950873 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07137035 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073479776 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065246483 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065044947 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068430562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072482353 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064448726 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076808963 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071563382 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072405816 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073887421 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075784713 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067124514 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064926781 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073469286 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065470075 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07167775 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072318975 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071262401 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070535629 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072115055 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077129144 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090217278 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06737886 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073538653 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074852938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075446728 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071626512 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068732482 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071958489 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069880608 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090200515 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07240451 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067116013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073321785 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072601531 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069998165 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072169645 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071958091 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074132919 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074373306 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070301758 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073372677 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070042539 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064780939 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071927787 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06785408 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064688244 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07450621 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07587411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063607609 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070382418 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071806915 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070334746 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063993455 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066587875 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066113599 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070265858 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066572085 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053960967 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06798577 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070546882 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063661872 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072104468 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070732215 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071330738 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066431966 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074369593 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064181974 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070450412 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064997019 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064747562 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066040256 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068402368 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064310326 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066513511 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072821002 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065774818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070189518 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077648111 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064426656 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07047324 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063256207 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064184144 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078009624 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073453605 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064508795 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066758806 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063478112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071371808 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063683017 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064269716 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06400866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064403573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069927121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064142944 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066055542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070716313 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075748098 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063474232 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066729924 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065403889 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063693556 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06868702 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063432314 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063780243 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064823396 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.195178548 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06798026 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066240191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072967887 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067636064 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072370532 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066588705 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073153287 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069333477 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070477248 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070777203 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06423212 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058052846 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067948073 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067719222 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067013077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065033591 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067058833 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065252936 seconds)
done (took 12.294837138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066011449 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141148872 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096905269 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09388282 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084825711 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065777904 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075266798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100718855 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066867605 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101757098 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086232125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084341164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111157122 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064523662 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064938926 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068900164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066956069 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080394825 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100109845 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08540314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108224182 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064739206 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093396856 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089545476 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0859788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091295104 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066396475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069567129 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068687535 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099542572 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085837222 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069314181 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065869687 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099660766 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09172108 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082363977 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065628953 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081610614 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066145893 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065630568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080274618 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097050404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079230842 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079526202 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069377387 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068387478 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066446621 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082409404 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08752177 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077676771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085588232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101749209 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067895687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065056838 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063919351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084388215 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064807797 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06795456 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065579007 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067770296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065373836 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068222059 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080481751 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085524406 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068716788 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079530917 seconds)
  done (took 6.739256458 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082624738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089235989 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082556365 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083036251 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064907952 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065622119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065561024 seconds)
  done (took 2.020684312 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066477176 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086977496 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088509515 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089308087 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08343032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08650793 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074835937 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066046677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079781102 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067157381 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086288922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100825008 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066739511 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072091901 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090378127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066602401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089284306 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066355281 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069197089 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089166152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067884088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081425357 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069437332 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066501403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079817825 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066153193 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113290098 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070249804 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067674358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068709617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064089673 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105778781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079327937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074742901 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066000851 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080170428 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080209577 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064156305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08204862 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070741053 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079754339 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066200871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066803117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063714178 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069790888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076114702 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06715021 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066600946 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068060489 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085040977 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066503105 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079120758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068844084 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068138328 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067561889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069475522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075387417 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06653478 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085392987 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067323311 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082183889 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081629019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079298229 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081604284 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068523917 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079102486 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07936288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068702938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067709951 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069064551 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082130646 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063938099 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067027551 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076288034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067921254 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088148421 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088066474 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067190966 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074703928 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066192182 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066236986 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066084579 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088181346 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06817077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065861175 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069925478 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068736695 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064233229 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064974377 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069313529 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064600027 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067291526 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068877205 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069051633 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068677424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0823009 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068629124 seconds)
  done (took 8.686782677 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068619837 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067726428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069075041 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067099879 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067334985 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067463379 seconds)
  done (took 1.917981374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093796175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0690198 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080129504 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07120865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103498544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0856683 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086287928 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077954096 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082725109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07848401 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085713868 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087493553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091496611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071996364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085733767 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071304672 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086132065 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074898883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077984845 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072427497 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086659171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072341604 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072433336 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080823917 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075220505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071524124 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066593034 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078418254 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077606862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078118923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072274866 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074715835 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069768966 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077730146 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08634571 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069992285 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071606864 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076754883 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071851071 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074653767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087223226 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072108415 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073912284 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07695325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077508348 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069938529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076478005 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075272984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08536692 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076237473 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076509154 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070988135 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074395534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076170631 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069625881 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077374745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076150638 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085413993 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071399184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069229095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068193295 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074815346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076852224 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074284848 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078155294 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076114457 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069569653 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072253353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072213214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071230957 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076950993 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068806833 seconds)
  done (took 7.025561956 seconds)
done (took 27.862580627 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539853281 seconds)
  done (took 2.019420181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597362001 seconds)
  done (took 2.099113077 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.618554257 seconds)
  done (took 8.120917167 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.387029751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471302781 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689546493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130010672 seconds)
  done (took 3.217688531 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678686949 seconds)
  done (took 2.1896469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207974577 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195053104 seconds)
  done (took 1.922504669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374019771 seconds)
  done (took 1.875744401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106938672 seconds)
  done (took 2.611898844 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259159356 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162338692 seconds)
  done (took 1.928038099 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457410246 seconds)
  done (took 1.963409435 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.846468215 seconds)
  done (took 6.353696119 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203713771 seconds)
  done (took 1.757755553 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239163375 seconds)
  done (took 1.749085107 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.681020775 seconds)
  done (took 3.190244928 seconds)
done (took 42.507496793 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079790475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080902245 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080764902 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076718689 seconds)
  done (took 1.814846782 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076523519 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071896419 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075716638 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071859746 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075735752 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071638323 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073379363 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076501257 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071718072 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072079167 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07215921 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071988284 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074144587 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073317761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070374689 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07389391 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075068014 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071686015 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074683046 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072188864 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070430421 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074144523 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073872078 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070958194 seconds)
  done (took 3.267524419 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077474909 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072202058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073736297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071440418 seconds)
  done (took 1.812598272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077336028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091673366 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088521896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076788342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091533997 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085467264 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068692094 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06791926 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072430196 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07633597 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067578192 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095021024 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086625544 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075682397 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078154032 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065614212 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067375823 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086268989 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076429873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076992128 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069272816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076447012 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067165298 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087302345 seconds)
  done (took 3.387157666 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076723896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102123529 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076657199 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086745657 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088783311 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064681883 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073464749 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088092122 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121618855 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064530771 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069062644 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064855786 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07161839 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064278836 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075315815 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10393154 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10700357 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067515892 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094541198 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064520688 seconds)
  done (took 3.14976287 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072125287 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069282837 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065424238 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068253165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076887784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072089398 seconds)
  done (took 1.950010662 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067068414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066496089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06694984 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0669925 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070804349 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06626619 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066020099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066425945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066551939 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066239071 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065806084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0652687 seconds)
  done (took 2.32230601 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192970332 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067753034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068040003 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065141235 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0700691 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066056652 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079216309 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067583905 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089741545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065888726 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066418917 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067884914 seconds)
  done (took 2.490360449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203648121 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076186759 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233588877 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135260564 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110485663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114374889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102968608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112420705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141994281 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100657684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165723164 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164083055 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105809617 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135806101 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088296013 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097119867 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1536631 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160611885 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102335416 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164478548 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142288899 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123508738 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145166888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100164639 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104553111 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121194144 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070270767 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079583019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168302637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129881893 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144861541 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109385359 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092433137 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17344199 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167229818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13901909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132283968 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082718046 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10097612 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131032749 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194802807 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086967226 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159672979 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104411539 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078630978 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128170221 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113933846 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119688263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100886975 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086333335 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138594273 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172099961 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131829473 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083599497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107351885 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110226655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110112286 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098767009 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172436421 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153029213 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121404951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068937578 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095003114 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145969558 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125727313 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104185305 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120054564 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089195396 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127531008 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147796725 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113092502 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136279104 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124151426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085034229 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11385956 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133406029 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121407691 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161677301 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11885143 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070027694 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118566439 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098199908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078128526 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.13778827 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072767388 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167812392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094868347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102558538 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109033331 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105165567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105116536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154084118 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13792048 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.340851759 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066253048 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10458028 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12169569 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147788004 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088116333 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108653611 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117123276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078326117 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671839 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075127802 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122833082 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075390006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124734588 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132708896 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07634856 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122624928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101117695 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100196179 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132948461 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158799107 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088893072 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082558239 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166567155 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121195415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104200387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142889632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154973469 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099888706 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101999682 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148205409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179544835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089076009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163021779 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107598845 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083288434 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087092532 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123361951 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111668271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121272823 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081958094 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119327464 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16434554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073850098 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092663263 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131518278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077223905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079990729 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101306939 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098731359 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093367548 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098943252 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10263476 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136074728 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121621509 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103268162 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27063018 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098125196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169686493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088507934 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09982983 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103228927 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069175874 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135528283 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155996837 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07828765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161939716 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122620736 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104608054 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11768509 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081740752 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138180396 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077529442 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069892381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142386758 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109029192 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108702698 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14919677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103274467 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125629887 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117851382 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13189126 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130488256 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127292581 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104304405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087396919 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110472579 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124537379 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071918662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090101302 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07921102 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102551036 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09436033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082515718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14109671 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123245413 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099256815 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110301364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09552868 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144313648 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075032105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126594319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11754516 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092397665 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149688947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150369738 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129811405 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097925185 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143253715 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069264156 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072945327 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088255837 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270053029 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083401767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083147968 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117080067 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146103181 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128898795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137094236 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110869595 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120128274 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153159282 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068230721 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115783545 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146095212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119154344 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103635965 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088986483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097640898 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140586588 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106912455 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18033742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113435063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125077675 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151441366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09869253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078499543 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102629385 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1338404 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103069831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143032001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098526279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087165844 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108977146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073264137 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098917771 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12619494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118636348 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134225037 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113188906 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131051143 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076257371 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114072362 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118064091 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120386313 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062997002 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118038867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158899293 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09266727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116848739 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151603838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078606396 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122762988 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321176837 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144946153 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084430694 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108940571 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117947102 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127621375 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118299484 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139602596 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108203755 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134876331 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10809058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085069639 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086717089 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096245634 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103371743 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094617659 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106243172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112471295 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093581469 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130031474 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101485346 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107940615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115884786 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095706652 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088029572 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095114127 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171653715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117842157 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16886131 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097763744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143540556 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161926817 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074107162 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078093156 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077252883 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138221135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083017851 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129924804 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096534705 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104877826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122829244 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140568576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094190024 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067831112 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107306984 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13130145 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110089155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096510237 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103253123 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16029792 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098877651 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078205565 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111994974 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103225449 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100985532 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170017763 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060632475 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241951997 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076187703 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080111131 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130094396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152059552 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079820144 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102784071 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118854661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110159301 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126871525 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100952945 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098367439 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113448969 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149544747 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128308615 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088648278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111295048 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128364108 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155460473 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104555259 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094180144 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186296217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150405424 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158437998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087246459 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113302379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113299135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10757984 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138126418 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082310743 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161880715 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080871487 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134832169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102685098 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089124347 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128895676 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097571276 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087218425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146027283 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116641061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081548105 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076219752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115778058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118422503 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105105595 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074265104 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136760241 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072131481 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130191033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166279351 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080371381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102857419 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095012835 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225352835 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107336139 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102088092 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089300228 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097316008 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172188569 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087246194 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149194831 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140309125 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11214748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135765899 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098700788 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633833488 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077173629 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149793047 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11483028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169890951 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096404423 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116702613 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108190233 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121935709 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142251212 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103756372 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175712329 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129748772 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11468721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079653006 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101309623 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101917221 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08772695 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104098477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112674046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115201517 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092745185 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114604433 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122446669 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081425756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09414132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15471655 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115661398 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142815914 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136983887 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083373243 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116705862 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136467712 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078682482 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121931812 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150328583 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10458652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09645777 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079446428 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100408958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316014219 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073194932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161969399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118793503 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109837678 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111714446 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113221094 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131485463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107282203 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121360598 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093199429 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109249759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111507826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081027252 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076184171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103666465 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111323101 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096160254 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097453397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096660331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149363195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070603318 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094655096 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102504313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142874731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171651326 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087676017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081833586 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117876699 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111535599 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112221301 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119050556 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079091663 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081453699 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080877969 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076943532 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10716311 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111622722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103317141 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110971409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162049616 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082100986 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225269977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09400584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103218962 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068908291 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077740997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095382987 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095588236 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105712803 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099391487 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16750424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093189872 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088473303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091238689 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072068808 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081444553 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126693076 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108565279 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265025423 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096835514 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062271112 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108351306 seconds)
  done (took 58.057233433 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108412316 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081751133 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09616224 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148685835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121921912 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211179512 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155793491 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198815747 seconds)
  done (took 2.784621919 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067239806 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092853176 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098731275 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081345151 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066476831 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067788429 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223475005 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079053007 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066275906 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089184578 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077515984 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067633936 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414963015 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065183295 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066627269 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061555652 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066791272 seconds)
  done (took 3.407889797 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361932293 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600740788 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368743763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072534324 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.869565658 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091163994 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.075559206 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128475167 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072760563 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53591648 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703214606 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127022342 seconds)
  done (took 18.67162783 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075213142 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069116345 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08357981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082985631 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072445007 seconds)
  done (took 2.042066929 seconds)
done (took 106.700327714 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079420688 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.369476368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05334807 seconds)
  done (took 2.110523652 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081862631 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083511785 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084352107 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081510155 seconds)
  done (took 1.999573851 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073477665 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075640852 seconds)
  done (took 1.81054653 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222316727 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137793516 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085752125 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081068789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077562145 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078032659 seconds)
  done (took 1.902566862 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071345397 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074101892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071959467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075378198 seconds)
  done (took 1.954457046 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075884537 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052389831 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054464799 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05537174 seconds)
  done (took 1.900307918 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085450181 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078559964 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077793045 seconds)
  done (took 1.90537169 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105826085 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08402365 seconds)
  done (took 1.852980524 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081217608 seconds)
  done (took 1.745471233 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097544732 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112692048 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128420238 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10794054 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134954428 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107847313 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084412528 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085761255 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075969145 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086204538 seconds)
  done (took 2.685652271 seconds)
done (took 22.051823474 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077919891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.460664381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359499963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090900441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718528125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355673179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986576809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091519587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112160906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066979867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08327162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648401604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980403194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.41820898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966408783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322264195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64903446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067841397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067687753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06736812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974458955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066693042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067096329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068024613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652061536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370301765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067479561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322302025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067347958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068886168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35478546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067484019 seconds)
  done (took 16.388566946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069411776 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117479218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072544676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082952604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070191287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068802446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070652565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068288951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118224917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067278364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083808566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06683306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070927155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067754875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086363588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067520485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068008399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068053458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067527423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067508414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085659811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067092013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067313554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067929083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067352905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078575341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067721745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06742346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067540585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069246098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070131074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067981275 seconds)
  done (took 4.041245752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114120691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124838385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073660549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101606551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111471115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069284681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14204705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09210893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125966767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067498837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083881407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06754716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100122682 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068347078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086678071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067679754 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068360487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068380367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067685678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068050157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086349844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067563873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067653152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068018911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067955284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080610427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067991192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067981458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067737566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069750788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071243664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068210064 seconds)
  done (took 4.299457094 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072542827 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075100185 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082439744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083132521 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068962077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071258152 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072352512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068747909 seconds)
  done (took 2.276270109 seconds)
done (took 28.674701778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078299325 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068379701 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071704892 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079809182 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072977712 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078196997 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06712317 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074367221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071408885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071928434 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074311879 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066652109 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070835143 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06685709 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073583657 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067440836 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078831444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071356102 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078664274 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079240842 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069543059 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072361844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073426988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078650361 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078613051 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078824347 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.0770437 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07258026 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068104058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070076381 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076203678 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082872188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067918423 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078660319 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066888926 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067058318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071144272 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0672689 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079004306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076489844 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069034135 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075145707 seconds)
  done (took 4.738713129 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087381358 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090149561 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083785313 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060867185 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066881224 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064985566 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087503411 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059158768 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059243349 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086758406 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055665098 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058590059 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062147461 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053647321 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058788712 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056723962 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061453361 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05538469 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058945918 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059198454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057565357 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054210954 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059568358 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06204571 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058756594 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061488214 seconds)
  done (took 3.369251256 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073947688 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083434062 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087779472 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126246816 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102856054 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076145687 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077208838 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091204116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084632216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066488401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070618383 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09307475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087320294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072985661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066878677 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083942655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081174881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068465556 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072802898 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08997965 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083522297 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082617923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092141015 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08042071 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066108324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069029539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070597381 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080498705 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071460038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075776012 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07042839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069981294 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069006199 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07776961 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070689215 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06785246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088962587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075891552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076581836 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066917647 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070030273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0678928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088680781 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1212374 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066096605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073138008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074562562 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075911334 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066502429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084784505 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0777855 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066159185 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069545038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06588174 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066862323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079584254 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068852759 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068863702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075472106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069683059 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084890491 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070870303 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081913279 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066139795 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074184228 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066348369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067412653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06574002 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091526572 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068322976 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107047854 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0677184 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067634862 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075444174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073888448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072719222 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06708493 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081824833 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076936062 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07026171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074865248 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069947252 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06968927 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087000079 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069401596 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068273688 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067649114 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072718131 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069749383 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06801502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07958639 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066705453 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069788863 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083220569 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066813539 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06779754 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072587361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.0717606 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066424669 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077720287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071339348 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067717865 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075727248 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066635452 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069574069 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076583278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07253914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065669546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07091839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072475718 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067302019 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068146956 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069416391 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068208541 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076135028 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073004028 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071167329 seconds)
  done (took 10.491215469 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161375887 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152972682 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069901229 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142564785 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075065964 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07786742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145863138 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093289854 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067204562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067583556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068196432 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108563477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104694342 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114558013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07807159 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067129694 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082777158 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112330948 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148275401 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141411715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082924625 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076218962 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06933541 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068386468 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069836084 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077673123 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084893304 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075582517 seconds)
  done (took 4.408310673 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079750266 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096135378 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073114582 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088671851 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090298098 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06726122 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069731802 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068639092 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079899301 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077821163 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066711804 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072544708 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07400254 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070463143 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068353347 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073729938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074069485 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068440317 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070426568 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072412524 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077140765 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090795392 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071310189 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06642836 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073405721 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066534347 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063654992 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083335408 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067513444 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090308413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06489666 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074570009 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080496503 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068146929 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067010773 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066960067 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066616924 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066859816 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06889976 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065989498 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065649147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0576002 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066509227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07876043 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073264781 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056400573 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071923781 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07219054 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072350703 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064977141 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070269285 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06958431 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070395504 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07478819 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072274082 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07217948 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068353026 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073513294 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074925071 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067058056 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064242107 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065712033 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071598287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065787337 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075069152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072336747 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065725005 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066890419 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069103607 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073407794 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067304152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070325483 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064812066 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069091678 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07211304 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069080163 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068656385 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065883744 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067255078 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067972142 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055766824 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067623124 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05360602 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070146639 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065673944 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065808585 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066789392 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07227854 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079856593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068844464 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072998704 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068184346 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066636874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070247473 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060389515 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069843432 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082232455 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082105302 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067207816 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065023415 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08130853 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071665165 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066138369 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055881515 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074344354 seconds)
  done (took 9.146634925 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088159785 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070019238 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.0833366 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090727613 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085907527 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07463652 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075893979 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068854296 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081827948 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072940595 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075627016 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06749836 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076106643 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075984584 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069119459 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075948023 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0712536 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082029457 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081053863 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067569643 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074575565 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079256275 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088225619 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079242157 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077334994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.07904775 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088200704 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071358414 seconds)
  done (took 3.897689269 seconds)
done (took 37.725917524 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768805498 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.937160262 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.761804531 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133170901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.849212951 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.774806291 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.865704294 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.759730997 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.880131196 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.804108029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.025910956 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824832417 seconds)
done (took 65.087986763 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.790026919 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.906211908 seconds)
    (2/2) benchmarking "String"...
    done (took 2.033981637 seconds)
  done (took 5.64216113 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.062787668 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.290949995 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007716054 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.759240751 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.766386044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.054793689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552663935 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.27977042 seconds)
  done (took 30.413342328 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.855386385 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998121627 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.417164133 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.44646606 seconds)
  done (took 15.464649144 seconds)
done (took 63.152364752 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.783253348 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.824409242 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.77416416 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.746091126 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.819957855 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.778530435 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.931142156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.948193104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.759150729 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.751952096 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76293356 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.196191085 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.763489605 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.097130114 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.762543595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.767576951 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.823955476 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.165778224 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.917328389 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.771355335 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.78242504 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.778347774 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.765330507 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.774446822 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.81101574 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.764364391 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206564037 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768595431 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.39780456 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.765122108 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.798650241 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.208495836 seconds)
  done (took 204.668826906 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.765166894 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.798952432 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.869991236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791216127 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.263959362 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.951204015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.881036071 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.317698118 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.770150392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.798596806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.958306269 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.766701424 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978185697 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.736575048 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.795173451 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.84352709 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.978197359 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.982845358 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.800386303 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.936520289 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784011409 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.864720619 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.83005732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.938655416 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.772467225 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.778792256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796466613 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.911631461 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959529582 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.967551361 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.804645915 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.801098105 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.985340555 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.639668734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771732757 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.768637037 seconds)
  done (took 170.066946427 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.925235094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.766554769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.76484017 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765623923 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777076587 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.764382829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887572854 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892442293 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.226219892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.101364126 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.816789307 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604503321 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.765912723 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832770801 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.778827883 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.76776232 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.780687753 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.793883142 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765407375 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765375907 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890700442 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.777863676 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.949539187 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775790323 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766185519 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772012903 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.139322719 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.766327124 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771798166 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.025724897 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.766908994 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765391302 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6552512 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.408559064 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771888748 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848765134 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768702259 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772736457 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.767039871 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.986531995 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767790984 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.767093714 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.770903927 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.767120919 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945038067 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.767887818 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.892416354 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768008872 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.270822372 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.767494162 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767797324 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.403864961 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.44659126 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771350995 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.767664279 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.770029831 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.768702442 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.767490756 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.773921466 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.427089257 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843945095 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769278543 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.769860275 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.771935503 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773620061 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.76896211 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801540497 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.771432117 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.081192318 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.827655742 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.889497827 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890158681 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772122205 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836213623 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862482801 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.769707792 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.768827932 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769327729 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.768245706 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.85305564 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.771632177 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.918532298 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778954692 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.770438714 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.819145977 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.838135012 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.770432453 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.658823727 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.771826721 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.77001775 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085060511 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836600693 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.77036858 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.769532454 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.76970096 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.945193643 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894269768 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550619135 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.771762696 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.413551873 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.775953947 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.942782922 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773291993 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.769532438 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946436561 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.770145362 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.85120138 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77466822 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.771813617 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.769789298 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801511109 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.772496141 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.825522572 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.772537358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.141774336 seconds)
  done (took 401.128867158 seconds)
done (took 779.547183636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.442165675 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.398262813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.520609834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.421955745 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.405034642 seconds)
  done (took 13.900471588 seconds)
done (took 15.611429277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.857569136 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.864720167 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798421644 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.862462222 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794915154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863194512 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843357559 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.800070393 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826820965 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798555742 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.831059607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798865345 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787070246 seconds)
  done (took 25.439841587 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00572387 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.010888821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.844296935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003048344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.820398765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007147205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933493579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923443654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927257582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789575871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787212549 seconds)
  done (took 22.767277128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.024907982 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009230333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847356366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009279192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821233668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011126583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937141469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.927533211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92717902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789157076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788015011 seconds)
  done (took 22.807614952 seconds)
done (took 72.728221758 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.781415766 seconds)
  done (took 3.496584847 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.802190185 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.943184013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789732994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.78442414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.781507123 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.781658619 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.785546693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.780665526 seconds)
  done (took 16.164705102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.782531252 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.779284292 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.779358854 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.782232236 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.780545301 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.782467227 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783203932 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.779609 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.783164527 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.779787457 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.782296945 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783714654 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779876969 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.780977355 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.7831188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781984901 seconds)
  done (took 30.220976754 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782851914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781090389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.781595805 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.782215945 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.781472386 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.782774392 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.783152571 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.781533664 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78077682 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.780636658 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78304135 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.780813356 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.782268995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.780880176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.782177152 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.782877489 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.781498179 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781988891 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785825987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.782353457 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.783280892 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781232628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782610167 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.783500816 seconds)
  done (took 44.492428537 seconds)
done (took 96.089704831 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.647147309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.15823277 seconds)
  done (took 8.523049586 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786085929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.784736825 seconds)
  done (took 5.320492352 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785599173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.786122254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.784440778 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.785405851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.78442691 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.785415012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.785480473 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.783699096 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.784354869 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.784957087 seconds)
  done (took 19.567733843 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.784932107 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.785482295 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.782697812 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.785690107 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785091648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.783423845 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.784711057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.785630939 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785661589 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783049025 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.7853255 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783180325 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.786173777 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.785100354 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786167675 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.78372043 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783197188 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.782880456 seconds)
  done (took 33.841723182 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.785583275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785009227 seconds)
  done (took 5.289597147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783049698 seconds)
    (2/7) benchmarking "second"...
    done (took 1.782828621 seconds)
    (3/7) benchmarking "month"...
    done (took 1.783979261 seconds)
    (4/7) benchmarking "year"...
    done (took 1.783412495 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784710698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.784284333 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.783840718 seconds)
  done (took 14.205064934 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.788042268 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956963055 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.031330161 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.489588406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.788840931 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.789489457 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.746558771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792007401 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.791892324 seconds)
  done (took 19.894373362 seconds)
done (took 108.358626384 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.594882592 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.782364569 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103456411 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.822655306 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.839606866 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.12268644 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.783583872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.010739129 seconds)
done (took 42.780111578 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.866556607 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.264414671 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.285755598 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.425335997 seconds)
  done (took 11.693170712 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.764039416 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30426947 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.810886077 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.375024054 seconds)
  done (took 19.983048119 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.147412668 seconds)
    (2/2) benchmarking "read"...
    done (took 2.209522311 seconds)
  done (took 6.081499223 seconds)
done (took 46.343178365 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78583315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.786152774 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.784913183 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.783670341 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.783706225 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.786684827 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.783971182 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.783915647 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.787139024 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.786352683 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.786937939 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.786696827 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.787712441 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787631004 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785004327 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785570479 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.784776728 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78844891 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785061143 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783925497 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784740489 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786694145 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.784106888 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.784470399 seconds)
  done (took 44.573060212 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.787420925 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.78680001 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.786996105 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788307169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.7864878 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.788234952 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.787267105 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.785473019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789088096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.786930088 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786490815 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.78655714 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.788492155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.787876121 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787910139 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.785209204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.788680578 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786693846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789474812 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.787949617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.788956747 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786651324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.787183699 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791317858 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.787123906 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786597607 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791203681 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.789482807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792909973 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.786728841 seconds)
  done (took 55.357118279 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.792772234 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.796450038 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.788479197 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.789786691 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.789074606 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.78828668 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.788931635 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.789192102 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.791992254 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.790196218 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.789180899 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.789762916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.788356339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.788254199 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790339014 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790861342 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.789246672 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.788951296 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.789544082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.78928521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794170088 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.791801887 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.792233185 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.79148145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.791628125 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793958364 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791782237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.791655991 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.792150081 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792721599 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.792395725 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.793656379 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.792334008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.792087742 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792953788 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.792814161 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.800661855 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.799549812 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.792787853 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792219863 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79250902 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.79400995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.795810339 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791905326 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792388304 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792980885 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.792450415 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.793800297 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.791195887 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.79061484 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79331531 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.798082403 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.791772096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.794031561 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791293686 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.792344453 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.791450654 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.791540554 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.791779256 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796351446 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790939431 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.790799393 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792212017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.792869534 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.795754129 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.793131694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.793100331 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.792171123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.791741338 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.792075797 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794583446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.794011991 seconds)
  done (took 130.760860047 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.792515224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791074589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.792360199 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.790016482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789811218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.792646728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790738583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793605263 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791611657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792903726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794134607 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792374194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791531352 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793456381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794173505 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791107103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794085535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791615273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.794560376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794891444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793691772 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.791843175 seconds)
  done (took 41.160461831 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795278146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794642143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.792110169 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796147003 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792983209 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795626656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793641389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798758313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79339327 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791976159 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791586279 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793628063 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791930744 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793702955 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792438758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791737267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795046622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791996085 seconds)
  done (took 34.013747113 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.793264375 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.791580102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794116261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.791430299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.792175606 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796784827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793166921 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79558866 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.795248536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79353202 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.795977704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797773769 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.795263948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792337569 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796083274 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791640864 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.798306252 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793972443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796176639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794572311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793594825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79690785 seconds)
  done (took 41.207904675 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796894432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796839715 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.794814135 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.794388208 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.795632617 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.796235614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797113206 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.794192081 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.797074086 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.795769792 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797501718 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797284917 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.79686323 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79730184 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795621445 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795808944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801206758 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796595076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799009254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795932669 seconds)
  done (took 37.665357013 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800842647 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798378596 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79925574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800063304 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799413913 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799521568 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802813461 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800755805 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800485159 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801425606 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79986934 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801855808 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800046655 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799192854 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798919761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799804106 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800510668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802811362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798769409 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799872444 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798507397 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798401183 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80219204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797949339 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798335682 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798099874 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798290078 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798200924 seconds)
  done (took 52.125187902 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80034151 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799400788 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.79806456 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.796397718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.796101277 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799795726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.797747672 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.797198948 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79985506 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797510992 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803501782 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.799647499 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799960647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800536867 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801377338 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801525301 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803684015 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.798408649 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79875809 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797451268 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.800648539 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80359037 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801200772 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798280153 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798142736 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.79961203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798561465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802095772 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801167216 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.797827321 seconds)
  done (took 55.724634629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.818828583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.822012375 seconds)
  done (took 5.374253166 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.797832638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800677291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.79947293 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798021825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79892415 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80010466 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800502514 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798444784 seconds)
  done (took 16.126678093 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.799212002 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.804813442 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801174738 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.801615119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.800400343 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.800166205 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807694541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.80189289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.800761093 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.800401075 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.806994326 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.808922831 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.804243114 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799725795 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.800741118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800833695 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.802228665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.803409529 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800726425 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.802727853 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800930599 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805166406 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802666285 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.800482959 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.802807462 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.811996601 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.805133867 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803253806 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804012116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.804460181 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.800279111 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.800083022 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.801292199 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.800901944 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.806216864 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.801552763 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809572964 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802651626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80762058 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803834106 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804475841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80162437 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.802629942 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.802940983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802941136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.804151963 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803684837 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.800442535 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.802504443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.805409981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810627196 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801829459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.801593264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80462071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80343503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806948854 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.805410494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.805387437 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81286588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.811242838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.815414256 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.809989669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807263546 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.804116443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812303457 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.829608571 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808252459 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804733349 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.803080756 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.805686467 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.80974563 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81672919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.812523776 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807710643 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804949326 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806278367 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805612092 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807529323 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813911172 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.807520089 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.805489762 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806316783 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814901161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829459825 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.808660639 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807296843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.80659603 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807062307 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808326731 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818283769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.807153378 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.807418744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.805229308 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.806260123 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.805643352 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808032219 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805411834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.806300418 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.805733534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809624555 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809691226 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810622974 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.817856085 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807349181 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807823446 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.812526259 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.809690999 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805324494 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.812516139 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.807966796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808233789 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.809734497 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.812087244 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.805376244 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810572399 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.815945674 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808048451 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.810875929 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.807478565 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808067019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817017496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.836184771 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.811238798 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.810487743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.813352173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.823002141 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808221471 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.811523957 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.811271853 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807022308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.807046472 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.809758794 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.81033633 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.810791243 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808760107 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809418819 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.808802426 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.810559279 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.808723592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.812686884 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.809953146 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.810488074 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810656495 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.81171914 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811384942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.811691779 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.814251448 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.810664914 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810735422 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.809905966 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.810820256 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812238227 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.811178054 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.809764713 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.811479644 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809692467 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.811914791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810938388 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811690789 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811207378 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811430352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.81486267 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815294568 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.810341234 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.813965346 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.809689548 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.808591477 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.815921477 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.812231686 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810333137 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.812013105 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808638919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.815847747 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.818921092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.811517007 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.81097729 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.813013459 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809966891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812660844 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810739095 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.812778707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.820129212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811072234 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818360686 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.811700247 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810475214 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.812629888 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.812269949 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.809977618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81306591 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.813949819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.821973795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823867167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820175073 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.814055945 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818232347 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.813207009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.817073974 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.816063808 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.812566186 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.816331541 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813771893 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814917211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813926229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.816320336 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.815478408 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.815254821 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.816087837 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.816621271 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814219379 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814550449 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.813607991 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813958375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.810958327 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815605933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812894912 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.813904367 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.813160083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.81204248 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.812969735 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.814864059 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.814845268 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.821667965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812574998 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815660822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813781279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.812748581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.81446389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.816550854 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816830163 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.813777916 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818196252 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.815533742 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.81495953 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818630952 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.814714884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814462192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.817382225 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.817861965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.81499268 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.818334307 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.826977109 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817442495 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817494926 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.81907809 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815474333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815851983 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819102343 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.81481708 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.815221268 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.818098449 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.814970697 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.813624397 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.816890062 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.81752412 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818193466 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817821299 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818035371 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.818037439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817888322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818572439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.816773599 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81669091 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819188577 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.826356291 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.821496326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.816271254 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.818813721 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.819119102 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.823469742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.817657471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.816209671 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.814787199 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829537444 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.826682742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822116425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.81875281 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.819867019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821500439 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819280048 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.822023653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817698787 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817548382 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.819466028 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.81591203 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.815956793 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817612238 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.818313767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819271646 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.818250604 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.826681259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.81946071 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.816944668 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.818857298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818918206 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821344001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.81896852 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.819710135 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.822003676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821606474 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.817430467 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817743375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823004714 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818406313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.820263656 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819535947 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.817640186 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818092427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.81759286 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.817865181 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.822836346 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.828775538 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.822628194 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.829649731 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.820084878 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830879016 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.817829063 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82322667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828696791 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818252731 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.819235764 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822320041 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.819920068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824497733 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.820577714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.820384419 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.826281472 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819971422 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.819570224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.822500014 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.81999737 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821186382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823756462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827294267 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.82215853 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825518167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822063654 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.822984915 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822094541 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821861249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.820709187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824685388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.821278468 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.823560807 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.820447584 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.821637944 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.824561953 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.821509625 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.825556321 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.819271579 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.823745542 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827573573 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822921106 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82787207 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.826090319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.827336585 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821534542 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827268536 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821171876 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.824938776 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.822335647 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.824115317 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.82417392 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.822644736 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.821619275 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.825945186 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.826179068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.830784296 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.822949065 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.825038671 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.825623951 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.822800232 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.82265919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833861938 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851537973 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825397295 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832134585 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821363659 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825234396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.829128662 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.822496196 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824710311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826497207 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83575302 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834389503 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.823500247 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.823544047 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824896487 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824063797 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.826644155 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.824541308 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.823123903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.826146825 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824658662 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.822979948 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825356947 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.825119993 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.825821706 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823766795 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.824192833 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.833247708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.823686215 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.823367234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824533637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.824465569 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823580549 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.822289371 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.823660673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825277432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823501908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.82369098 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830971766 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832103047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.824998229 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.824023694 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.823774558 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.823555635 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.824184104 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823311043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.823726073 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825376705 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.824365835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.82457287 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.825103338 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.82294579 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.825594639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.824420332 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825383317 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826576662 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.83342672 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82510311 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.82365746 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.825486209 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825203639 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.823914892 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82490737 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.833409982 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82897074 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837163574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.835393289 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.829860761 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.826154578 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828127636 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.833362696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.823963999 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.8248351 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825494238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.826798869 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.825983359 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.830504564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82543218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.829974122 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.825928551 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.825644046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831635407 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.826943713 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825920455 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.827281832 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.830499998 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.825046305 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825379566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.826733171 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.824679437 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831551898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.826516059 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826717114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828234358 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82321038 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.827619673 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832307041 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828030333 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.827176135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.825178323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.828264385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826461723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827562079 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.825109549 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.826017904 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.825315885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.830894247 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.835647968 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.825407424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829167284 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827608263 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826761761 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828200405 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828613455 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.827099458 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827270906 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.827425534 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82770384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827484623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.828999512 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.826498926 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.828117905 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.830472378 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826672441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830721225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.840285149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839391946 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.825611266 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.827578653 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.827989788 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.830551993 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.827138295 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.826767213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827524152 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828427664 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.828438561 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.826164528 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.829064601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.829820742 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844100502 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.829838124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826583683 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.827017722 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83064495 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.829944757 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.826803568 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.830270742 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830250183 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.830328555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.837686476 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.82812045 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833111921 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829337713 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.829245928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.834476857 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.832248752 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.838411635 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.831537753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829879286 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.828574777 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.832552932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.845909897 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.831214493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839220028 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858459858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.829958445 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.829142341 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.829831145 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829810794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.829790865 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.831691519 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.829758704 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.831372235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831024492 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829298092 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.831268552 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834168947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.830849165 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832397906 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.831684575 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.830252713 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829815061 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.828485414 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.829398124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.831011795 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829444184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.830673117 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.830682838 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.829895179 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842720433 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.839961201 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.831441449 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.829779554 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.829561215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.83464316 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.834179857 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842578762 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.842473211 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.830192251 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.830942645 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.832428523 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831898488 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.829455763 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.83194831 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.830965555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831171981 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.830688081 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.843213277 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840491166 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836342844 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.830510595 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.832503203 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834384122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831609248 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831184119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.832201404 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834445204 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.834162174 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839976839 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.836950836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836254516 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.83738237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.845671818 seconds)
  done (took 1086.343925691 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832136185 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830790483 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831309533 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832183275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831593276 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83007322 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83046196 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832101324 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831048083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831573778 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832058823 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832983632 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831287951 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832448555 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832146943 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831351741 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832299449 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832556763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832026614 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832140066 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.831925311 seconds)
  done (took 40.232565419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.835840966 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.832463342 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831408311 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834897558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83202702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.834131387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832909138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834145703 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834061114 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832517955 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83547863 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836155531 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.832160695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833046576 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833023433 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835890934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836440738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833717802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.836162288 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833002369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83593272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832977101 seconds)
  done (took 42.115961661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.836478094 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.834797679 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.834235553 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.835323388 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.837481243 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834723536 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.836707991 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.838072479 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837553073 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.835177765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.834472573 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.836449177 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.843715088 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.844223762 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.837847062 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.83713027 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982582228 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.835934828 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.835853737 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.836434476 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.835521831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.840187828 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.834220217 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835009115 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.835382732 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.837113197 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838036786 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.837196289 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.835730389 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.837605475 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.840124337 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.837683033 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835908563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.839593023 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.836123615 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.837229654 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.84198357 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.838304377 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.836321978 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838040173 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.846942913 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.859946347 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.837123002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.841477772 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.839016002 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839580877 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.840201108 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.846788877 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835780789 seconds)
  done (took 91.989036901 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839543333 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.839809878 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.835270477 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838455017 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.837505592 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.838633684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.838989817 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838348569 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.835203184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.835869361 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838922729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836720533 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835912051 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.838810512 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.839558229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835315747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835425665 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835991774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836401751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835952321 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836659585 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.838821322 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.840190314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837225294 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839806613 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836999262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837187912 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.839622744 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835864992 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836852997 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.839720157 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839869695 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.839999171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.838635534 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836914496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840085601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.840813417 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.837487105 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839142059 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.837092472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.839490303 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839729698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84044115 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.839559772 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837030618 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.836858752 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838683315 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.83726762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.837698499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.839519759 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.839908026 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.83726044 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839945163 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.83802752 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.840023024 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841586495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.838141636 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837976282 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.842098198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838982739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.83819355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84099123 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838078493 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.840581012 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.841033281 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839438903 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.838734932 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841581761 seconds)
  done (took 126.78736803 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83971378 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.840979949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840508867 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841177094 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839490492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.841358661 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840263926 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841201361 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840893065 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840659915 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840946808 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842646394 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.841578904 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842007574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841761405 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842310879 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84173788 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842931914 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841892204 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842811422 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.841903864 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841921162 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841995959 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841200675 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842222735 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.841934491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841858343 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841400191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841534963 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842432045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.843320041 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.842249656 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842156713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842536591 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842428643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.841644401 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843147108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842601868 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.843555409 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.842277772 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842870646 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843036205 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844846498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.842873902 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84294144 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842740253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844650928 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843379607 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844827335 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843807805 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843567405 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844038761 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84353785 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843041871 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843200772 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.844002998 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84392731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843875915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844044549 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843383555 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842954642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845858179 seconds)
  done (took 116.008916891 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84455405 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845114569 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.843745095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.841553375 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84434902 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841929473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.844670961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.844210524 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845270966 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.844488228 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845465729 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843059354 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841619126 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845366886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842476139 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843420913 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844252961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843166355 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845026536 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843569771 seconds)
  done (took 38.654449976 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842410848 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.845939429 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.843906402 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844358754 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.846055539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.843849223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.846252564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845555056 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844301012 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847040667 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845216276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846311185 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843220028 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843539323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847087437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844746747 seconds)
  done (took 31.297748589 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.844943928 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.847440721 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.846353859 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.846317784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845305521 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.843572503 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.846767001 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.843845386 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.844238264 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.847247295 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.847473443 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848175897 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84702538 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.846208409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844379162 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.847218465 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.846172347 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.845662126 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.847729632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.84715734 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.846764548 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.845438839 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.847883601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.847907336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.846276238 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.845451221 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.844675114 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.8463091 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.844843246 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.847961757 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843826737 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.846381129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.845754614 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.844352742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.846759846 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.846647832 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.848766834 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.848446678 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.84853689 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.847947004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.848340895 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.845997797 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.848534033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848524065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.847660466 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.850800392 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.847351055 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.847894264 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.846567372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.848206559 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.850392128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.848991597 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849341862 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.850665611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.849703629 seconds)
  done (took 103.362732352 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848618837 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849402206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846797244 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850233512 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849462868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.848508138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850362798 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847760817 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847814225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.849460769 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848056771 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849305963 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847662269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849932769 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847965176 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850097878 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848840152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848484241 seconds)
  done (took 35.059518806 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846684143 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847269872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.850510157 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846155553 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.848177493 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85081781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847810071 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.851246592 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849858526 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848138585 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848097688 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.85083704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850581278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.850853501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847455337 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848741489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.851191222 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850158129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.849276961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84828078 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851871126 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852009885 seconds)
  done (took 42.46901478 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.850352238 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.848859926 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.865598517 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870469162 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.872642016 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.886550576 seconds)
  done (took 12.978227004 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849884464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852930783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849422972 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852798656 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852861162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849149558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850551687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851282052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851639918 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850738069 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849583779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852952923 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850812237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85116715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852642226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854371127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849794128 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850741844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85182353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85420337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849219128 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85360466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849416527 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85075972 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850508473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850324565 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853855649 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852025333 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850781138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853069135 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855140092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851880316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852630467 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85273704 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855038993 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854371896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850851147 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854685668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854999822 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851479774 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854321163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855132816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856134742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85357529 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854828425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851129011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851537888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852954494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853095715 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855859836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855880284 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854553181 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855416721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855217851 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857308422 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856906161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854264688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853559828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856154493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853742333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854450573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856155531 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852714958 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85311975 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856335447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85382876 seconds)
  done (took 124.080179526 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853532083 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853250584 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85572431 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855263164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853934243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854284548 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853361432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853750891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853231669 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853796117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857625127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854378179 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853820814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854395078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854647537 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854091016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85433474 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853967689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854608364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85769905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853854613 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854811652 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853907151 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855785231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855538532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858985893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854447657 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854985074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854223165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857327376 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855424208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856221871 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856265544 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855822251 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85503115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855313611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856741931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856096318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857132858 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85959116 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856658429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858942257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855885271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855350747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857692207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856579763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856631067 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858735283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857670945 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859609052 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858509814 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858018729 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857786413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857004404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856497252 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856886173 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856803461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856289959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856377622 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8591658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856438465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856617705 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860620012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856776296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857257737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856563424 seconds)
  done (took 124.289308133 seconds)
done (took 2531.477514915 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.850131746 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.967908695 seconds)
  done (took 15.608107359 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02217151 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.975689478 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.860068618 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.861840246 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.857669441 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.872477871 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.877044272 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857820402 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.859508844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.858503622 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.859301777 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.044833313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.863736641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.857368702 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.857847671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.951319336 seconds)
  done (took 52.134643816 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.856945325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857213413 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865701732 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861371587 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.855819845 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.868005095 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.889630216 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.857630267 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890370094 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.870158752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.923232611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.86102131 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850106187 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900302395 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.864176857 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865110357 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.937688508 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.925491683 seconds)
  done (took 35.583090535 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930341739 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851642697 seconds)
  done (took 10.56678863 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.881354359 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84869332 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.877370597 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.857126296 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.844350065 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.8859928 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.851540352 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.862226214 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.876140409 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.875250405 seconds)
  done (took 70.441414052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.854081641 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.85037991 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.84898013 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.8468491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.841232382 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846529672 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.848308771 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.844003936 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548035912 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887383235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.856430907 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.855110004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.851553444 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.854698313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.850975627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.874152284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.981778395 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.850002609 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.849890176 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.859607208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.850455886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.903662809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.863553891 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85424706 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.882992362 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549054852 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.861109053 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.856313912 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.977619593 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.851450079 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.849392081 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.851760901 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.852882516 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.239672227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.16338341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.84426788 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85531881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.850713186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843109884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966576037 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.844321245 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.849189038 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.839880508 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.128794215 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94131872 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884477529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.256766634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.84671173 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.844071152 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875441691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.847791975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846187103 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.857777494 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.362048305 seconds)
  done (took 131.673618433 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837672882 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.424134266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002024719 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839683051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121109523 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081984114 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837388041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888640616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.838584771 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.085945169 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.067602121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955507894 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83732438 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837521946 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834722569 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83348507 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987747198 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907643865 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838321524 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.835006083 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872641329 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104838988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.96336163 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837799692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858218738 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066663747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965106233 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955707721 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.20845687 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.836100125 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902920886 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.835342427 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83678889 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835068939 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001936148 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.943829745 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936234444 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.834974561 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833071673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83237731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.496258119 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059102773 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943268873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.971637273 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083230651 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061245304 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476661239 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.830284979 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.467038205 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026974102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039394237 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.08645646 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.957457138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832162778 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.16585422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824812888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82142519 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086897608 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057548605 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940108776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825945627 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.82206289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820692361 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140514376 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82480538 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934283102 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824501035 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.820994813 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936268883 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939648652 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.055816537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0649147 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.851188141 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.54634686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.034180678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1078859 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.895578487 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09252229 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825202227 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.818288518 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916375673 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.582784614 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.03202106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137367283 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087413334 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860860552 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.424003164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.819239267 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068368799 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.06959863 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047288265 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067247842 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.988237146 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.0077913 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.819393835 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.817801892 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.044095972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95150959 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820369279 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182711218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066909053 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.552874655 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849246699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125579914 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956532617 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81908041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.443073578 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.816730572 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01913309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860996083 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.821349189 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814000849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.062756729 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.677939767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816764573 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.627581769 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.884163026 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.819512876 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081822664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818864582 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060224368 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819990803 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.128435942 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318097655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859706551 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.037497709 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061610858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.610972738 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120149942 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.132884182 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940076879 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078102085 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.723138553 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.815156658 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105610685 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.816697704 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81495996 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.984713054 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815794054 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967788988 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814783826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078365773 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83796893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982586905 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814677575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089977816 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856151162 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.866144576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.81156395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943387628 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815053928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.8704904 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000997512 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812336615 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81009016 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.4064634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.813852257 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958974549 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114735254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838320285 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.883472599 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.340478413 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811505295 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909303096 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839481278 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.40678831 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.811520207 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.0376283 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.81942802 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.788222763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.813991223 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.130695167 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040026416 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817637459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.815616255 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.611373269 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.525191656 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813574367 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991983852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.420433141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.461429295 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042717545 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816140526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947584995 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.821081118 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.895609563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.170064802 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811187616 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.817650728 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.814152372 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.81802535 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.816865438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044025842 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.847765973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.50152369 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.955161609 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063556651 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.129776111 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.079655562 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864558136 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818636059 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119516006 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.816378918 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.885397231 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.817312325 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845868419 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066270954 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818853083 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094449386 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111419107 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.909409508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868377762 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.822930469 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816948706 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.817779329 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965143171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915738314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81894671 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.821383208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934981378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94712547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006181721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.416154373 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.004073469 seconds)
  done (took 893.782449684 seconds)
done (took 1211.581170654 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.81741548 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.818907376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804407288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818945631 seconds)
  done (took 29.014197522 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.826865689 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.824385183 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.829058604 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.824819667 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.824315024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.823051933 seconds)
  done (took 12.708914589 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.838078156 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820361556 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.819342 seconds)
  done (took 21.231017609 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.896941348 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.231169104 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.929981452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.266188511 seconds)
  done (took 10.078276729 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.829561414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.827530887 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.825619204 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.826065781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.82902506 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.833514776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.828349053 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.827357234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82902284 seconds)
  done (took 18.212518767 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.260684747 seconds)
done (took 97.259735117 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.512594036 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.834944846 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.95230624 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.810660195 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.912042465 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.663156283 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.967478894 seconds)
    (8/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008203237 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.897410165 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.871636354 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.187740271 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.81335383 seconds)
    (13/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006841611 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860344558 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211375103 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.724512183 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.49821834 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102507675 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.881627647 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.742808633 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.862095194 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.818525377 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.92499582 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.737179848 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.338980842 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.120691783 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.863264676 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.959808055 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.240890436 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.83873863 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934921606 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.170451241 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.124526993 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.830153266 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.461743226 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.00984508 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.944931489 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.483820669 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906106304 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.859956285 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.516300611 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.863581729 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816817118 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.068151561 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.034451836 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.940660219 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.110226466 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.456858233 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.029068001 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.818073782 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.65871254 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.723019686 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.917142593 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.830589612 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.288647245 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.159846779 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.907620256 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.164759155 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.891026757 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.936999316 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.134633965 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.834153974 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.819819046 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.640825242 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.825336313 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.748068128 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.925539459 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.166667857 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.821098299 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.837143145 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.120616701 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.687769171 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.432867619 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.551022866 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.009116581 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.20896876 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.126399035 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.08004742 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.186644763 seconds)
    (80/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.979322781 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.81899396 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.952269591 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.830814982 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.987725673 seconds)
    (85/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.157831018 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.110153743 seconds)
    (87/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140051897 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.33531824 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.944596247 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.907161582 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.914906671 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.832307175 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.111773171 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.13497295 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.911683104 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.833612958 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.134518849 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.005920657 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.325562057 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.519212628 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.977024299 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.982968707 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135624396 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.642345894 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120659829 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.047644338 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.850195273 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.17685326 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.745913139 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.003477075 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.834184291 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333031275 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.889414064 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.832999147 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.934010955 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.821120515 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030792291 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.072048247 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018475192 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.730565494 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.300192667 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.980307184 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.295187614 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.858270894 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.656953397 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.078319379 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.342464417 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.663487001 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.183184712 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.901622021 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920768839 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.212236427 seconds)
    (133/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.852660011 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.1777482 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.184043691 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.214426306 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.099881626 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.134508071 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.278000122 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.001043239 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.839209103 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.260024949 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.946870182 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.996100502 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049706204 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.837344063 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 4.134805209 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080710946 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.821985743 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.593336313 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.958055505 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.206516887 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120497302 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.007147513 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.864017069 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.944239993 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.920696538 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 6.835807967 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.995375588 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.839734706 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.903718796 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863059043 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.095047765 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.034058918 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.970207884 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.843563644 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.093137104 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.87194603 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.071342783 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.137776313 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949780092 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.904437009 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.938826147 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.14791943 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.86439318 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.438029636 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.983057148 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079708996 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.26288055 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.218929348 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.849335671 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.864082222 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.379331105 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.037338023 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.825662797 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.598516711 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.09274986 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.883684712 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.352175934 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.497453534 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.311833781 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.915511311 seconds)
    (193/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.843384659 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.032829975 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.429050065 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026361081 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.870630275 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.223225388 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.235779642 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.897393081 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.678830396 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.876958182 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.943073262 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.901017385 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.74591122 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.241824897 seconds)
    (207/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.973182761 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.860795915 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.448770564 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436070748 seconds)
    (211/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730380591 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.840481137 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.131950014 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.941115092 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.199553356 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.485453548 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.166137691 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.0642162 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.058347725 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.480782327 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.082022594 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.826290953 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.235870943 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.871307612 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.862025592 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.959342392 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.055498602 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.989652042 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.660109242 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.087287546 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.36828859 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.869837219 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.880601266 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.511115449 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.927116307 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.928822853 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.925779491 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.850782223 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145035884 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.438449927 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841438916 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.820022361 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 5.611350121 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.110642551 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.146027405 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.846790224 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.922621448 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.035527834 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.208260377 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.894965907 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356753947 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.951203833 seconds)
    (253/309) benchmarking ("sort", Int8, false)...
    done (took 4.806004508 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.909384281 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.862722211 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.233454284 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.873539462 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.850403632 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.940084584 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.250608691 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.842710659 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.882286572 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.418592219 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.899946796 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.955911755 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141124478 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.871685562 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.195458291 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.873220765 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.224986423 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.830373539 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143840404 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.629515314 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.95532275 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.298042809 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.004340791 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.846225994 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.152420361 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409647773 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.030201933 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.928803661 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.927162727 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.526823252 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.068331928 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196964047 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.928600945 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.963775956 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.950124821 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.955980004 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.845977902 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.011436219 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.648160712 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10446632 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.847132239 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.778500532 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.843716747 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.861450115 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.873223905 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.887397752 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.861356803 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.646749273 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.963954748 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.895324601 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.081418942 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.869513417 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845669681 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.227722645 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.829608946 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.966585522 seconds)
  done (took 1004.55900177 seconds)
done (took 1006.595866076 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.881468171 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.87187433 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.856797925 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.87850459 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.96891249 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.886074673 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.868956262 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.857857263 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.903297419 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.903649369 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.852952956 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.886131213 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.855668798 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.85580586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854065204 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870802058 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.165759296 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.882553621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.870957296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.862492899 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.873391108 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.85611684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.906855268 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.884303552 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.860011349 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.85835629 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.86024903 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.877450865 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.965969011 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.860982981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.860548999 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.869002002 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.16674966 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.880585558 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.852674158 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.878546401 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.868859011 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.867447345 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.860842076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.890678458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301855639 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.861578444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.860950431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.858486427 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.858653388 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.862581067 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.859381802 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.864398378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870512785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87235534 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.301976744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.878843347 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.862817011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.861000488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.869295368 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.858687822 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.860822093 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875108958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.876888447 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874980602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15466276 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.887673712 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.862314625 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.876876354 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.865360617 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.338280131 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859028227 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.865337565 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305202405 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.870663193 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.337368612 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872654623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.859147316 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.875447881 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.891568306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.165299177 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.878294103 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.858622746 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.867637918 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.858317989 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.868518871 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873160217 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.866334033 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.8589435 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875388624 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.888796946 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.871178802 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.862371126 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.870121221 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.880926186 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.868188013 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.871921047 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.865396 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855019262 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.872250528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.864856145 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.863107206 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.862746587 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.866196042 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.871064197 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.303219964 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881476959 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.856968556 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.856964425 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.859754749 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.875101619 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.301728681 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.865530124 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.884242812 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.909195947 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.863068214 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.15666856 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.889914589 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87776008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.871727194 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.865740235 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.857591581 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.158406451 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32682988 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.882106539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.86356609 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.859221915 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878140145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.86369337 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.857999965 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.168975562 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.88905389 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877066367 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.984255168 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.875214329 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.894323911 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.861527497 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.866826773 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900418575 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877331403 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.89615882 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.863979269 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878389592 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.880129722 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.860093358 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.874659838 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.872911861 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.866647326 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.869927997 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.857684189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.893227372 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876450717 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876768045 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.884832146 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.985343154 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.861669135 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.157487231 seconds)
done (took 292.454838651 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.932442348 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.856047887 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.964821352 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.862419404 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.944260645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.94438128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.857218308 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.860839243 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.859099764 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240441981 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.858368211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.862760487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.858275544 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.858761844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.942086362 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.860917571 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.858586514 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.203601519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.860932731 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.933996352 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.860250361 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.860067789 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.861555231 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.243539312 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.862392127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.851889787 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.931762926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.865270833 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.208315569 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.855556139 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.859792443 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.209392897 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954626978 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.881614333 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.875143236 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.871529322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.946295462 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.867887969 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.942591593 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.942799415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.966498325 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.9008518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.864454823 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.860320526 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.865548885 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.863599675 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.860750124 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.893734942 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.862212888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.863237529 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205038014 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.873668348 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.872285548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.859900915 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.862652334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.882983293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.860156902 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.864316521 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.956308097 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.865205797 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.927532602 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24655237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.240774165 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.866733135 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.863908581 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.862544111 seconds)
  done (took 183.872340906 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.931166572 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.937942767 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.931265669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.867954593 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.913472198 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.935121674 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.867338321 seconds)
  done (took 15.17271939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.872821284 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865416291 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.913299954 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.915342596 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.86516961 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.014799769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864616331 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.87672863 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.863374124 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.918244103 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.86434229 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866792583 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.873500254 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855950202 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912951719 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.876037457 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.982217487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.865996667 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.867292251 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.021846447 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866126282 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.872835853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920081864 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.876628051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.865262637 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.871395823 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.461444234 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866486104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864464138 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.865440178 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865568487 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.9093002 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867899358 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.866220598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865384572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.984549999 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.866760158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866489669 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.86695381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865244792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.867410224 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.866780416 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.865751542 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.865146264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.867253485 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.889722124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.865269867 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.865828824 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.867867871 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.866784311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916942018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868345422 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.864183527 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.864915083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.925123733 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874594061 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868141723 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.865101101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868720058 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867440436 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.025256088 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916795338 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.867911901 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.915971157 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867349284 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.869894699 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.868487589 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.868205186 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.92092898 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.295603017 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.918408802 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.867156394 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.024019172 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.89369812 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868075413 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.873614408 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.870517358 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86921825 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.863770523 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.873526408 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.867592495 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.871670302 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87617551 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867560217 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869000516 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.981568294 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.97649509 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.865948828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.884091786 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.875875308 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.86780693 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.92198561 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.868681442 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.867809559 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.920448791 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.984598632 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.923856037 seconds)
  done (took 206.008413917 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.875197886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.878141919 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.867898491 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.885467213 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.867987051 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.869757114 seconds)
  done (took 13.040337722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.871288585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.870749354 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.871175343 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.869814974 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.874957609 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.867568939 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.870011921 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.871277184 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.872762013 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.871950569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.870459055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.875180901 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.87021124 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.869955389 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.870952453 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.87513188 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.871213941 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.869728072 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.872563227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869362451 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.018506509 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.869049149 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872596517 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.870559492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.873683802 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.875481052 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.880318041 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.872698605 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872078516 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.880532213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.872099773 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.8728398 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.87128704 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87788381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.875344537 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.872965448 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877719402 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877296697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866798235 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.869731731 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.877292406 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872047512 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.870860037 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877616015 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.870212653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.873777282 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.878965507 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878600537 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.872627378 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.878684372 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.879771569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.874039672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.87526742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878324406 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.871250184 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878029915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.88453867 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.878522336 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.87100251 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.870264225 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.872531937 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.870691582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870507617 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.879673753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.876915381 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.875510708 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.874620087 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870698491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872585034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.870285137 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.877056837 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.867387802 seconds)
  done (took 137.834583888 seconds)
done (took 557.732304186 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.129869293 seconds)
  done (took 8.928044021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.871814507 seconds)
  done (took 8.773667445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.451242657 seconds)
  done (took 10.260068674 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887017312 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.904411318 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879858396 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.873358852 seconds)
  done (took 29.360185523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.99701105 seconds)
  done (took 8.800565745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.885137983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.870053124 seconds)
  done (took 15.592464539 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.938050614 seconds)
  done (took 8.74201626 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.963745145 seconds)
  done (took 8.772929517 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894336332 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.907708059 seconds)
  done (took 15.618438632 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.861337289 seconds)
  done (took 8.666348906 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.503034175 seconds)
  done (took 11.315177065 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.873684857 seconds)
  done (took 8.693097622 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912992686 seconds)
  done (took 8.715119421 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.960888726 seconds)
  done (took 9.764532894 seconds)
done (took 163.792161134 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.875198926 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.871072837 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.872724967 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.87143783 seconds)
  done (took 29.294123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.912781405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912054121 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.913276388 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.922041366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.914452975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912383236 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.92106789 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.919802077 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.923011571 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.923018592 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915553675 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.91415998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.910698447 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.922786238 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.915832685 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915262247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.922760286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.915033812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.906228205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916974486 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.879815144 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.92256191 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.914427456 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.880749482 seconds)
  done (took 47.730858056 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.073714445 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.947441978 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.030982948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.930650213 seconds)
  done (took 9.786255045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.930149108 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.933278903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.944998732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.983185738 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.012674337 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.942865053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.908789967 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.90109627 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.887042246 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.932423022 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.009236145 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.947303746 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.016416056 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.879709609 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.066744037 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.879351429 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.878423678 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.932229154 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.983522662 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.996354062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.88005713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.932432945 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.937351921 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.95014301 seconds)
  done (took 48.470554518 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.878966789 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.888406714 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.886338728 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.879418246 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.878950994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880146877 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.885505372 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.882133279 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90188829 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.879262796 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.87956613 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.879899512 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.878905487 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.88038309 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.879735776 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893817511 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.895629029 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.881488359 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.8835391 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.886558993 seconds)
  done (took 39.487230288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.871534207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.803568622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.223709712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.128762436 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.874134374 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.872889059 seconds)
  done (took 32.58057886 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.892316495 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.883887952 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.87975498 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.936191055 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.016153899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.884915182 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.879312736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.890560365 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924175427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943723293 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.896152787 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.906610479 seconds)
  done (took 24.740498268 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.876974426 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.873461297 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.873887413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.889105377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.89061687 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.887263638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.887181928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.875044288 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.89134889 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.897337927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.88929142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.893866242 seconds)
  done (took 44.436774977 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966234137 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.924135965 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903181713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557450481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257864191 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086193576 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.526630533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209733085 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.880866597 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150428125 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841741878 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979719215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134211785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368275836 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911019764 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343735051 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168305822 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085265639 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900413966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529843776 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938871203 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053275553 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.59650772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932385357 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090617358 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.012893706 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.142220521 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879240803 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010050778 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913175984 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888972878 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880189065 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154536012 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250921709 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980747284 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890122079 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500396854 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.591290943 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.868309515 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.588192394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.555064561 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.993898596 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892961861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881125398 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815118301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020487817 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261041796 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.886032954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.592295567 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881945792 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890583391 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974058143 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.884428911 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.698638563 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795230057 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882663951 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.877078505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885299345 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452725295 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962093634 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049651813 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.853660754 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.974615768 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530230684 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263960939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02400604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.884956208 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885636867 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814751663 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.605993405 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931171362 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211847865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.901287421 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533735833 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181327186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.895945435 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824514981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146348749 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408500499 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853860181 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110635239 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884890366 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819217391 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.825907456 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817559787 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137788293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916319709 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.655845692 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919383818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21148954 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.893943041 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901085779 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907820897 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105912672 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.768625304 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884581279 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.622526172 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026546593 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905994764 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219658508 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817352585 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.886226364 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141296579 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.096290694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.94194608 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386068256 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034187219 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441453074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.936077541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024573631 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931674761 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148356097 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939597723 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965314429 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933814885 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884856729 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171915934 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458433456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.020206452 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.897164014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007374187 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200166772 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909775534 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966352109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894107457 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885955369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.632863713 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43373994 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.886570978 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.887256533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95375557 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933641824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.88801525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829636497 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.510382346 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847567804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.89683169 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110342467 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457468095 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197393557 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81941674 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216424991 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938718505 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.108192663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.537334075 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952087751 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147694679 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955988694 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984666128 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931928788 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904919393 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984339197 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908570284 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.032539955 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179453171 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.891627165 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.88917031 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634306023 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.919269992 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889769366 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.892077217 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636687443 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163358697 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906206282 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894176786 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777511253 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.902026131 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950629701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893796808 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899109943 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428647199 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601332655 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.896218687 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.477177068 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110171773 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897512663 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.534063959 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00079005 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.971201014 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162803052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943820446 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.822274632 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.599657679 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581039639 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889313465 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822889358 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886339366 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898824122 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905657799 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.0865739 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162229773 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925856998 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.539349096 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.927490273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900413625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.893542785 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887139079 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400365429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974075795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069721968 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934047703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033549289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902346945 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826540192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893701927 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89584977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892058038 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889984756 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924235824 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.544151251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267163045 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151492714 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.502469033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901430751 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.582092105 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.944942684 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.894699802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673025971 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045032527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.926503559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911480644 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.904263074 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.612224264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585755755 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461980812 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198575284 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201773105 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320774489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.088110562 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918409122 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228520929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824755582 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447307793 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95003153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233862231 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835939802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974224803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.540475548 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223830973 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902621409 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119443322 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27385079 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.717685411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916927822 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104402194 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929324494 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.038056583 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853551144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.178881639 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034595725 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.547845947 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088630435 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230119872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531169424 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.041029441 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.890045577 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.566901182 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972859399 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.60806873 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064698265 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.192388351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.789373982 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355360375 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899742067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.118790859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240155789 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039187591 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.01523788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829615765 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904842782 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90502885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.895750858 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.892284683 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.771541299 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.145776238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90436429 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830753999 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.002378151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179669621 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.79089392 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.900156974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894399691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17839095 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421441693 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057513156 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.985467997 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.411234233 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90136344 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829110448 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828575729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.587700782 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901246804 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869817663 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102942521 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.994480758 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807589997 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.969245147 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158232799 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151136706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.907700725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169145924 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16445132 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594944472 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921357913 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.997175905 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.517159879 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.992971431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896208053 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13191555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649057906 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121272969 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.915649038 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.843746861 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.892803156 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110347982 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895627724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773540869 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115548567 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.618974986 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.902827271 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203484946 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965131943 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.74814187 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932728629 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.987252884 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907224781 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976428867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907338973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.908310952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908302622 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944951692 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780777359 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00938823 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.913929795 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991261372 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984207673 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419720955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.904458683 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176180008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249114904 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211124605 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951949569 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897472732 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898512011 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831273157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045280456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.125134984 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17157714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027231492 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.013236184 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924069957 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524141229 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088995715 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138095051 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173962963 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.794238259 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398682084 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937098517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.898972428 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910773816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.109816653 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112015395 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19508852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034766679 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.972711738 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265322698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173972493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900191197 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900204033 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49213569 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.914814819 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572905011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.939642498 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.765291021 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164625485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910337046 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273273298 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920565218 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055729765 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.673623194 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630615942 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187216506 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877881138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95367302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17701583 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.279176607 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209948214 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96790904 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912947836 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.003752593 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047202022 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.779229553 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901355098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899258024 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118481301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.613610885 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911685996 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173558248 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207717809 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.899393985 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794292583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923683248 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.912861193 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127177338 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159207463 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151468628 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909932014 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907635917 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.723615085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170365882 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956334439 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83706412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.906164044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996612369 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15041545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926332378 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.357475696 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.614127789 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173092861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.985901548 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92659587 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047000287 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260110036 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216341566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432585753 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10751269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48733389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471910917 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203769831 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.909277372 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.051794231 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205767667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.908694277 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.973750815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941435187 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.177237669 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208429018 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.909341757 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56822229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.870159184 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244454715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463861363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843065104 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913021068 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.965206214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902121033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037296526 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9159808 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.797822032 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048713132 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.665001636 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179665448 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.907849579 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8963573 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.574621437 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16846543 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932853957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059426582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907865404 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.581112983 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.251551491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162490893 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.975188428 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.913915613 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.908406427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90479934 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892564595 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.10232305 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.102246696 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179713406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.998034025 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.941046976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910736306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.120271105 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116901961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.774361032 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031227766 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978897033 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94658018 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.81106848 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407176132 seconds)
  done (took 1682.797051893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915900934 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.925121707 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.930695927 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913695303 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952773227 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004944746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917312457 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961661546 seconds)
  done (took 57.361141445 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.900673263 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.108365306 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909449206 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.901717029 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.909464887 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.907589612 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.067063183 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.911964977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.911896344 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.912253484 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.901739589 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.904485159 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209856292 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.9276192 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.903549055 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.88909551 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.914375654 seconds)
  done (took 74.947816845 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931669664 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.98772117 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926484441 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.915851043 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.883841867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.911956976 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.747761831 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.934229596 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.903604746 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.136504908 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.541309511 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.927619845 seconds)
  done (took 90.588400191 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.916106232 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.913802649 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.909065526 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.908458345 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915934976 seconds)
  done (took 11.406688012 seconds)
done (took 2195.456865611 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.15990589 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.119673469 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140557801 seconds)
  done (took 6.099312847 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058427682 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.106677419 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.226047259 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.227839602 seconds)
  done (took 10.460156011 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.190255831 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.278822855 seconds)
  done (took 6.310762679 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.306236596 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917733752 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.284788881 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910742682 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.910042446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.909892751 seconds)
  done (took 22.576007513 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.91583593 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91451641 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.911340567 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.916903138 seconds)
  done (took 9.500422317 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893681184 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.620270407 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.89302511 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.908973053 seconds)
  done (took 21.156231448 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.658327981 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.670025427 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.657406633 seconds)
  done (took 9.826799934 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.344327415 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.788551538 seconds)
  done (took 8.975379912 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.176650881 seconds)
  done (took 4.01892543 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.045385282 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.22229944 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.395340572 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.407188266 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.532650169 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.5921336 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.230010383 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.15399969 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.316249743 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.3366891 seconds)
  done (took 25.071725338 seconds)
done (took 139.503136231 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.29271792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.293779026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.11809117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.251764924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.134400765 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.118005977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.11577195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.235011615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.763219781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.752711307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.28893242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.133525582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.064906896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.280353732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.067237045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.157801146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.139192494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.318271074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.95118421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.147755439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.116226993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.888698098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.134489706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.905594549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.139194924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.068129794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.46660724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.158779404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.099385336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.478461262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.067441808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.295505663 seconds)
  done (took 172.287713742 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.671486675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911316755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.908617907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909933065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.29700777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913105507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913430757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909630838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.164589435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.143853568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912092504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.285026302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914389983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915282515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913485094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905818113 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.290415018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.756705053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927944052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924507303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933326223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.197825882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931206694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.252682516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.307050681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929718713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.913311562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929923133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918635065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917996638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.922824999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.9094055 seconds)
  done (took 209.395507352 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.908817657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927520768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910464005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.912450019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.912484105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.91911907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914292825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.908187777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.493140931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.488314963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.920239684 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.920806998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925851009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.907470733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.925886674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91313067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.910527329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.920385149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918299468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927058264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.93815301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.655747449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935065674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.665472485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.925302172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944279027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.916347107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931100893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935604338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.937770647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930596323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914408267 seconds)
  done (took 221.975391582 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.12211589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.920323484 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.923262541 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.88013339 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.926561911 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.921997101 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.918222571 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.119176245 seconds)
  done (took 19.604032822 seconds)
done (took 625.118412342 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.374227154 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.217843983 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.10171111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.945026587 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.165208761 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.981017526 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.945170876 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005496929 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.668436777 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.010734898 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.585565945 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.95585999 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.675218052 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.960822384 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.070209676 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.994837052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.480891425 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573132761 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122284565 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983532846 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.114864461 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.870463976 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.014279117 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.698011307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.692727357 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.911378931 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.11520072 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.485895509 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.950352573 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.108866492 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.67165057 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.320409955 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.949829946 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.937243352 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.99312452 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.976396702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289358082 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.947105151 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.063505606 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.678758169 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004853944 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.552351599 seconds)
  done (took 105.011093006 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914667213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.910324201 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.911701085 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.914330764 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.915289252 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.915325625 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.914079997 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.912590127 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.912707637 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.912855563 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.916028599 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.914521641 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.912782818 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.915508283 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.914495035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.916683401 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.914802934 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9149654 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.914847974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.916961768 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.915699003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.911603605 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.914926561 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913240584 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.915426843 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913959788 seconds)
  done (took 51.630340588 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.926874489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.074792219 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.150185716 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.941887871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.924665104 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.927730016 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943178172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.930525625 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929904149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.929529182 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020466517 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.931456709 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945246998 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.149716352 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.937899716 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.930074521 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.927562338 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926661357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075970608 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940176458 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.948117899 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.930887822 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.948898442 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940390576 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.930750384 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927433968 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.927518497 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.39015193 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.933460634 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.015290849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.971109566 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948167087 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.362007785 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158025957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.978069627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.931410848 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.928630345 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023194322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.928940599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.929287418 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.946565106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.928286717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.151982401 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.42385906 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.935701057 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929452207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.402645072 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.027436137 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.967055364 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93930346 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.160499324 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.941629214 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.931106328 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.926622322 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.963669461 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938439719 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.928845451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.286420696 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.937210492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946131606 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.933812317 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.931395711 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.083457522 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.932875941 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.076778272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.931908602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.938088037 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.928516994 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.15226066 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9394755 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42812197 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.938559479 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.929712621 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.018095829 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.07514177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.426868648 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.93930195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087282383 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.374701084 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951249988 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.933634572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378766947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.952718818 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.932994011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.930880763 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.931706979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930529927 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.972407806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.944225837 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.361436388 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.430015952 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.296826335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.952846134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.944615692 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.928052238 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.288955361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.935614867 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.92817195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.147353477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.446966438 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.937856544 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.936116429 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.411954046 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.939404155 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.948875674 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.935113101 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154662263 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94104434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.973127783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.931609225 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.936478376 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.931616416 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.948858741 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.933672913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.932368868 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405807737 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.032125341 seconds)
  done (took 238.802824531 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.92489342 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.934575393 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.923380086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938523717 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.921223681 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.928549751 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92388773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.922573684 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.930196702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.923571732 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.923731017 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.92755803 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.923481541 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.931681366 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.970760536 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.931197379 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.534754464 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.925624944 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.925183866 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.922332277 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.569440543 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.926987202 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.923973164 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.942640821 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.923295877 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.924630946 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.925775618 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.959830189 seconds)
  done (took 169.142410723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.931937923 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043420317 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.943624883 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.957024509 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.937873174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.930367669 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.95523348 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.944969404 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.934626832 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931047102 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.93276429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.99083401 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.940025446 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031601333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.958985068 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.960852291 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.030723854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.93770625 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.930482747 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.931515608 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96112374 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.927142446 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.991257719 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.052155629 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.949720787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046558666 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.933418385 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.935548644 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.931970504 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.045010169 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.942556782 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.991591884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.959073173 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.949386754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048330174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.043855206 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037826881 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.959736216 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.935481402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.93228525 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.930947514 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.919646415 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046278086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.948370423 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.933127418 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037218463 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.947979059 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.937465249 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.946761635 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.932986962 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.946838158 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.947382798 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.993841999 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.057836442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962153401 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.963834403 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959130605 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.215254881 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.94199454 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.030072727 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927333332 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051570686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.953651867 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.92294208 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.934943938 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94081879 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.964155597 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.963267852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.034284259 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.93865945 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.033221447 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.967704123 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.938189027 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.934158118 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937393059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046324331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.046389221 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.96803547 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.967387196 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961145948 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.928500705 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.934828023 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.9247044 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.950787167 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.938291598 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.050655246 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.046647586 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942449794 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938774607 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.938122627 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.937572614 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960185586 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052624391 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.965407074 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029894995 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.998675873 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.000903788 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.948154896 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.948804301 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.938743214 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.996968572 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949247291 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.946893379 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.264754079 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.003259985 seconds)
  done (took 209.155568411 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426680786 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.98946941 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.98780286 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.214627543 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.353228761 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.753109241 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.97855269 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.981846351 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.003965759 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.179506999 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.054366559 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.996976234 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.968097345 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.953614876 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.980030926 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.002815982 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.98822234 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.300217592 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.108870115 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140499282 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.961441798 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250344804 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.297740742 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.356298524 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.016565587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.293295957 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667814417 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.226668299 seconds)
  done (took 63.300891335 seconds)
done (took 838.887526369 seconds)
SAVING RESULT...
DONE!
