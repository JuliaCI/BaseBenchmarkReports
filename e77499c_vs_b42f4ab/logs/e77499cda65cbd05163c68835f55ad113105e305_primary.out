cset: moving following pidspec: 29386
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328845843 seconds)
loading group "string"... done (took 0.543542124 seconds)
loading group "linalg"... done (took 6.879792313 seconds)
loading group "parallel"... done (took 0.156989016 seconds)
loading group "find"... done (took 1.172213535 seconds)
loading group "tuple"... done (took 1.770797395 seconds)
loading group "dates"... done (took 1.304300275 seconds)
loading group "micro"... done (took 0.221342268 seconds)
loading group "io"... done (took 0.925562156 seconds)
loading group "scalar"... done (took 36.40808327 seconds)
loading group "sparse"... done (took 11.123703679 seconds)
loading group "broadcast"... done (took 0.90974072 seconds)
loading group "union"... done (took 11.931892596 seconds)
loading group "simd"... done (took 4.401030236 seconds)
loading group "random"... done (took 8.797555121 seconds)
loading group "problem"... done (took 1.721297979 seconds)
loading group "array"... done (took 20.45806906 seconds)
loading group "misc"... done (took 1.641453935 seconds)
loading group "sort"... done (took 3.220681174 seconds)
loading group "collection"... done (took 16.912993341 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482831142 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121583565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113472889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117731438 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137846991 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113549115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121642087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082973887 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.818405716 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145325415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118615909 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41130083 seconds)
done (took 4.903049589 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173323478 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082387734 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080821256 seconds)
  done (took 1.24401676 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065199958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120531198 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066052914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066354939 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066086134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066202617 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06577231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06549756 seconds)
  done (took 1.598863416 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072417929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068426262 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068093455 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068223454 seconds)
  done (took 1.358365051 seconds)
done (took 5.52928355 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747762168 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202028279 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18190468 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396065264 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12876344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155721365 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642738182 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317840949 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184841065 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080856801 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102367206 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317076531 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107357834 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62200568 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073492534 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089376951 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137247865 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428034452 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066705088 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081577608 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088320953 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127514283 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084537141 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074084544 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142664648 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067078588 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131309895 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080074329 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066105259 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206144952 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171720323 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653430474 seconds)
  done (took 10.075211354 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095989306 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097556102 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06842666 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122946005 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096712378 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069062742 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070703776 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067073393 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086653254 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127312809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088374795 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100752958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065671327 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068360857 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083991031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20423529 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079130558 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081190469 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070231514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074914174 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105344122 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077424674 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077727301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07716378 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128324029 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180173728 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098050042 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096611444 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066530396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079876874 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114786521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126044573 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065899246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066484375 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123700344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093961685 seconds)
  done (took 4.508681837 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.940329503 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140195124 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089505675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130803877 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06429126 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106312205 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065778789 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109169559 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198660043 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079767115 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.338629586 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576461161 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11373866 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104108095 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069894095 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067988727 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066182123 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325859479 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095869362 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103910732 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080720104 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069377362 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068332466 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366325454 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066862182 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06328173 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067610396 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057204009 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121371953 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062813564 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066937469 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.905906113 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12381546 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065649598 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099229348 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161333314 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085394805 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.267144949 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07055565 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066399262 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150237371 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069950701 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06637443 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083504419 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103910405 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112289294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065211826 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066514572 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162697043 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064205209 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078403118 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.638145193 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153733331 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07605831 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06358017 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246502502 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085399468 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069303318 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064167892 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175036186 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134341996 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068008415 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066799629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067649934 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069150904 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350490014 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065689783 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992649976 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067553743 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076170019 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069343466 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069354061 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0725088 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07197492 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085482743 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065774302 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075272213 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066121233 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065900923 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066402426 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064084954 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083551698 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.363339587 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065729947 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0675071 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064340218 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090185273 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095538315 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065458593 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064785671 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09925516 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063107346 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066440659 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065214454 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100540599 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06540783 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082621981 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067764226 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.216502326 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067656746 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108802557 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067642477 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099042768 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069865233 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101956245 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081002866 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067715594 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399794865 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065045468 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064875218 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070504855 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065649411 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067334311 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066187767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079301244 seconds)
  done (took 20.68308223 seconds)
done (took 37.287438082 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.26642645 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079140564 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074532844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074469526 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074841804 seconds)
  done (took 1.739319764 seconds)
done (took 2.89021809 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120196376 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098348911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063914341 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094443956 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063805421 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099364695 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098904042 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080705493 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098718062 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063671632 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095806231 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063964303 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063645742 seconds)
  done (took 2.275628554 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082194161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082958373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070977184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084109304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065100298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08453513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082720021 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091638992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08285899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073564096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064612965 seconds)
  done (took 2.010832968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081093265 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08339178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070906403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081427331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063760544 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080884486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080618495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086819247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082407985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074620315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065535564 seconds)
  done (took 1.990560912 seconds)
done (took 7.415487768 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077205697 seconds)
  done (took 1.209341254 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586054656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.082280087 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081526163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110868573 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18256067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117519204 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268115698 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084619527 seconds)
  done (took 8.827259516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101448035 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069392997 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068495094 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071287634 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070373203 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068256667 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068132465 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071621674 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068186896 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071497536 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069341254 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069107258 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069521463 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070735721 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070914495 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071861675 seconds)
  done (took 2.362970108 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091808327 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090919922 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073367004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073943538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071585868 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071569249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073718764 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073100965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070567463 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071740788 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074144229 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073514069 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071262497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065203771 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073396086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075034587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070853881 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073874286 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073980189 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07405373 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073749385 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064125611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070627766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073386786 seconds)
  done (took 3.011898927 seconds)
done (took 16.552049213 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11121154 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071425682 seconds)
  done (took 1.327216956 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080302905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082034538 seconds)
  done (took 1.31469699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081831466 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065783996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088892641 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077095951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065670859 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065273351 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086494103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066238784 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065514922 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065636843 seconds)
  done (took 1.88103414 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068377209 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077698392 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06976391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079925694 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072935301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0639802 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071674027 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067283933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076703056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062145868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070291224 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080983607 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070845257 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082960207 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07171409 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067566342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070020841 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066559335 seconds)
  done (took 2.446605407 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065195536 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066316079 seconds)
  done (took 1.289751532 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065892218 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063156559 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066215104 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066693071 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063197314 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062079302 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062870502 seconds)
  done (took 1.604645944 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.374495131 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110140015 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298468166 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071932042 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081097859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249350095 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064747874 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069965439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069763069 seconds)
  done (took 2.587391994 seconds)
done (took 13.608934967 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078257392 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08482279 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095041985 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.359535374 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091523053 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065659623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113360406 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187914097 seconds)
done (took 2.244756879 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212929266 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594891817 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384246304 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194313332 seconds)
  done (took 2.333096177 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322767156 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085995331 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058802974 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066449641 seconds)
  done (took 1.702024153 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065866046 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068951297 seconds)
  done (took 1.302568531 seconds)
done (took 6.717654844 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066435507 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08285283 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066060918 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063646671 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06367676 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065596303 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063080259 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063211869 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065587582 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065889201 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067930261 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065698137 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065197757 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065512135 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062841612 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063096125 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065867081 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06315399 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062939652 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062997319 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065693907 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065662614 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063299548 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062903584 seconds)
  done (took 2.771917439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083550058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066941452 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071131163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071257603 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06964576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071125112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071330843 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066233583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07118355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068163534 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069019719 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06919397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06737892 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06990601 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067820572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06984087 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071226234 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065870487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067851416 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069162041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070548193 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065556226 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069483929 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070926012 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06939232 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069121498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067770798 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066259122 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070768493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069482847 seconds)
  done (took 3.264895293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069875173 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062732663 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064299535 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070469071 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063870277 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064518075 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062946253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063457358 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064152926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063187153 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06512416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063493658 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063494704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064190962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063932996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06696085 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078343313 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063401383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063763014 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064010345 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066744244 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063054796 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063398862 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063021606 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06321799 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062817305 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064014283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063080781 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064073799 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064466514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066236803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066925522 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063462785 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070149828 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067156618 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063295071 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066969401 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063628536 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06380713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062784207 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062758694 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063049124 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06324589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069692833 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063475449 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064809438 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063478138 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064470397 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06436238 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065881877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062729072 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062850278 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064901521 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064181099 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066614966 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062560434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064119595 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062694036 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063900144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062496892 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062859646 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062231115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.177918999 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063660311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077564469 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069960801 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063013875 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064580119 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06451577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065509736 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064848564 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076233491 seconds)
  done (took 5.972799666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090393317 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086929916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065235345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064900246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061827432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063675417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067329239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063648811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065180596 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069509845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0642452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064826293 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137939 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076700019 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064160787 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065107568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069455327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061747428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064143717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067271807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063704579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066898672 seconds)
  done (took 2.679850721 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154625868 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070166787 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104808413 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07283596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06704132 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072328164 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069454537 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069769257 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069873073 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067829079 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067906698 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069623494 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067034999 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067598728 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067878581 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067689908 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06949362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067892596 seconds)
  done (took 2.545867564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076460662 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066085958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08580292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065330152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065825298 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067998814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070373402 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074031988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067626326 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06562594 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074185355 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068074277 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067861897 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065726312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067579903 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065132612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068121518 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065298018 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073492962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069777795 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070084468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073321205 seconds)
  done (took 2.716576244 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079361353 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067458038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0817741 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068181481 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061845098 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064028189 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069859091 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065383858 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069787208 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066904366 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06551215 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063651525 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068934122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06554662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068692062 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065763002 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067382957 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065467717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067331208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061761003 seconds)
  done (took 2.539000522 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085689822 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067121927 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067122207 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074670154 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066983703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066879817 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074992198 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067037411 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067227478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088251928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06689768 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067203749 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074277495 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071444183 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066975531 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074448625 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075157579 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074116747 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066879101 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067209922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086389618 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066980294 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074630615 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066529141 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066690812 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066997698 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06673526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071282399 seconds)
  done (took 3.183033212 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066555169 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065681131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063234198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06317517 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063247545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063321515 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062856285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063244355 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065594839 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063219664 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065378567 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064921336 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065458343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06610296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06572292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065946095 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065600219 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062753162 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06293443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063002971 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065617862 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065306646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065254604 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063117501 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06295841 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065041878 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063083926 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062742232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06529264 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062898514 seconds)
  done (took 3.118711653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075705572 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073310562 seconds)
  done (took 1.339421079 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063482264 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079545171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063023891 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069506771 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0698094 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065869639 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07281873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069450155 seconds)
  done (took 1.74025755 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080717374 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076760922 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067204128 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079951977 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075967565 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082184047 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131759913 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066559718 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07259225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063923383 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079108882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064990152 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071873818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065835004 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0711862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071867982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063734958 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071662094 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068034773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064643807 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066631389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073945218 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067921847 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061267809 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066756253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08726097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07642513 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065295582 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069012064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072927543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071386157 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059819311 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065636542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066149043 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064029836 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075443932 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080582157 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068424936 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073743249 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066575985 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075835756 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060844598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070387005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072041555 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075711025 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066405483 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066608433 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061273209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063949314 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068499637 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061498266 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065705567 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060288779 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074975897 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068972783 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076442117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064478176 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067190363 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06869166 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06914682 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072169991 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067661146 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068167946 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06510331 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075260737 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069754929 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074233215 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060899518 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059916361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063533675 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075454818 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088025403 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071807464 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066528534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066605362 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063644121 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069062174 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066539053 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071195191 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071631183 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065807759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070755561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072376112 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065914004 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068123956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073287279 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063419232 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067923239 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062888104 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08045436 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063653953 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062593381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062523098 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074434195 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067579186 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064282512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063130454 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071404355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058910895 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065244793 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065655331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06553327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074996523 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068987026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069154649 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07294151 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071979972 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064840186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067290478 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061459246 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065231658 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064084196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071444375 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059164128 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067327149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065432413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065063671 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072778981 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.190685048 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067128987 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074643507 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072103429 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065115518 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063541106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069352401 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066784105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070090443 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075149996 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065222111 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062168746 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062348677 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070105499 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06632858 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069846585 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071850446 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069267393 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061072537 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.0644263 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071599889 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075307138 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06714189 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067955753 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072399821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067791896 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065583009 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072735789 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068716559 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065653536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07136229 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066537826 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061467879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069793626 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069430755 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065239852 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07069365 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069939787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069024587 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067062222 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064971114 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073528684 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068073818 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065081814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066355547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064731423 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076866618 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067612465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061766975 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063206251 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07601375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064750847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06550713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065851877 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068753899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066996123 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064757868 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065850553 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068610886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076165367 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069706429 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066657896 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071314637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077121265 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065376904 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068305254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065800063 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067368338 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066711617 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075569415 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071775032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071229069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068897575 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063117179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071550395 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073341713 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065507104 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063959235 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065199156 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070122824 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071711557 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070272932 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06650452 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064270557 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066826097 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068750902 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06859134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065410452 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065270124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072050611 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063745102 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072547198 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066481962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075471237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068771363 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060576176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068142311 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063483511 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070873851 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063220104 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064771421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065953238 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063921389 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067352914 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059229457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071668259 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072275611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06510376 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064246435 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06485233 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071777848 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066335758 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06823507 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067934569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070727433 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07480818 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064815398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067993229 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074520435 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064755436 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05905182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.202123855 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066369447 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067701983 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067063684 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065668638 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070440183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076782123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074244227 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061932401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0702116 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066018141 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066494636 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062620323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071964661 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069663272 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067963937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073625733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068215408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067554561 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07008189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066881916 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066995766 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067963105 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069139344 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067505829 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068307476 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066107325 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069360958 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06574861 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064514274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068239675 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066422863 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067130284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071511743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065568843 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066824646 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069233953 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067575716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06766663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06760498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065801961 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068958271 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067112598 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067118494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069261247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06254989 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073405462 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066317575 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074483908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06727832 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063991588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07388553 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069112783 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072555792 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067072636 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067492489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067961734 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066141425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069522557 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074258981 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063987667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076653474 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07382768 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067121397 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069483701 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06689196 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068182433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065027211 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067696238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066635245 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066484745 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065765359 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070521409 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068825973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06593436 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067418765 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067093122 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066035444 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067213514 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0604854 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065176429 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065313703 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065717849 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075402701 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066213194 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065471103 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064911692 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066811918 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06461699 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062154016 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073528588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074876018 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065907122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072725944 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065065787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067116715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076182965 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060120147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064080524 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063625659 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063652402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072397866 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065695977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073946232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065032524 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064087151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062610609 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065803273 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063436004 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059475983 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062749744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068174247 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064689741 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064303707 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064801236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067454443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065593961 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073854461 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064283212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065594586 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064836522 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062152621 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064271431 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064070888 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067723402 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.201722884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066305436 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065332711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067569034 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068154901 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069112133 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067099296 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069130153 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076492882 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067003185 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070585609 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070836072 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061581987 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070840013 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067011122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066438164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065831639 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070531498 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07010204 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068039207 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075482526 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066480749 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067330772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067010791 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064558425 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066527472 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066851524 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066986834 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065529462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068271305 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073999789 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064520983 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069830609 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066922674 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066637169 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07296058 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067582142 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069590873 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073692677 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067005776 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068610699 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074559736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071034365 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070964848 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068144047 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068698782 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072725037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065606154 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073006918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067311815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067674423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06901742 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064676407 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066074615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066941454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065485479 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07234329 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067576859 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065824937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065587634 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06510945 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067590794 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06975979 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073919796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068525068 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069746197 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061693713 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063860328 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067301277 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064427374 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068525998 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068801786 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07195983 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068436568 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066873284 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065118705 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074936518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071738275 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06971412 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063921515 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069653696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066779925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068101145 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066734222 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065949039 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067254641 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069590249 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066978295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064967737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072754483 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069012083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066584824 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066888599 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066404461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066064784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060962118 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065989963 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067386111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070668413 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068007985 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0655554 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075689834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063613864 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06632019 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068333401 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064508843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069060362 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059992578 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066036031 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065235654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065716568 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060366063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063938044 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062833107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067253053 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063950106 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060390525 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074687006 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073465179 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067366966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063945862 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063310867 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0601122 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06012451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063790314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.19914552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070342781 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076558412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066454022 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065773416 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062050665 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06685093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069803898 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069033762 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063853523 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062105906 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06577754 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069026682 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071286427 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065610121 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066103194 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069054842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069021924 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065054992 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069752485 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063875329 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069968947 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078784263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067345813 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067192642 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072486592 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074278558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067226477 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061526889 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067105521 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069431609 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066811045 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06746492 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067580068 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080438288 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069436216 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066485141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065249308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069261368 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065387612 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075143807 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067147239 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067971013 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071381447 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069333763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076554131 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070263654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075001686 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070187753 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069234977 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065774072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066379361 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064727845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065957809 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067276894 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067075982 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071955234 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074803885 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065638673 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076719009 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075909492 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068020071 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0630701 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066081546 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067063199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061559598 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068491273 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065609955 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064546251 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064670413 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064832339 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066839603 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07169191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067103659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067000067 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065884616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060351753 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068661025 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06834979 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067893416 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064577157 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067883598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06872044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071128609 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069273954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063586712 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067266477 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067288024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066178577 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061693374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072867835 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064485815 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067532924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065095859 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065944405 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066264893 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069271765 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070160762 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06659734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068223717 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069222907 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0686202 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063035455 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063345858 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071235219 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064225029 seconds)
  done (took 42.304373473 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100422834 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063404734 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061683305 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062395144 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07393605 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063078961 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062216716 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063500297 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063642183 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065557055 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062367557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062397394 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071117084 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07791574 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074041868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067599763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064115557 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065628671 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064374876 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065562603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073132666 seconds)
  done (took 2.739325033 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074160909 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070423721 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072428538 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075935628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067360793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0708373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072561614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070672589 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07600872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066942927 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085256324 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071810174 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068359457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069144856 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069671078 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073757872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078253826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06947281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072922016 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074768794 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073284836 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075139938 seconds)
  done (took 2.876005677 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067565305 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065522085 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067538952 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06198124 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068160516 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062707374 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070754518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065923761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071764478 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06741608 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067680286 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067540935 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070008444 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063703684 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068301178 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06633539 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111434824 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071727929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067766782 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068683638 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062712193 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068876924 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061691319 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062119504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065085901 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069443574 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067165837 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064198823 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066077636 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06550113 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065722996 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064005538 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067751257 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066359013 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065108596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064933818 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065572795 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065777443 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061390972 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064016899 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06666689 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061916794 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065920409 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0676835 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064040213 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063915429 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067450117 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065730308 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061088925 seconds)
  done (took 4.560803902 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07896435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108312693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068641142 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088286851 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079942824 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075338013 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06962135 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089553816 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063714833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064610785 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082618711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080000925 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066612893 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070746036 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069892764 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067026841 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068543443 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066230663 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070523838 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065480357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069662889 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072421913 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080229625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078636786 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069517296 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065336143 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065411219 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070071429 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078503764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069787598 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070382377 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070954352 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080345243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067565305 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065208156 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067950551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081430174 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066132794 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068244246 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06390501 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06750164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069612049 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071734712 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081663402 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065734153 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071017803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065038743 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062926444 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077965931 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067568139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073222035 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079455363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069239891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065637528 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069479952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080219451 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065228689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063728928 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068613856 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077220102 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063624004 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069077321 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078713042 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067388381 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072456289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079037288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070664513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069302533 seconds)
  done (took 6.313657736 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075597158 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072501181 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080974317 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079486637 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072021525 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072506575 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071837198 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072236597 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071698919 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076978985 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072452069 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092626149 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067718781 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074533848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072022867 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072448255 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072614094 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072345116 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072054179 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072122479 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072204084 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080172427 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072579253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080143984 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098464039 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067721924 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072224208 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07248232 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080090072 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072083726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079557628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072465857 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072360987 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080103249 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079307241 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071773218 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06519258 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071705839 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072212149 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071846238 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067495615 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080391274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071858965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067473364 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072076403 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071851179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079280823 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079086832 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074472267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076260396 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07168311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079643948 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071704528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071839532 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079708973 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104181618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079526271 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079682746 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072264663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079463864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079560935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085797725 seconds)
  done (took 5.987070148 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082717285 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074190861 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075802017 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061294449 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063928698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0698143 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063767814 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064425748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074120696 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07432151 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077104236 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069660625 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072430829 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077156595 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069704378 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072779291 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069616456 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069473682 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074082583 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069412439 seconds)
  done (took 2.727327596 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07443786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082652788 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066612617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071862134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068576888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071286791 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068002759 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068622378 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066827672 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06873907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075466601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075608002 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066684436 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071657253 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075288963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071178728 seconds)
  done (took 2.436758012 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07523165 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072134694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079471925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067157609 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065324157 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062667771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065753103 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061188948 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062205344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077832513 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066242924 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068624412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067256347 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066354219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063433596 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068413724 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062193992 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063271198 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065656633 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078034838 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076566741 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064264413 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066374972 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065491911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065851878 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070746174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065211931 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06349721 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063233732 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066371857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066334194 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06972653 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062995331 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064068717 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064512605 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06354358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066325992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066293443 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068671498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066253116 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063563224 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065265501 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065441275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06631557 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061957527 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066539435 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06163343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067722245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064020468 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065601106 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065044998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067945095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066027843 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072210542 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068682078 seconds)
  done (took 4.968093916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07948539 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070113008 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06188829 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06434697 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069256503 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067725385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06935858 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067371267 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067617596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064093509 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067836638 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068496822 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067334137 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069558748 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067238491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069406148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061827726 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067615095 seconds)
  done (took 2.526404675 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071028984 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065828429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073212411 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066753381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065617626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067747036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062609431 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064426463 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064572701 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065771467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065723791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068284197 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064369446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067726336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065627194 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065669441 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067896768 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064829955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065571583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062010237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068044241 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064565137 seconds)
  done (took 2.757124073 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09238508 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081191869 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138100148 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078882264 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083139251 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071284273 seconds)
  done (took 1.845735617 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090348456 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078048328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066330399 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087451259 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072885337 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067025383 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066887265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067237243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075680795 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075943257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067463561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075870716 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076012637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075232207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072930906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072891726 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067237751 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06677325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066252288 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083527157 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067394845 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075414767 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067496559 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066847104 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067193154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074897455 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075578455 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075935781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06722897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075651246 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072667005 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067346676 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075713942 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075450295 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068900802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075549617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067301096 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084122461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072771772 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074962569 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068669356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073758948 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07557245 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071699815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07537668 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067314157 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07193323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067394332 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06761373 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086066819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072964123 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074950768 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073094923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076335388 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075971156 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085791492 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076168196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075112899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073507306 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077997717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075184292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072817951 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074849871 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076051695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072832702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074606718 seconds)
  done (took 6.159080632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081072778 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085665688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068133721 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076345656 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075082436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067307393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067292247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067278592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067307549 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066983568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107356642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067748844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075232283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075154405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067598411 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067232353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067220223 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075014103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067399863 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085989456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067198245 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075439514 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075143266 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07502527 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075978269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072989669 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06744809 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067685838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067306988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067318284 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07214874 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067648416 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075607727 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067069075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075228483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067667277 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067698127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072343773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067247168 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072859415 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075102576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083672956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067120821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06676186 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075718302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067161774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067465972 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067037478 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067276763 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06671574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075981615 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07593637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076064211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075186486 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067789793 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067781595 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067564218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067525571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06752084 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072694438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075057586 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066869756 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085751827 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067557457 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067221365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075307724 seconds)
  done (took 6.071881211 seconds)
done (took 127.312745701 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183894266 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168597955 seconds)
  done (took 1.651825343 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068153956 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095909347 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076969349 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128617658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066179345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099449873 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09832603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07825917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066423476 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065912774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066167977 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068065256 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130391688 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066514891 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066359427 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068029475 seconds)
  done (took 2.620877586 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096847354 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157465349 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099570382 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065118438 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096665374 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072474502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064666507 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074748556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070961859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06502016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07248628 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071118441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064903659 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07042559 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07096751 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072454002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064676439 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07269998 seconds)
  done (took 2.734850272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099818817 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091219431 seconds)
  done (took 1.509650898 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157939182 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105018259 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143958571 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342584753 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166219713 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231880533 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12910034 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129281124 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11948363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124351864 seconds)
  done (took 2.964269835 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097940059 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149941215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254920372 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114923713 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072150247 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094050631 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116401137 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07700738 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080350929 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080339496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080543829 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07592047 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098722545 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07337217 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073582262 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07600708 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102959892 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072120211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073740437 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076887533 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09922202 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065762755 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073106761 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072372116 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077499135 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077311424 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065625464 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065294339 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076759312 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073499936 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076743662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093263657 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077282009 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106257044 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069995939 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107214202 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076100469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073817111 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073705369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074136507 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078480307 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078762166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071694437 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075360081 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065062689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076443999 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065270653 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065462752 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078245875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066935928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077912539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076734024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106000271 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066328829 seconds)
  done (took 5.904912579 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100170808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10398797 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071008429 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107932393 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097006003 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071378422 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100074623 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090245161 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101495067 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092202724 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088062824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07047492 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080902594 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082539205 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108728178 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100851155 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095846318 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070707591 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100785683 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101816441 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068520093 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094555952 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091078373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100970282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067473243 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069971201 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067869534 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070542808 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076309069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077884052 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069807957 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101237263 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083644548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077652719 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066722068 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067886937 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068129424 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078579707 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096928436 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078112757 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076948158 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067246548 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067883253 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069727128 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090739052 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067139038 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078209858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079110334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078004813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069615925 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07033808 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06817207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069902565 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07915186 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076806787 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080295622 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080031051 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068603454 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068552752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071843113 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080592074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078378981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078311186 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09171954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078373415 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068240535 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079657273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083990661 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068455819 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069821979 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068820665 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069876334 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069633095 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077287717 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077744484 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06998645 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069480429 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068266308 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079293094 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07739257 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067747824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075968331 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066799216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06823108 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069675275 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069236979 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076641283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077900163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068592341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06709746 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069405345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067190451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065505827 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074292314 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077357618 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076118328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076754542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068505292 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076853257 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075388106 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06849652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076792078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066827968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200489555 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073759442 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079148036 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078906811 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07927423 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069964937 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06941336 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078140554 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079849774 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069516488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077929407 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080664997 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078751284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068067257 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080709174 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06967863 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079879752 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070074182 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080376188 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069510463 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078633493 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06920672 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067893062 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068877902 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080052123 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071445245 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069081186 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070283036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070087723 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079021118 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082269793 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070889008 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080776325 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079388575 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071159237 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079039818 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068852101 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07946102 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070245392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070474673 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067532026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082437881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069092978 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069197722 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069359733 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080041929 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069205033 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079515448 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077608451 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067658399 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081569965 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079702656 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077349524 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079039926 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070878148 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068534361 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068625039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069952134 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078021795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08027179 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071209644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068690601 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077324732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07988032 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066863149 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077623909 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077616037 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077946512 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068570804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069464913 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079670461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080502023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077722872 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077807036 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077807828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068886437 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076791285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077544978 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068607421 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083161859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067804273 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081278137 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077729272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075323075 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077512683 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079465251 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079064433 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079550178 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081905561 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067324613 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067605467 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077992464 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066945921 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068312203 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075193295 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068627486 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068682634 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080879927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067022437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077429743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066229326 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076235351 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066111944 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068942647 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081316139 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06711823 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068761222 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212156315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072581721 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078398706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081862083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080027068 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069369163 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070844942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080996451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07937669 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070387549 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069141831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070993066 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079193415 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078027602 seconds)
  done (took 18.655890283 seconds)
done (took 37.365319948 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208984087 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151011266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182230991 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118286611 seconds)
  done (took 2.085296139 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127871558 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100489221 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094766195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065402518 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101710847 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06485864 seconds)
  done (took 1.914962459 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310255744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210262347 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181705944 seconds)
  done (took 2.060243797 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197308785 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187392596 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39687732 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252834401 seconds)
  done (took 2.501805261 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14474106 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08991344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066848009 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083389666 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134063976 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161267605 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101104341 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12570495 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078030457 seconds)
  done (took 2.397132509 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147453476 seconds)
done (took 12.46837974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101223134 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082371894 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077530663 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196878389 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074041722 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.1953325 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081685958 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.160800323 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112165312 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077307489 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197908603 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073688236 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108816896 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.186691988 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149047437 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152852639 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077467755 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0620821 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157013492 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207890377 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077344397 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072282357 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111176569 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193096884 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.147910909 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123563385 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06808966 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074612833 seconds)
    (29/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1498336 seconds)
    (30/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132745125 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106318002 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.158164491 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076544166 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09628679 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152038012 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105775505 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155459357 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18357462 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153966615 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098120536 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070897067 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194323117 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.219717547 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072775758 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070199694 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093845823 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078328543 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103101314 seconds)
    (49/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051596944 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151522553 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089302369 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146404807 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086289613 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052823326 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093896807 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072903929 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071975164 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071492391 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07451008 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094396273 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154339975 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06644705 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072323371 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061683171 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095593987 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081870539 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.128746472 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149794038 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09940804 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164812427 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066571095 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06489423 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106003472 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066229296 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116330728 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161583665 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06960751 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064534751 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147423508 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08582058 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.064753312 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.180756398 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051912194 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.301376989 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077130651 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074625124 seconds)
    (87/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11884252 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052313817 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.151139385 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072278186 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065180042 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066297426 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073319383 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052024397 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053183486 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061128976 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066488813 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066735828 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072742345 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072387985 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183990691 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 0.126356073 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052868552 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095965105 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072974153 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073162794 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095266634 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176107914 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109333356 seconds)
    (110/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060873946 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132138158 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072288434 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077031003 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067949256 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051864407 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083232021 seconds)
    (117/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061858985 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066051662 seconds)
    (119/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105361172 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051247891 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068223063 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071465451 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077992056 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052305451 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.134113164 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073348416 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183705583 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.322696479 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072062213 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195701066 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086947693 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070959764 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065928385 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07137929 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064943642 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065758595 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.147948237 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205436291 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051341502 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147527394 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085335896 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070918488 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06470744 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064993289 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07112072 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089250739 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169311492 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064481555 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072073336 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09149383 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0910027 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065388718 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134190857 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063780269 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088218037 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174070949 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051088623 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050851836 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05156631 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072955973 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107902092 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065072625 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09588709 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050679651 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071730265 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 0.138138238 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147700604 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051944717 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078157543 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05196258 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07383264 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086373235 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071433445 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067088124 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064567767 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071619675 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064732645 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07503633 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111273765 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051975321 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088377688 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050855341 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13847019 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.097804053 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093919309 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089230379 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079745524 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071102007 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078171333 seconds)
    (190/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07690489 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072455517 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181394627 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075067669 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065334739 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064141849 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050438409 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.262923781 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175182946 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065813596 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198801321 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.149150796 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075643366 seconds)
    (203/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072982933 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05128639 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087368018 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061884069 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064657072 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074116563 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07210266 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072619129 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162209094 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065063349 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135516401 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086704545 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086716333 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051453144 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051666687 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051203526 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051788513 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05140635 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07105691 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051292097 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071919456 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089727789 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05338181 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067474662 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06411812 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086349564 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064259591 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119677661 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158779012 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078599159 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065344208 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06721059 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051066805 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.12888423 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052733196 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068488859 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087061729 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051325827 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142792639 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053328595 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075459445 seconds)
    (244/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067157378 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062920228 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050922575 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066200712 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065129292 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079814631 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072996872 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052457009 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052697366 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05200478 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064994165 seconds)
    (255/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068973724 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064607315 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050920426 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061560557 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071568953 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051600688 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052042175 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051128388 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.133331302 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064498968 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050869393 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072425445 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125558512 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067343854 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065644208 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107663403 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064575886 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052230171 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051282008 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098369251 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172021237 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051326462 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.14941915 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053269432 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07166909 seconds)
    (280/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061217678 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052967806 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072632306 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063898055 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064073103 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 0.126718517 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07229256 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07458218 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172712192 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065298522 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066222951 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065357306 seconds)
    (292/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060067029 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105897655 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069694918 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05078744 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068017505 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077334124 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085072278 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088556411 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053566098 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159930454 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052349829 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070340375 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08888905 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05381507 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067212123 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051535826 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073028695 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050902182 seconds)
  done (took 30.291143752 seconds)
done (took 31.663659539 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086227386 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093072758 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075046713 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092633704 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08111002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076470287 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072103694 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078086395 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079494017 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080814616 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077936915 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05451207 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073676344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073939902 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07452759 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090794958 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077618772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071945833 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072446369 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064039786 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072397951 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064942694 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066732261 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054333507 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077245692 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071443178 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071891962 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073099762 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0650374 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06532734 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068410539 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072517497 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065097495 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077074912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071507753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072311306 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073820611 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075891152 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066836548 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065315407 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073310544 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065839542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072321417 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07299612 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071497687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070583246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072473102 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077265483 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090413684 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067631715 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073600639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075449439 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075565414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071869718 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069180257 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072197457 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069951983 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09067852 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072626272 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067564378 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073525896 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072823159 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070435071 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07219613 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072484405 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074710385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075055446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070378851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073624314 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070580302 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065059369 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072109834 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068454388 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065526806 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074864794 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076133529 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063832262 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070656537 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07201114 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071139789 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064565332 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067511872 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066544724 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071165077 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067087753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054478025 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068340035 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071161711 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06421471 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072872172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070752374 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071128622 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066342874 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074416213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064134033 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069796505 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064721364 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064671434 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066140651 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068594926 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06456527 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066556101 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073533114 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065918516 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07007182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077625007 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064329156 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070353071 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063467816 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064027737 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078469366 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073937335 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0649328 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06704727 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064051392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072169188 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063851232 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064326298 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064341558 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064084659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070072998 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063794356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066296427 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071028143 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076290943 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06376238 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06709409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065991006 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064168836 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069087017 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06377419 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063717416 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065725072 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.198306948 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06883696 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066924005 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073823198 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067708785 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073499042 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067861194 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073184153 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069392101 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071390047 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070782558 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063741261 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058491957 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067103856 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06780517 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067217605 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065856363 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067047379 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064665156 seconds)
done (took 12.357435742 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066424229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142259046 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09807404 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09414349 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08532522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066634097 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075548714 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100777988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067630561 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101548154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086365304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084389709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111542163 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064230435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065462618 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06948351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066583306 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081376461 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10026919 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085959965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108439048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0652435 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093747692 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089023732 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086077242 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100763553 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066456697 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069567075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068791612 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090685134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085951085 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069043251 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066249488 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099777239 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091983458 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082579735 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066415795 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081648523 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065993436 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065533118 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080662868 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097728401 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079410866 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079310213 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069284195 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068785233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06692953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082892995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088259004 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078300568 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085826339 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102556906 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068158745 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065275815 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064528459 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084369129 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064978616 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067852002 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065877351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067866839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065558207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068454539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080503693 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085941223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069338347 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079591358 seconds)
  done (took 6.749751115 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082692244 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089760122 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082303446 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083079451 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065499436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065709247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065668818 seconds)
  done (took 2.011124995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066801763 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088852348 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087729475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088762419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084248166 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086503877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075165828 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066065833 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079630665 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067375806 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086463223 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101125922 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066626869 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072397382 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089897901 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066104163 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089732599 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066028911 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06901252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089178236 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068049583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081732134 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069367778 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06667638 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080379639 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066677066 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112668286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070549876 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067692548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069034945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064178064 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106219589 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07995571 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075798774 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06626413 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080370276 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080948819 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064304935 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082052286 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07087874 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079863584 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06639202 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067202986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064110538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070171317 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076076824 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066816802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066509734 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068112522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085321795 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066475188 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079610722 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069487219 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068694112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067518973 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069555158 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075411985 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066834145 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085382701 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067377587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082585149 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082147624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079740015 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082200974 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068803651 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079800887 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079938607 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068965285 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067906167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069861866 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082357893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064907291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067791969 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077159821 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06801818 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088796799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088564991 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067583531 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074866233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066555413 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066285606 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06634974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088248794 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068648234 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066089958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070097263 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069371366 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064614639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065278547 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069606222 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064169014 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067306128 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068717217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068846289 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068331532 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081753802 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068072163 seconds)
  done (took 8.694691874 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068651219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067979366 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069091164 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0674436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067481619 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067607029 seconds)
  done (took 1.909169813 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093312552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068980382 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07981853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072561003 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103674808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08594588 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08676829 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078130091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08319473 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078544599 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086504003 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087637462 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092127037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072213648 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086642708 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071457121 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086930156 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074954451 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077929526 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072857629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086567054 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072457761 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0726379 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081493915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075237511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071794756 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066878472 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078681797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078571126 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078123185 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071877971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075336989 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069782115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077705865 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086304214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070187808 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071409897 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076970935 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072305332 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075193416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087154159 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0725227 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074203157 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076325649 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077754534 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070103146 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076867744 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075697692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085518469 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076500573 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07637907 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071165888 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074631207 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076622514 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070312988 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077764876 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076508274 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085905806 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071710078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069658639 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068277572 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07513715 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07698699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075259906 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07793654 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076791545 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069676996 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072185511 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072694559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071160151 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076439008 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068498278 seconds)
  done (took 7.033066188 seconds)
done (took 27.861272143 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540445167 seconds)
  done (took 2.008983348 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593129247 seconds)
  done (took 2.085287429 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.651619699 seconds)
  done (took 8.138211012 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393445847 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490610222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690983885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12999854 seconds)
  done (took 3.237483254 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672904342 seconds)
  done (took 2.168587017 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208155587 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195146608 seconds)
  done (took 1.910114972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373810204 seconds)
  done (took 1.861825476 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101933113 seconds)
  done (took 2.591013108 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259333976 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162445517 seconds)
  done (took 1.918617441 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459240857 seconds)
  done (took 1.950187011 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.830322316 seconds)
  done (took 6.32692312 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212325263 seconds)
  done (took 1.745921489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237870575 seconds)
  done (took 1.727003427 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70101765 seconds)
  done (took 3.191322674 seconds)
done (took 42.3587635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080475684 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08193563 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081305104 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078176599 seconds)
  done (took 1.801921864 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076332883 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072504556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076890814 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072308523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076859878 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072657875 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074141802 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077020086 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072236959 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072576449 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072795709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072111846 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074926362 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074269552 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070899337 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074568033 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075529703 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072619644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075597449 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072182641 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070638152 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074635372 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074704715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072010276 seconds)
  done (took 3.26708001 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077555935 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072356662 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074226903 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072161667 seconds)
  done (took 1.797859762 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077341946 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091993189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089431286 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077730759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092465336 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086372341 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069289487 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069261862 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07381797 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077197407 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067881879 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095439294 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087544187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076704573 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078985022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065826338 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068472533 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086920268 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07720612 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077740369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069990924 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077673375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068110069 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088288809 seconds)
  done (took 3.3893498 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077098927 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103630395 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077398405 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088053568 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090090582 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065441588 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074913591 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089129857 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122924585 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065317294 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069990586 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065229938 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072145452 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064962291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076093725 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105037371 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108250656 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068486216 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095549778 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065273155 seconds)
  done (took 3.152816775 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072546977 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070003458 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065893583 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068513076 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078588478 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073155192 seconds)
  done (took 1.939261199 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067834487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06719859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06728643 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06665429 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072064607 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067046671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066338985 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067072272 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067637332 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066919679 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06668729 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065968481 seconds)
  done (took 2.315018271 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195491343 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068903279 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06985714 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065920759 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070591791 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066583258 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079684307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067881464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090289861 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066156567 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066845337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069102975 seconds)
  done (took 2.485243951 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205148323 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076291052 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235666315 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137122796 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111200822 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115175606 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104039053 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112914036 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142700714 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101956837 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167040897 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165351408 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106954231 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137358675 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089256766 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097668269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154506203 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16219266 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103212301 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1650352 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143658688 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124288342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146678363 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100841437 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105604075 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121756398 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07099475 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080089355 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170268093 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13093491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145866104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110719697 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092906321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174717841 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169825042 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140616053 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133877477 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084099354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102842282 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134012209 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199583575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087824133 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160299053 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247791052 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083007169 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134494745 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11962415 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120638766 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106793807 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090467125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145379299 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188704848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137496703 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086592445 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11214522 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114831575 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11555861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103710141 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181064347 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160476559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127336184 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071339728 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09984507 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153416861 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131692666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108319473 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125444011 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093469083 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134249352 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154227807 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11867856 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143487166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12823893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088458715 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118710404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139354896 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127696244 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170063581 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124358951 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072770744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123609162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102402132 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08101712 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14177352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07513375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17386724 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097754775 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105518431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112630524 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10830855 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108802278 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159411734 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139881912 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245744051 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067264462 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104171315 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12074116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147796725 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087869368 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10924247 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11662579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077216708 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138823814 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075101782 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12306805 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075899623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124763336 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132980176 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076029846 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121330298 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101509503 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100398609 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133210627 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160123315 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089318066 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082802266 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167166596 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122472719 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10481908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144341925 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155654943 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099148638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102844112 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149151815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178504814 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08939405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162430942 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107329363 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083881674 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087423385 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123602487 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111927311 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121958291 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081782173 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117655221 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166709458 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074661969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094193053 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132304832 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078550593 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080031788 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102672735 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099594605 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094603829 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099590452 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103661854 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135587926 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121450102 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102434869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27010275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099364465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170947779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08922573 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101165963 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104147348 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070523694 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136731859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157552932 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079257443 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164129173 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124379452 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105268092 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118706297 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08318495 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140009154 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079242365 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07033341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144281192 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111227856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110849541 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151181473 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104267889 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126802114 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120345687 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134880562 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132101469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129523469 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10503964 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08856673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111378763 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12502427 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073251868 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091452865 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080032666 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103869692 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095717483 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083364365 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141706424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124214141 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100014123 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110920729 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095802859 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145859963 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075884322 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127448481 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118030367 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093337206 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150467998 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151075409 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130838549 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098666476 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14339748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07001729 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073183974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087194574 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269677731 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084450949 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084752118 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117235147 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147157025 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130014963 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138015402 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111582478 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120747179 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15358778 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069893743 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115925061 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148284127 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121922749 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105300829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090126023 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099198454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142623615 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108517433 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181349813 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114607045 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126708908 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152654407 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099651736 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08016169 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102876333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135801222 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104666022 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144238375 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099804389 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087437344 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109699395 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074271404 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099534932 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126848155 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119018089 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135157642 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114088631 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131183307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076627472 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115716578 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119015641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120969289 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063998107 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118834779 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159891583 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093514884 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118164078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151991749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07876075 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123416126 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322439809 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146881737 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085920303 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110046987 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119734347 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128396628 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120697093 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140415109 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107886404 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135291503 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109081774 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085467008 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087946625 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09806751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10479976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094882368 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108162947 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11500854 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095398779 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13064249 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102798966 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109561394 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117941419 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096605807 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089325408 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09680395 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173882964 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119490422 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17173364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099398708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144674417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162745515 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075178884 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079612997 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078054614 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139351612 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083716129 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130777749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097788261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105547394 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124839065 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141721023 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094986164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068284693 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107899069 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133028929 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111498235 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097513127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103277615 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161618052 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099985789 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078908355 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113013694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104238729 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10197393 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167541059 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060735942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243555886 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077757052 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08217256 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127547676 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152231603 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080472613 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103007044 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119115062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110552146 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127357449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101239362 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099245794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114865568 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148902262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128973373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09032504 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112696779 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129702231 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156139793 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105616794 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095368811 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171383623 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169374288 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159826501 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088806132 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114560864 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114298423 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108085728 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141899695 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083478251 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162564378 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081962863 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135753904 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103554177 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089637441 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12950903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098936289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088424524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147212135 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116573773 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082297865 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077304854 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116835943 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11892824 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105465591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074782589 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137581821 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072856386 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131282825 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168264684 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080906012 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103463815 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0947831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22764079 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109850196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103862788 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090015654 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09950232 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174014318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088912047 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150150578 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141435513 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112541641 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136485627 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100173454 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635738882 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078316269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151724495 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116685655 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172355074 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098056128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11805122 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109449798 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124005557 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145379231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104743819 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179193045 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131739007 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11605615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07957772 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102386669 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102557368 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088630557 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105092427 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113472658 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115723846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09364803 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116082875 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123040535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082364442 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095124795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155906865 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116193947 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142460595 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138820661 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084488766 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117012626 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137119018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079661519 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120570987 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150537198 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105607341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096944591 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07941735 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098927609 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318097499 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074330178 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163517799 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120342657 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110483259 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114222272 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115086335 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131419675 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107781408 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122119001 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094402727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110201328 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112655583 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082138372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077086394 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104786323 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112299872 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097805077 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099316729 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098617347 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151331342 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071946043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095889772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103502041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144586332 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174438181 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088160304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082515942 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11909126 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112171693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11314141 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120536067 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07925044 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082282736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081879801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077235029 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108136206 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112385467 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104204826 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111014255 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163434155 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082648696 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226647818 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095086818 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104551186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069652401 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077847527 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095008301 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09650376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107188704 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100334643 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168353759 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093761305 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08878325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091454863 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072520634 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081872552 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126028603 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256471559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120472909 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097968384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06284768 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108581851 seconds)
  done (took 58.76103672 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109074666 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082218658 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097523212 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15064466 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122735389 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211765324 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157191412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199394613 seconds)
  done (took 2.754849831 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068643442 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094052414 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100805367 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082955736 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067273926 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069327255 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225620086 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081028243 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06855441 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088669872 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079140206 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070201729 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419348949 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065990828 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068416401 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063050675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067952128 seconds)
  done (took 3.396571802 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369594965 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601431578 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372760302 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073316703 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.454459663 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090886723 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.070684512 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128801907 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073213474 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526755453 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704340026 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126171704 seconds)
  done (took 18.215757456 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075789119 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069202098 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083860546 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083728421 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072001996 seconds)
  done (took 2.004495481 seconds)
done (took 106.831810474 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080410078 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.370173989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053905435 seconds)
  done (took 2.072417434 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083514803 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084915021 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084870621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082805768 seconds)
  done (took 1.962958242 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074692624 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076775666 seconds)
  done (took 1.77162747 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223565593 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13953747 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087210316 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082119395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078230899 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078669014 seconds)
  done (took 1.871525981 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072355006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075973274 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073488236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076465621 seconds)
  done (took 1.92559943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076596601 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053546334 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055349476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056625069 seconds)
  done (took 1.869702809 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086695145 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079486105 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078075782 seconds)
  done (took 1.874556425 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107939402 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085012484 seconds)
  done (took 1.821533552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081766277 seconds)
  done (took 1.710392328 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098866781 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114036961 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128760007 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109315903 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136289843 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10874157 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085616309 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086273348 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076870825 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086903379 seconds)
  done (took 2.659633572 seconds)
done (took 21.689306645 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079299844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366864638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360956641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090781359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669470014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356285948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986679171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092162094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113348701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067786546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083823178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649395388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980299266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319740243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965243496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324210528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65005768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067912289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067938191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068306337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974403144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067495472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068084718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068262248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649005884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370781376 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068602043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324416871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067628722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069539248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354830796 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067962102 seconds)
  done (took 16.128106074 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070847213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118068571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073819168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084589371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070530488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069549514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071797485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069149475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119892389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068541144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084654751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067924501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071755539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068718574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087428125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068069804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068772511 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068919317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068771801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068776978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086496223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067947564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06812359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068750563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068572399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080233697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068950812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069389164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068594293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070354536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071559144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069295548 seconds)
  done (took 4.042475774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115299318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125330914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074136278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10453401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112841549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070581821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143918562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092829508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127649366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068414543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084528962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068420002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101436224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069268964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087675405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068759626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069284381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068983075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068626956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068753499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0877153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06853352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069036298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069192345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068893143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081789726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069093731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068901977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069117322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070472222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07208389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069067667 seconds)
  done (took 4.300879083 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072572888 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075903856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082840548 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083506343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069911201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072255615 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073046669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070099538 seconds)
  done (took 2.247372806 seconds)
done (took 28.353360266 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078569412 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069216203 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072169766 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081326411 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073134995 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078666857 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067566205 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074968948 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072209919 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074279827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075991834 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067740556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071490832 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067407549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073861191 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068260381 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079365585 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071808944 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079086427 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079801111 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070471691 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073296674 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074496726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079308103 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079860114 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079869739 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077194277 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072680074 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069554673 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07044893 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077139043 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083823671 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068692018 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079245284 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067971732 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067871092 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071654195 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067906519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080310922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076490035 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069780614 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076478035 seconds)
  done (took 4.735076162 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087674181 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0907109 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08418075 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061921858 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0664515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064760376 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088400454 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05954617 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060239649 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087406939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05580638 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059642243 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062556118 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054167431 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059180783 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05681725 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061819633 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055588487 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059265512 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059865379 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058183449 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054487265 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060630047 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0627394 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059126107 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062016143 seconds)
  done (took 3.344642936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074284078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084601741 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088874832 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126849409 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104252433 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077077418 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077938351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09202821 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085526391 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066883818 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071361072 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093959891 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088969729 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074047584 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067908913 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084997431 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081980077 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069440501 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073456755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090720931 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084240018 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083639343 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092483472 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08099342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06679044 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069644539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071082768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081071738 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072467748 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076171061 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071359416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07092656 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069591508 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078676206 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070904755 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069038517 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090344947 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077555207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078314914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068325021 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070872597 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068496624 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089579052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12347656 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067262594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074280531 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075366437 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076402664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067488284 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086230863 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078708949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067469009 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07033087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067338897 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067901515 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080232586 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069628413 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070234479 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076655462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070166318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085872627 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071388411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082284622 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067323395 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075473182 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066802111 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068320351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06637317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092637753 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068896203 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108739284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068695917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068469847 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076234106 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074897853 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073525773 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06796563 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082513925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0892581 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071205881 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076038523 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070831377 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070464548 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087753463 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070061511 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069063771 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068800651 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073717362 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070526568 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069234525 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080336573 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067973105 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070328952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083919912 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067287868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069158663 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073270327 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072216843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06718311 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078150298 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072076816 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067801321 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076591609 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067472403 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070429805 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077519161 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073603905 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06643809 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071670226 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073434317 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068133937 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068724796 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070166726 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069117146 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076867213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073741833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071878154 seconds)
  done (took 10.570117692 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161087834 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154539753 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071035548 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144982766 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07672493 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079351543 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147514883 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094540178 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06806912 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069244427 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069193143 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109822087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105941217 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1149977 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07873546 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067791243 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083666164 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114110576 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149989826 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143761168 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083796324 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076944867 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069910307 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069465148 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070848356 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07903238 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08621498 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077185902 seconds)
  done (took 4.408570968 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081410856 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096518822 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074513593 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089272574 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091127635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067933507 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070171633 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069659568 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080390413 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078823868 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067907082 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073738557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07545457 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071084762 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068871854 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075298365 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075409015 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069489696 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070887263 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073433031 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078030193 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092084832 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071976342 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067685115 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07433362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067533165 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064712313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084493855 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068720614 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092020763 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066279375 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075695714 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081608407 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06881084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068018343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068189765 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067869284 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06753855 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069733063 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066195024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066216552 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057630072 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067429922 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079304561 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074078794 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056613527 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07262951 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073252074 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073096243 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065362394 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070848327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070788827 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071028188 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074861693 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072692097 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073650878 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068941797 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074017283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075529668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068075926 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06497514 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066631068 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072224973 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066241289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075729298 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07251681 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066556452 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067692106 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069748971 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073911882 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067466389 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070699417 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064899356 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069587784 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072046575 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06932578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068750568 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066265694 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067623802 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067679051 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055572855 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067532648 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053665981 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070614671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066094478 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066290322 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067160758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072342612 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079529908 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06919347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073014141 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069038205 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066830415 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07051447 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06042273 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070436797 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083120371 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082621985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067928227 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065594583 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08199122 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07231692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066416496 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056279941 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074820046 seconds)
  done (took 9.173554771 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090114768 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06991841 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083836503 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091736237 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086638727 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074624924 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076828613 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06904722 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082224262 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074027286 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076408002 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068606056 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077484289 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077240123 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07015593 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077358645 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07201384 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082758521 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082254158 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068399718 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076234381 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080117091 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089522074 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080801508 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078816373 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080198206 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089874157 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072858601 seconds)
  done (took 3.89158196 seconds)
done (took 37.760959449 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.724456955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.899477612 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.719920477 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10245131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.913834894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.745693857 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.85840253 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.715556284 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.967877241 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.761928919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.977681282 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.768449987 seconds)
done (took 64.816451788 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.764590081 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863340084 seconds)
    (2/2) benchmarking "String"...
    done (took 1.990506402 seconds)
  done (took 5.514708816 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.018800332 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.252485874 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.96645662 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.715587603 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.721826007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.01532575 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.520425763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.244976343 seconds)
  done (took 30.097424077 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.852557295 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.956739408 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424660252 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.430655464 seconds)
  done (took 15.37191948 seconds)
done (took 62.511858111 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.736250192 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746783024 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.727221781 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.702877574 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.776021021 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.737357796 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.77291891 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.917996472 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.717726998 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.711088445 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.720787381 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.150074941 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.721192366 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.805975787 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.718336323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.724649885 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726440316 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.120685101 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.875668477 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726586038 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.722564413 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.728766585 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.720833121 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.726193016 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.767943791 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.720920078 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.151964901 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.720221475 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.348916054 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.719034821 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753590889 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.986280659 seconds)
  done (took 202.563391695 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.71956779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.747941468 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.809742994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.755703618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.281573608 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.905323198 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.81621013 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.318935355 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.725620931 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.722987507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.856678677 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.719478782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.884977677 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.665988685 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.751856127 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.7248512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.920848164 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.902928663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.754208151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.888376893 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.746182506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.702995753 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.657781973 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.847252857 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.732219169 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.74901282 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.882822372 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.732430283 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.917323248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.889030959 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.745739238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.724919266 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943132931 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.593837559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.730241238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.723726182 seconds)
  done (took 167.856987091 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.110300675 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.721629131 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.72095388 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720355737 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.732198494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.720191098 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.849602663 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.720637239 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.185665648 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847949667 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.045850394 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773491082 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544927981 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.721873502 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789856801 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.734590164 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.72573238 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.737801393 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.74939025 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723607828 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722669595 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848584147 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.733907839 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.868079107 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730974839 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.723240468 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72895757 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.093000439 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.722080696 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.723046729 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729055182 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983105841 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.723603608 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722373729 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.618651722 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.368709059 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812940215 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725095671 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.728404684 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.722967551 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.94272725 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.723863735 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.724028023 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.725954844 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894981702 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.72310362 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84900974 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724272008 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.220844769 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.724874137 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.723449452 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.520287676 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.387330839 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.727024907 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72387558 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.726194036 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.723162945 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724169366 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.729698427 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.556781261 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.797902681 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.724707824 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.726910439 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73033178 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.724735757 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844819368 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723925047 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.284276651 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.779342306 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.846304661 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84629875 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727626914 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792312683 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.818253124 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.725003543 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.724782572 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725341123 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.72409177 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806319062 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.725500534 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.724746247 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.847788259 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.733903046 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.726394761 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775441799 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.793851684 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.725360218 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615255334 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.727807646 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.724993224 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.031308461 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.726199031 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792649447 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.726300132 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.72638777 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725572834 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.847934851 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848196978 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497776672 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.728400078 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.535336646 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.729192299 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.86708023 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.727251923 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908903009 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728830535 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809465612 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732480797 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.728586498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72708196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759412309 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.728622602 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.784362025 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.731309984 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100819677 seconds)
  done (took 396.713254658 seconds)
done (took 770.960569267 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.378914548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.343470294 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.468579512 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370604914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.348698769 seconds)
  done (took 13.580371561 seconds)
done (took 15.248740029 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.813264772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.818248546 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.753072617 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.815816095 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748787063 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.815456322 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.797975302 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.752872671 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782493093 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.752642482 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.785773799 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752607176 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740540026 seconds)
  done (took 24.798805555 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96135616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.957880964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798455176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95678483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773577459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958129799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887659034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880525756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.878164077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.743619262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740408585 seconds)
  done (took 22.207265972 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966144783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.968105484 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800696349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.960532237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775214691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958348263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896493919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880871009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880959494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744145397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740924327 seconds)
  done (took 22.243076593 seconds)
done (took 70.917923722 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.738707707 seconds)
  done (took 3.410335313 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.759664592 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.895989996 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.743655231 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.740520552 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.740280324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.739327232 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.741828638 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.738288316 seconds)
  done (took 15.771706498 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.737011623 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.734061501 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.734196693 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.736235796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.736994028 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.733623634 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.734108631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.737772781 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.734930289 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.738570854 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.734535143 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.734517502 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.734817759 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.737677343 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.736245709 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.737364781 seconds)
  done (took 29.444597904 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.737531174 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.734400707 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735894654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.736857986 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.735143898 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.7360737 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.735532332 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.734745455 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.73553761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.734690732 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.736122349 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.735668227 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.736996415 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.735640389 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.736867864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.736520876 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.735516298 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.735831533 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.740231782 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.73586685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.737396177 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.736965128 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.737292898 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.736902529 seconds)
  done (took 43.345024978 seconds)
done (took 93.64243932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.607144214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.137945595 seconds)
  done (took 8.419892466 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.741156097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.739865992 seconds)
  done (took 5.1900488 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.738669483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.739922587 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.740560372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.739391365 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.73989898 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739683389 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.737991243 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.734200392 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.73430258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.735177853 seconds)
  done (took 19.054119848 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.734036715 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.735386365 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.732259228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.734277135 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.734710322 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.732156496 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.733758758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735504563 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.734687289 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73230668 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.734507509 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.731840439 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.735606981 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.73290268 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.734633878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.732948211 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.733279561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.732206063 seconds)
  done (took 32.877186124 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.734651239 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.734072151 seconds)
  done (took 5.13934738 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.731214604 seconds)
    (2/7) benchmarking "second"...
    done (took 1.732606437 seconds)
    (3/7) benchmarking "month"...
    done (took 1.733689901 seconds)
    (4/7) benchmarking "year"...
    done (took 1.731438501 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.732192583 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.731819306 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.732372091 seconds)
  done (took 13.795010569 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.734687307 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.908077574 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979520667 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.398655177 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.735103157 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.739161227 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.673582719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.737133893 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.738215374 seconds)
  done (took 19.314835261 seconds)
done (took 105.464854478 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.558886179 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.730807618 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.113077049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.769157213 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.781008261 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.069012314 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.76665436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.955628581 seconds)
done (took 42.411879998 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.785751261 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.193760749 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.198760512 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.362741916 seconds)
  done (took 11.420907704 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71035069 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.238735695 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.927827287 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.403509507 seconds)
  done (took 19.956542426 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.094593232 seconds)
    (2/2) benchmarking "read"...
    done (took 2.089767925 seconds)
  done (took 5.854288867 seconds)
done (took 45.683620693 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731603559 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.728499993 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.731492299 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.728185228 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.728192631 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.730440112 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.728800066 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.728351316 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.731219767 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.731812513 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.730429445 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.730410968 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.731819918 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731024702 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728885527 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728242878 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730239383 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.728449091 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729257796 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728390616 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731033327 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730722874 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.728720913 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.727274263 seconds)
  done (took 43.180440884 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.73026821 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.730542865 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.731740548 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.732017411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.730231642 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.730455593 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.732314256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.728824758 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.731705082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732851908 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729446174 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.727789772 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.73172375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.727819688 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731084267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729544808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.73155439 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728074537 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731450243 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728984703 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.731303586 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728599033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.72836039 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730502924 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.72861472 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729009323 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.731250984 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.731804231 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726095544 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.724808534 seconds)
  done (took 53.56801737 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.731561992 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.738131399 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.727453677 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.716893344 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.718587982 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.717365015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.718666575 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.717613075 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.719304538 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717327795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.716343655 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.71579957 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.716901783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.718072302 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.721515206 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.716371494 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.716588459 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.715047713 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.716335502 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.713925257 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.715055615 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.713384713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.714304027 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.71330575 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.713556712 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.71470401 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.715188403 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.714136042 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.713373371 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.715030193 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.71480463 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.719329275 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.712765496 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.713491471 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.71382264 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.713040416 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.718834864 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.7235271 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.712732241 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.71341741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.713072736 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.712861925 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.713630279 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.715363441 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.714416819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.716339 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.713540835 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.713598275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.715387539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.71858261 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.714757932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.716028908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.71383671 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.714900219 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.715575982 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.715271262 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.71582253 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.716268493 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.716878035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.716425555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.715526913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.716751556 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.717396153 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.717029372 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.715678938 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.715161566 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.718537118 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.716044007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.717463642 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.716292955 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.718076311 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.717110759 seconds)
  done (took 125.253194932 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.715918176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714824407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712577081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.715646289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714533255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.718469941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.715333882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715134613 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714502578 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716205931 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717109713 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717767312 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714157439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716758375 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719487957 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715506803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.718156765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717408734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.71546668 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716748129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715651916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.71547714 seconds)
  done (took 39.403633752 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71884715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.716465096 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.712036528 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71574118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.713386302 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719861542 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.714511406 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715687374 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717286032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712975233 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710558258 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716422718 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713131092 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711879293 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713177879 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.71296161 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716490543 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.71449725 seconds)
  done (took 32.516060253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.711627044 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.71361438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.715607758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.713365194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.713948386 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.716528152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712572266 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.716096791 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.715090291 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.713302303 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.716304156 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713017496 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.714409929 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710990142 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713806797 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711947616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.717892157 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709397038 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712735219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710007286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.711490558 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713209869 seconds)
  done (took 39.343163921 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712956297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712395738 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.710583286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.710247078 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.714470926 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.709773029 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.712420834 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.708866832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.712970583 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.711648135 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710021935 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.711803621 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708984926 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.70964535 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.708920695 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707899134 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.71173445 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708567687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712068703 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.70802236 seconds)
  done (took 35.863050396 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713195926 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71673826 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.714028679 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712924273 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714199212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.712906365 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714511788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.714025996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.713642618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715261909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7131727 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711699984 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713460527 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.715209572 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713892379 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714312318 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713029225 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714125262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.71640714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714306309 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715234013 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715014566 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71406913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714844349 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715736326 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714745708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714944657 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714224913 seconds)
  done (took 49.643894399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711627071 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714040709 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.706948546 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.708059185 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.708870548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.707565487 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.70898638 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.709210658 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710643318 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.70850262 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.710079514 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.711397938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.711437146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.710783573 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711071794 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.710547208 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711361001 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.708595747 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707748091 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711850636 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.710611981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712064333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.710475654 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709214661 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708953941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.712917904 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707742496 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708685711 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709716624 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707580065 seconds)
  done (took 52.943189207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.728040699 seconds)
    (2/2) benchmarking "in"...
    done (took 1.728251976 seconds)
  done (took 5.102799737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.709080434 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710656189 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.712548774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.707810356 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707233316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.712189188 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.711378382 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70931676 seconds)
  done (took 15.324254761 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.710901713 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.712220425 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.710004413 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.710752423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.712999732 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.712419905 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71566446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.710930196 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.711247673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.711511568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.717862366 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.719453601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.713630313 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.709741004 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.710111661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.713232827 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.711103198 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.717373788 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.711833111 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.710414322 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713159359 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712702729 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.712984857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.709242371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.713926874 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.720218309 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.712916521 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.710200486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.714176765 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.712012964 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.708975584 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.708882816 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.713239344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.713588384 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.712428854 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.712803881 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.716560897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70951626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.714830984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712706324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709819059 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.707818699 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.711313023 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.71157714 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.712552566 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.712398785 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.714074857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.705350148 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.708844762 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.714223156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.714527745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.708892242 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.707654005 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713708029 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.710511129 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715864277 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.71159389 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.711708377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.719226361 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.718108487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.720288204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.717445512 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.710160965 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.71696876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.718626982 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.73339652 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716252728 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.708162488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.708263065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.711499341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.715291796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724493539 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.718314269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.710747345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711276224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.710751015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710190033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.711946961 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.715744439 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.713360182 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.712696252 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71380387 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.719746912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730609073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.710621082 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.713004701 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.715010048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.713840931 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.709926917 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719226636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.711798298 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.710057077 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.708472101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.710565961 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.708436414 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.712101396 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.707907259 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.70936004 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.710545781 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.707794672 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710030375 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710909482 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.715253171 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710792439 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712482208 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.712913829 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.709547602 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.709307231 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.716189415 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.70988722 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.714194706 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.710059769 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.714608567 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.708683667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712401097 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.717531205 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.716382108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.71066619 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.711044292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.709587948 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719745435 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.734042526 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.711791225 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.710420876 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.71258227 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.723366993 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710608236 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.711349307 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.71138382 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.705648732 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.706294573 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.711981332 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.710173175 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.710613621 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.713501311 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710573949 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.708456706 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.709837997 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.714234417 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.710511832 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.712841833 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.71075031 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.712823457 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.711924843 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.713935252 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.71373033 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.716656219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.711708928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.711957035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.711934757 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.709144625 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712109851 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.712842964 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.713051151 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.711422704 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.713317037 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.709162096 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.715899369 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.71248779 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.712952044 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.710853386 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.713261099 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715021247 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.715745326 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.713302959 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.713483743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.708514368 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.711788034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.713903297 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.71176466 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.711433913 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.711090397 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.715413334 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.721046628 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.711494726 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.714867572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.714671971 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714687407 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.714576388 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712988434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.716609386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.71952578 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.715663633 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.716706 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.713134652 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.713656339 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.713813895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.711679078 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.71351187 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.716278127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.715716326 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.718654447 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726789286 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720956219 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.714232588 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.717113654 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.714234415 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.718557542 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.719746201 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.715652595 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.713569856 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715639611 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71207607 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71432549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.713965425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.716623684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.713575573 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.71442222 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.713974856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.718095751 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712522571 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.714645488 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715048224 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.71104377 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.71355876 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719771567 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.71345502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.711625934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.712794972 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.714139246 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.714971377 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.716434802 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.720280543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.710824098 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716250022 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713961726 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.712450658 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.713915687 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.715621431 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717236225 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.71498664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718998291 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.716498752 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.719224421 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718519482 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.715142242 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.713917293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.71730582 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.714713498 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.711833536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.716848971 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.723498715 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.71744425 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.718286473 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.718673686 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716298882 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.717134772 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.72145055 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.71459029 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.715438299 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.717031917 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.718280002 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.713097243 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.716432579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.717788041 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.717689347 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72061541 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717176421 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.717412472 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718325933 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.718593679 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.720204312 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.719078228 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718617981 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.72549327 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.720769453 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.715431755 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.719258746 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.71734808 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.718967941 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.718255831 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.718896442 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.717884714 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731042865 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.725265186 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721712938 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.717884804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.717841129 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720332972 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.718923636 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719779707 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71744338 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719085279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.718733972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.717569161 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.715844291 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.718778495 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.718122093 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.719536542 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.7182756 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.723369981 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.719114074 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.7171193 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.720688532 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.720427451 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.717614759 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.716145264 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.720971605 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.72038544 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720374731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.717375755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.717680653 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.723507126 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718542619 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.719627938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.718351553 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.717810642 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.71809704 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.722364316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.720834975 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.719624875 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.728471201 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720773376 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72562782 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.719812338 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727382731 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.721034897 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.721960011 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.727186673 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.717315922 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.724031106 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.719041272 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.722272575 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724729821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.722347146 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.718550293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.72682018 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719782592 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.720078696 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.720575679 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.720141564 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718715168 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.721330071 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725391596 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719897321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.721985146 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72112066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.717569831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.721726138 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.718709876 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.718508295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72306801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.72195518 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.726836993 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.719227873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.71949393 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.719420614 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.72421032 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.720780017 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.722406365 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.720040644 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726610785 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.72080577 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724449222 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.721867456 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.730517005 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.722362834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72785236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.722430725 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.722436811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.723668374 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.722014455 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.722501092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.721069935 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.722620756 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.72322582 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.725225971 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.724153631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.723786985 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.723274179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.721437095 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.724379622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.724187356 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.729809706 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744771185 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.723555267 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724130385 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.719099891 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.726235802 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.729103198 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.724789384 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.721680414 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.723647943 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730296238 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728531263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.721961019 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.724569334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.722729595 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724836132 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.721791646 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.723231113 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.724265489 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.722301803 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.722621723 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.727269898 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72574402 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.721624651 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.724300313 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724931699 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.723872428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.732502322 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.727349183 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.723444456 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724681727 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.722621161 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.722777677 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.724521766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.729457545 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724889752 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723159707 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.724822097 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731711514 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.728834356 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.72948153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.725801343 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.72515723 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.724411443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.725040391 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72856343 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.728023908 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725642342 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.726117229 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.7259519 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.725025459 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.725422718 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.726033761 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.724633134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723861417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727248257 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.731771243 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725487647 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.722578077 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.72423088 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.724773571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.72409531 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.727027785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.735649362 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.729444329 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.735498897 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.732685908 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732141681 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.725796884 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7282864 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.733867059 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.725365061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.725314979 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.727188263 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.728482648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.725746369 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.72852614 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729006095 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.733797529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.725633819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.725043994 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734456034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.727020197 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727533891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.72705639 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.729529622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.727677591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.723347665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.726286207 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.726990822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.732612513 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.728136105 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729713618 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728018444 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.725445838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.726966042 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731432837 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726682737 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.730735326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.72310805 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.728595776 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728963719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726560192 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.726471249 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.726714897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.727241365 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.728859051 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.733266493 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.725146125 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730718122 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.72790564 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.728736702 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729690199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727280969 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.725542838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.726449493 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.727683302 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730550769 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.728464198 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.731893318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.728357721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.729145201 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.730341575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.732316191 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729069545 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.737554214 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.734822515 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.726291292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.726966512 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.730116586 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.731530384 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729343389 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.729859576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.728107103 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.729387238 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.729756756 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7305847 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.727473488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.731559653 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742397349 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.730078435 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728255904 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72894872 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733956129 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.729991429 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.726065001 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.7308057 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.728932846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.731650733 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.736782033 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.735855733 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734185424 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.728825185 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.730550781 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.73260931 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.734920263 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734726888 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.734655962 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732914515 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.730810093 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.73310632 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747386023 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730755673 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738195942 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756365116 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.729316703 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.731382321 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.735775769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731563254 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.732980285 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.731909522 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.735643661 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.728690462 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.734910871 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.733179405 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.731615561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737231334 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.732209701 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.731736361 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.730166404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.73124157 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.732050232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.728376511 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.73270023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.731916015 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.734561038 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.732715362 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.73235544 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.73186104 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742980581 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.745074418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.731167753 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.733790258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.728215801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.735354728 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.734118433 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741143198 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.736990799 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.734439313 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.734265959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.734212823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735837413 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.729743605 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733244611 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.735089026 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732227354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.730515943 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.743875832 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742663608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.736527811 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.732969258 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736622239 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.732923167 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735004726 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.735251073 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734969392 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.73493118 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.733804104 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739971288 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.734425751 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.734575201 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.738121503 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.73974526 seconds)
  done (took 1027.560097585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.73062815 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732597867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733572144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730322151 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730364384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732143448 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.732661172 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731588188 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.732282345 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73292579 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.733161438 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731895586 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.735724797 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.73129907 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.732560049 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.732413962 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73238298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730857725 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73519769 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733081927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731846865 seconds)
  done (took 38.046678834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.73344168 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.733425731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.731090573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.73354058 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732179502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.734043707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731465749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735412827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.736114473 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733310237 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734110156 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734347829 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.7308663 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.73256036 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732712011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733966863 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.736658379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731829916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.735463511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732026141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735234985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732827911 seconds)
  done (took 39.804149032 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.738613349 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.73805507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.734327737 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.732602433 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735681049 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733304135 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.738743013 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.73504607 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.738215033 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737760554 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.736610897 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.737112415 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.741141712 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.74262478 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.738958743 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.735212018 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.880758524 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.738415609 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.73929173 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.740321681 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.733960935 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.741746762 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.73564803 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.734629792 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.735521288 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.740862379 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.736634698 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.738250926 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.737550542 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.736894269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.743084526 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.737195868 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.739310505 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.738162485 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.736621141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.738165641 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.741934627 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.741397978 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.734261664 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.737852848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.746974802 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.754885583 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.739518973 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.744125958 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.736798707 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.736617528 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.738951585 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.748923611 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.735504013 seconds)
  done (took 87.004267935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.737513623 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.738197276 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735469091 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.738556745 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.738491249 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.737167297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.738019367 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739120904 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.735267719 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.735685007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.73949048 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.73397293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.733464162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.737388338 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.737602915 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.736297236 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.736135199 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.73480641 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.735214098 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734473722 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.736222819 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738239534 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.737731565 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.736056225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737342798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734235082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.734729544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737046137 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.735207201 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73533981 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738648194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738976873 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.74076328 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.737735021 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.735506189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739207352 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.736579427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.734746412 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.740833207 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.735701392 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.738874353 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.740162302 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.739970583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.739574194 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740020327 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.738577892 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.738192281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.73710691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737903296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738482947 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.739448955 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.737616389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739612508 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736284951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739304645 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739265108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.73753997 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.737152127 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738099687 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.73730883 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.736443854 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740812423 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.737098548 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.740110393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.738718652 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.737399852 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.737964883 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.742492182 seconds)
  done (took 119.827016969 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.742863123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.741973072 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74237171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742966226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744944878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.742815334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743833509 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.742873188 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.741727129 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746149117 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74137894 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742249994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.743860519 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741944622 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.743543867 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747852034 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.744365864 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745089097 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745878849 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744188124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.744915034 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.746516977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.742997479 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.743271634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744655023 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744023066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.745079184 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.743197729 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744493963 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.744789201 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.745503037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.743614744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.745842022 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.744878299 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.744036492 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.744854273 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.744409844 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744753065 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.745187208 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74400161 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.745319987 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744467862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745011407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.745344536 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746569339 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.745497624 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.745720514 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.74622331 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.742349946 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745207919 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.746883366 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745392423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745808318 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745865496 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.747079081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.745084481 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747436181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746514458 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745034209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.746468728 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746282478 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.744694361 seconds)
  done (took 109.842508064 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745199252 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744475091 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.741810225 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.740715549 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745173296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742575311 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743309717 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.747675822 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743866308 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.743487285 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745248458 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742275591 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740880701 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743824983 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741964026 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742647289 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742776659 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743425565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744287224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74447836 seconds)
  done (took 36.547731666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.74559159 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.746352471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.744304354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744132276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.747515407 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.742875223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.750281675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745509423 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743938518 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747619653 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745267223 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750167296 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7405829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744527776 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.749098965 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.743711368 seconds)
  done (took 29.608792055 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.746291605 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.751042258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.757020157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.752205527 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.7517328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.750659996 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.753533668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.75352214 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.752480932 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.753094734 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.751594016 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.750439851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.752726404 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.754766748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.74758512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.749982135 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.752355595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.752862114 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.752954249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.755390478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.752024638 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.747158855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.753277223 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.756857263 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.750187036 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.750551046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.748921884 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.747679077 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.750077842 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.752738505 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.749471471 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.751083626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.753211944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.74897392 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.760419039 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.750003264 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.752051908 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.750461595 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.753159605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.751034367 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.756179895 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.747933519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.750640414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.755578766 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.752790076 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.755395354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.750268207 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.748348177 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.748090698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.748176132 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.752784349 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.756538141 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.752023336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.754862887 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.75317148 seconds)
  done (took 98.03371282 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753871666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755312501 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750740498 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.751890125 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.75265768 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.751782163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.752584604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755687658 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753464878 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.754765748 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749758587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.754229308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754178751 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754463898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750298925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754100963 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.750594778 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.752150258 seconds)
  done (took 33.236640735 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.753242525 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756632372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.753621381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.758761838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.751638284 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758135905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751561902 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.755531917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755806219 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759529771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750402536 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.757271641 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753751118 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.754378126 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75217747 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75192811 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.755504387 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758412927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.753428489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751908603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.758222504 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.757210991 seconds)
  done (took 40.298509067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.75515226 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.75493718 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.769560027 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.774716307 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.773758481 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.787797881 seconds)
  done (took 12.302224255 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75811898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757160628 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753834433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75579904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762844411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754849793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752372524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754852327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758375674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754857349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753218348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758941676 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756962257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751206575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755156876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756681054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757723769 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752323564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753403353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757023225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754434365 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758025845 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754276572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753841817 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756413911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75728506 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755961397 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753702748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756395922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757560397 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757728627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755777669 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758369102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754329998 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75731917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757864235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753675341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759089924 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75880657 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754174813 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755791994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757472196 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757731701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757149025 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757202236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754671493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755251461 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754874559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757852555 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758402982 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760268559 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756018673 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762093677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759136157 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762033993 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764902787 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756644433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757604171 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760524716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757425888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757740963 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759347841 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757304577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756696486 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759848938 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756035557 seconds)
  done (took 117.644350061 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755484976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757989684 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756827831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758725758 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756520081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757282861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758457663 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75928938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756534226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756734876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762533262 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759011758 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757082112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756608227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756073702 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758304717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758615119 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755340419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757158912 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75953191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761753821 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758951978 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759732661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759019779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760645586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762374534 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760915307 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757391292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760534491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758437259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76071495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759066775 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756954019 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.762753887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758458803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760202827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756397552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760232122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758634534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764091465 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761120377 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760594252 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761535917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760161363 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76038335 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761528112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75934419 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759713485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75991881 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761326688 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761825404 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760996492 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759635986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760276307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759512198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76257672 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763737836 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76227899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760333127 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763793083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760068414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760872127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761740399 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76037741 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760335634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761028663 seconds)
  done (took 117.833313699 seconds)
done (took 2401.398433938 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.78878682 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.855717627 seconds)
  done (took 15.338515809 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.925571919 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.883003141 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.76236793 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.768171177 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.762156668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.765166611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.776076259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.762275867 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.762540713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.764557542 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.762895791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.950261842 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.759326915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.762120052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.763485353 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.857349656 seconds)
  done (took 50.486006595 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.76918391 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.768602841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.777488408 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.770858777 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.766216936 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.778964228 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.800177623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.768518012 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.800600546 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.777664619 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.833018805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.774170505 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.764979407 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.816709455 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.780981032 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.779916851 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.854092056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.835520533 seconds)
  done (took 33.913533756 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84144052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.762971953 seconds)
  done (took 10.30717041 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.783562517 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.75885615 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.76366167 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.786704598 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.765540613 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.767713438 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.764115033 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.767130216 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.761965706 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.774043568 seconds)
  done (took 69.416805331 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.774142217 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.769181135 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.769138218 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.765639501 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.76143494 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.762428169 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.767168691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.767131791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.444980381 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.80011112 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.773846587 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.772397053 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.768715252 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.7695904 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.766017071 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.789693805 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.882664741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.764842391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.76742087 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.773177379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.769713522 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.8433879 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.781522664 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.770387847 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.794811869 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.443271679 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.773995893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.775994033 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.878873295 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.764976755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.770360243 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.770701967 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.771367751 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.15455974 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.071548353 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.764725061 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.775056473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.77884473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.765855493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.910421772 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.770839549 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.774136809 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.762404113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.048701293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.850497998 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.809828404 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.094284294 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.771161252 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77025427 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.798327695 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.77209236 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.773038356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.783579818 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.291713811 seconds)
  done (took 127.112368511 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.763933793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.353159539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926742524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.765810515 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053803771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005307991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.707658024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813005054 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.763999024 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014062209 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.944883587 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.882270245 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764764819 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765080243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.761070383 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.762317107 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.912980293 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.835746474 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.7643685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.762930225 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799019073 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03032208 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.889646175 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.76417506 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.786272763 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992415298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.889849029 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.880993433 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.045200413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.763873984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830474209 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.765275979 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.766629423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763611658 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930124182 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.872086168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86081703 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.765883521 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76450609 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.76430943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.428546024 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98707396 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875068066 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.899707599 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011936041 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992694731 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.412424508 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.765360591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.407705271 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.967047563 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.977542084 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.017790086 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.892520653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.766288076 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.013532087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.762535389 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764730846 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028090981 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996961366 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.876836871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764621 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.766203579 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764291535 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081570047 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.765824076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875283184 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.765915375 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.764271794 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.877823706 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881443098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997314368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007581237 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.796267607 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.48992445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.948911725 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050141402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.837043077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030493399 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.766845704 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765775531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859423662 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.520383983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94330695 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083010773 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029704437 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805542146 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.366238338 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.765193471 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.01355373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015367227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.992916162 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015714473 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.931476393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.894788687 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.767304431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.767672527 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.988526688 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899550591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768534466 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.12821413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015845836 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.515097945 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.797567114 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11352455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90353003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.770898852 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.394967022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769565452 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968205595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.80840503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.768327957 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76847647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.013967671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.630637681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769280496 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.564233893 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.834680129 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.771762272 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032664229 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.769977208 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009632187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771656953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080167894 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.245058521 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810634861 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.962529359 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.015401265 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.55591447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.038591154 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081624796 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891741303 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.026594111 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.591566466 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.76824853 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057211677 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770575297 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.769017967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939082596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.769927499 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946027502 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.770861637 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028712074 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794519965 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940101618 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774009228 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.043887052 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81337227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82532377 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.772718079 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894142385 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773391929 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.807391249 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954410699 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772848221 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769505723 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.354725294 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.77100045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.917925662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.06911726 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793390166 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841385925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.294488878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770889129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867783355 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.79720155 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.381839239 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.772737369 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.943460092 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.772614997 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.736656501 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.771487874 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.080442346 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.994967921 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776796916 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.769286822 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.568135944 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.45979591 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772423162 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947880772 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.009233985 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.421014835 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992630406 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773003377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.902445007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774658337 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.848225636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.125745746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772939589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.771551692 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.772035016 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.773207311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771568762 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000779208 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.800548457 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.477673428 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.910334828 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016508174 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.083434646 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036182203 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822547925 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774962181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038791966 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.774410297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.838809332 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.77361049 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798094278 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021984831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774257016 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002738761 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059566437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.847901429 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825493449 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.774995502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771862016 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.77259901 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.911731876 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874140508 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773983076 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.773353235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.892661941 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.897486961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965314611 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.368757479 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.94531006 seconds)
  done (took 880.512857065 seconds)
done (took 1188.781582543 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.774497951 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.77717652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.764807754 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.775763338 seconds)
  done (took 28.801803892 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789680526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.780043514 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.785046086 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.781668448 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.783728615 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.780610111 seconds)
  done (took 12.412150049 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.795662488 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776403289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777142924 seconds)
  done (took 21.060670558 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849276352 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.180657017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.882457652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.217874551 seconds)
  done (took 9.843474414 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.786227945 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.78290873 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.784695636 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784128846 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.783260689 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.783998343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.781780306 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.783910742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.784955315 seconds)
  done (took 17.768687812 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.088072969 seconds)
done (took 95.685913007 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.996439841 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.940021164 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.865191694 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.069638779 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.803752809 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.156887086 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.907344399 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.875140143 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.671796928 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.818856367 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.0234778 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.802174952 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.339528049 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.283397026 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.440664735 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.109273221 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888927854 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.954067802 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.907676055 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.657739695 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.863357255 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.899358663 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.416756311 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.12589409 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.916820127 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.902846933 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.841316687 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.270703334 seconds)
    (29/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136531505 seconds)
    (30/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.905035726 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.875835545 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.14119523 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.807690348 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.82863249 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.911283907 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.066734584 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.362374189 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.940306767 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.776843584 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.778349961 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.718274703 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.064290751 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.767932196 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.851489157 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.801838559 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.827636156 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.777993029 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.047730996 seconds)
    (49/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.918042979 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.76720073 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.972917237 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.847499003 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.838001671 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.034810888 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.782521166 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.315850183 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.972351885 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.057330941 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.863522549 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099325097 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.36700179 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.835593437 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.948977568 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.324606038 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.1543573 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.135799644 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.780356354 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.878247516 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.781146566 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.785388237 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.863345558 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.162755004 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.768550479 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.938625793 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.298337485 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.990926931 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.94516321 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.079981877 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.887656308 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.868165091 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.485646762 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.11579762 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.376139558 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.293072751 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.869289068 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.315615589 seconds)
    (87/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.863598185 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.01572339 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.414667914 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.181538633 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.107503263 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.168917936 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.901694074 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.766745683 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.423801299 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.287205385 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.780178465 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.911298485 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.807345306 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.90821105 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.146013442 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 5.681773735 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.157303481 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.112077405 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.014020781 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.808253152 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.023838604 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.967086224 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.989999861 seconds)
    (110/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.967310971 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.787448535 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.814842747 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.782755313 seconds)
    (114/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.933231994 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.657747303 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.634338855 seconds)
    (117/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.070979968 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.782650599 seconds)
    (119/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.016315666 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.096349914 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.852595303 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.890670757 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.794602392 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.149709246 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.237514063 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.80588294 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 6.783977899 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.943804267 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.040356224 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.771129119 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.798692063 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.00688694 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.822511614 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.055284001 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.070211645 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.23869388 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.741322532 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.142394722 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.087642303 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884138277 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68586765 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.921678685 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.080214947 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.457787779 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808809444 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.829953344 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.783598244 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.007731725 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.812153489 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.425448551 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.581042052 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.258266143 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860470253 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.88921919 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.812810488 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.160991837 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.892632169 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.094781161 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.915383788 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.809187656 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.097464106 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.879614147 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.917455384 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.106794841 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.817484365 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 4.783798852 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.98169665 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.298897212 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.906591714 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.771953046 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.90923898 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.025322735 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.810445814 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.075387706 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.023700971 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.812927123 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.118960092 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.797509735 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.857965471 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.299037384 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.694730001 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.070126048 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.807470501 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.929077982 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.75078952 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.160479361 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.620332822 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.818486186 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.460054675 seconds)
    (190/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.306012985 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.834498147 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.391929509 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.784497472 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.862676983 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.393473438 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.194945618 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.7744405 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.832664054 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.844230303 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.774522029 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.426640745 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.789103791 seconds)
    (203/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.857550826 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.154663978 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.787259458 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.067363327 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.723362213 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.444128395 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.803120014 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.003004408 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.746548655 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062486439 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.78961763 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770431683 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.714906343 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.86832762 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978897142 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.086556486 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.926060572 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.870515101 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.811548304 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.793187444 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038359573 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.046808962 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.775435545 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.910323069 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.872172379 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.803655517 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.828334426 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.813181825 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.980093778 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.297841788 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.195090347 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.787308424 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.452611399 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.71560865 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187428775 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.856454468 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.408569192 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228046407 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.895657048 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.7319886 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95579796 seconds)
    (244/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937182729 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.776034281 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.005756783 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.791621061 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.240033887 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.353612589 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.828394474 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.775599943 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.655045929 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.216588575 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.88980745 seconds)
    (255/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.875706451 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.123560692 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.990242561 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.069827662 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.818062776 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.959161699 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.754192237 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.165296475 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.792721055 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.017080624 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.987423554 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.175698226 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.887204805 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.854171772 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.331125609 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945386057 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.930667178 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.797403331 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.964041822 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.870422175 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.788816984 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.989962109 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.023772119 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.780514162 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.910734666 seconds)
    (280/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.99319007 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.781361072 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.946772247 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.875187166 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.901094004 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 5.54558062 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.58876401 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.344630988 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.905279636 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.792772741 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.972754031 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.386444043 seconds)
    (292/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.964549658 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.613931877 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.929033472 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.851144374 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.817574928 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.474780929 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.704007349 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.597847182 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.782702987 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.311919855 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.17649929 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.822058912 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.482624956 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.806774335 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.33109597 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.258926345 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.804147421 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390232191 seconds)
  done (took 988.067089815 seconds)
done (took 989.840323988 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.826278085 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822209594 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.805651814 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.826286676 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.917335401 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.834728337 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.814385868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.806208414 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853094066 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.853244472 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.803910302 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.832069461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.807152624 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.805623071 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.804495289 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821578826 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.110746947 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.82499463 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.823679394 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.814050318 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.821848614 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.802963444 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.854206292 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.833183076 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.809371928 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808395199 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.808525717 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.825661497 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.918212953 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.810845302 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808607614 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.818029601 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.110966604 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.82644282 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.800737427 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.825631739 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.819233559 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.81538427 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.809174031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.838764024 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.240860466 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.809169708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.809066868 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.80664364 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.805900129 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.810583358 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.808340295 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.813051105 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820879182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821216549 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.238227373 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.825757868 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.809811401 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.808702345 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.818368251 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.807533575 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.810266672 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824796588 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.82951521 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82107362 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.100409629 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.832565501 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.810123997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.824255708 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.815952331 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.277247319 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.805394932 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.813395512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.242298797 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.816882207 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.276476628 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.819863012 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809854485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.822112785 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.840782974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.112179849 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.823941086 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.805768557 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.816449254 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.808129724 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.817867685 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820116472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.815090423 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.808241187 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823038641 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.837044392 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.818862725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.810401245 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.817149771 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.828384779 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815457945 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.82165885 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.811778606 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.80537792 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.819918991 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.813228001 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.81205254 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.812490229 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.814087058 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820146805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.239617192 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830110443 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.805649833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.805726815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.808732506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.822744412 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.240786076 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.814191354 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.830635319 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.856084834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.810599579 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.104510386 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.835054596 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827039687 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.819053999 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.8130439 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.805555813 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.104552219 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.261138481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.829177769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.810479602 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.810404237 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824281335 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.811675913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.805700458 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113630957 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.8310035 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.825765041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.933152773 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.820118167 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.843088167 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.809645543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.813744734 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.841539099 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826106458 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84191249 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.812844071 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826839287 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.82742792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.807648389 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.822316746 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.822986496 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.812554861 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.815260427 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806342957 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.840103415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8238935 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821395027 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.833173322 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.933292718 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.811667696 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.104683856 seconds)
done (took 284.415334178 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886077356 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.798384195 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910247568 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.806190813 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.904768205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.897973401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.804525026 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.804695011 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.80522141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.213807637 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.804994679 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.805065679 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.807336428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.805390968 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907384206 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.805748452 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.804666557 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.147182446 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.810051367 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.889629272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.804324055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.804371749 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.807762523 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208416506 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.805060373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.80874891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.879720243 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.808685077 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18135634 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.800765978 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.806166804 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153134185 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898174759 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826470613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.819442461 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.817760194 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.898155386 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.814921725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.890013722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.903122208 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.91078595 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.852202383 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.800838574 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.802733328 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.811600786 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.811370621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.806508915 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.83657612 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.804579142 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806927658 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176155353 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.819118976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.808137794 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.805157769 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.806106717 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.843034248 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807833128 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.812273662 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.912271311 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.812266459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.870992266 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265255794 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.184893445 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.809721476 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808332848 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.807644842 seconds)
  done (took 180.485247597 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.874147569 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.883844103 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.876215356 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814259062 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860478319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.882730283 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81431668 seconds)
  done (took 14.745050725 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.816500778 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.809064908 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.867344044 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868166968 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.813607108 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.970049108 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811569914 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.820028002 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.809784255 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.876903156 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811792465 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810372623 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.81789917 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.802269119 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864492887 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.821433507 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.926624116 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.813376002 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.813259861 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967270547 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818934885 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.808719302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.866283627 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82312485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.812802758 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818267969 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.41074127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814443313 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.808299271 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811249133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.808748599 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.855665778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812071891 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.808190969 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809119195 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.954240913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.813788737 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809802389 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.812856479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.807930277 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.811235646 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.814975428 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.812043757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.810822409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.813760936 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836437582 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.813399252 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.814441558 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.812690745 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.811745286 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.876544558 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.812964639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.810631805 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.808407705 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.881649344 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820991596 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.81495737 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.808775017 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814381798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809685185 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971068554 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.865845111 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.812631109 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868461111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81202111 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.813066404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814040284 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813077276 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875160349 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812699919 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868726449 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.809985146 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.01697597 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83762927 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814878955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.81585819 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.815663976 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815269182 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.808132961 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.818466911 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.811101955 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.81375444 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.819974119 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.809772576 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811902743 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.953288255 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946276603 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.812965115 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.826534161 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.821607591 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.811003074 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.880218528 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.814408017 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.81252647 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872468417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.930678318 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.870971306 seconds)
  done (took 200.447631881 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.818543365 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823313063 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.815666177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.83330007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.817640371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.815650382 seconds)
  done (took 12.665100544 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.817144556 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.81571516 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.814485511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.814704753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.815468626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.813999371 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.817146591 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817097389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.820357899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.816117955 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.816476442 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.815625243 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.816782143 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.818780626 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.817850853 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.815825532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.81881459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.811974669 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.814612769 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816455146 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.969941139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817052374 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819094578 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818163298 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.820757957 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.816945503 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824804044 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.814408444 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.817048902 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.825640377 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.823070971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.818451351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.817060004 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.822257888 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.82414375 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.816868587 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82075895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.817013624 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.814909963 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.817660933 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819204525 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819545355 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817375508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.820534391 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.818774019 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.822694227 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.82240354 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.825710606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.818742365 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.819812793 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.821033916 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.819228152 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.818055823 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.816488701 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.821236608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822697401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824055326 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82297665 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820661852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818885682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.817917397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.81904622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.819272005 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822924518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.815748239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820019652 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.820090604 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.822794476 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820396466 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.818309266 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.819851366 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.817312108 seconds)
  done (took 133.851959408 seconds)
done (took 543.945226316 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.038704577 seconds)
  done (took 8.785376154 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.955105742 seconds)
  done (took 8.783588274 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.2923096 seconds)
  done (took 10.041075261 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832858678 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.843759287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.823463732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.824029419 seconds)
  done (took 29.079573018 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.153476114 seconds)
  done (took 8.90247921 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.82663125 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.812164187 seconds)
  done (took 15.450151311 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.872673591 seconds)
  done (took 8.622184692 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.93390887 seconds)
  done (took 8.681960105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.8269947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.81306518 seconds)
  done (took 15.400914435 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.800421976 seconds)
  done (took 8.549293131 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.442416384 seconds)
  done (took 11.199013621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.23316337 seconds)
  done (took 8.995443655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.815366606 seconds)
  done (took 8.562848937 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.815471661 seconds)
  done (took 9.563739071 seconds)
done (took 162.365044766 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.818392085 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.811480117 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.811050029 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.811143082 seconds)
  done (took 28.999688102 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.852754655 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.853559334 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.85998722 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.865189859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.854948261 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.853499183 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.845767674 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846370638 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.865334305 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.856196738 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.855767022 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.855482127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.854167375 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.84684734 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.856820571 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.855270419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.86505546 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.854680893 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.845499565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857033975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.820473903 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.866240852 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.857876346 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.821464813 seconds)
  done (took 46.215038387 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.018718889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.892581768 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.974759083 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.87389155 seconds)
  done (took 9.511609464 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.873334979 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87231388 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.886250714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.936155472 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.953592763 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.883563184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.845653662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.843268748 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.828174584 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.874500331 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950373757 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.890475537 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.958214479 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.821593823 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.008140575 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.820794215 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.820179789 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.872083543 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.924133339 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.937852008 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.823353204 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.873581551 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.878382037 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.893388481 seconds)
  done (took 47.017059718 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.819370742 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.829471542 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.826824057 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.818644293 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.820905214 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.82133194 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.827638245 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.82227556 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.8437358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.821905425 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.821004549 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.82339157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.82037311 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.821844605 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.822231644 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.833662629 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.835452353 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.821390718 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826458245 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.827349927 seconds)
  done (took 38.254896266 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.817519893 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.673127329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.167758467 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.071568911 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.81649578 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.818760678 seconds)
  done (took 31.114959038 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.834693016 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.828032758 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.823442494 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.878163427 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.957093582 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.829993612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.82365729 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.834043372 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868040518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.884455271 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.841880094 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.852839849 seconds)
  done (took 24.010918899 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.819659051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818968561 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.820585398 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.833920974 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.83173533 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830390987 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.829660986 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.81781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.835875792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.840191034 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.82957286 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.835164111 seconds)
  done (took 43.69871224 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906020342 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.864175096 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.845319644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504008833 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19727715 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029910344 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.470671322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150064134 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824530087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091639444 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74185044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921491776 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07387705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246079116 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848366664 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299475808 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110614058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030932251 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847038829 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461983339 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88240555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936931814 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.527769682 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872742895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030899108 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.952880417 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.117739976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.821928677 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956072903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857027853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830519983 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820739734 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09489888 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194838355 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926224861 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831178605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44212426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.535945116 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.810119651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.544836571 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.469147694 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930541803 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837340333 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823195733 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757894882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90933642 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189791046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.830505591 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.532729986 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821796321 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833772363 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918520886 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.826330689 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.642156565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7353461 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824886944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.819696772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831127649 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398552384 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896364545 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940778876 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.791661396 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.913382057 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467964379 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211478075 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.96979704 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.826978369 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826588599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758060415 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55270393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876770691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152949246 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.843251959 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474179766 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124709094 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.809656736 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764322894 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103878346 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2904299 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.790898361 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051312527 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824586629 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759499846 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.765641181 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758115519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101612475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863629734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.598541748 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866890508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153883908 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836203514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842666716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85012583 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048392774 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.70853465 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824577348 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.53052758 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969257926 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846559137 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157582557 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760023257 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.828093725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082070973 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036331148 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.833300029 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.332231346 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979998957 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326477658 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.872791567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.910577834 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867336716 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.091274379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883654579 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900777225 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87928827 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.825863745 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132277197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344358717 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.958283162 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.752861121 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948371501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.172785149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853051775 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908620649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828130277 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.826848353 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568112423 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377508631 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.825011728 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.831838718 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.839591852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866882732 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.831295739 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772476196 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.444388466 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.767496378 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.841307705 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050763036 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.331098381 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130779099 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762349443 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156996648 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882037667 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.050860937 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476665609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.894947874 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089694487 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8374888 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.867187444 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870812974 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847930117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927495091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852038624 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.907388061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115936933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.832398066 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.834210182 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.57692647 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863614499 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829560582 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.836962791 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581202398 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10095703 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850703296 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836227312 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.717310929 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841140659 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893536276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835443257 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838760435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.36707458 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541079723 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.836560605 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.411438316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053777561 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838774471 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.575119959 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943510541 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.913889664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100750502 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887752738 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.763424583 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.541678041 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.525824845 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830525815 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766058168 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832609905 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841326035 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843682001 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.029261098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105074001 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871708262 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.48040868 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.870940046 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84056817 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.835755372 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831040669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.340564096 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905861398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954092895 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.870515052 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977335242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.846709524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765155743 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836009435 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837141079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83153063 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.832826975 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86582256 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.47736859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21161451 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093876911 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.445686785 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847546976 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.511002613 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.887612733 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.833679141 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.554182764 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93350545 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.869281848 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859740828 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.845364344 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.557765614 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53729596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402445888 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147733024 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135900175 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259837368 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.967204182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858145656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172437815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76961198 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.39853933 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891378475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174623933 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780326261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920760362 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483898149 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165423215 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848668815 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062586418 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213895012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.46747779 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966106798 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0469476 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869657365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.920830319 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790244803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.368866708 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977242771 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456745908 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027245148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169423944 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.424935072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948386471 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.834813173 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51515391 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922307909 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.544669756 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.007196818 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.951549238 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.668370732 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294251766 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840169033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064213841 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193806723 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925658228 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.951620656 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774654789 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846350008 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84761301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.838019976 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.83466673 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.691153532 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.093323889 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848000542 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77198788 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.87686187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119524102 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.735616971 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.841660226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837931761 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150797943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310295712 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995992587 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.865374015 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.346832462 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844237738 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77166111 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771450314 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.530469959 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842263974 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811734087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045834249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.941344713 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756034458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853443602 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912235895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094307213 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852959736 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107031959 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110919906 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537973068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863366186 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.93585601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.418351988 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.934059702 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837440874 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075430864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589045 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06400725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.853741891 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.797113308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.837318181 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052346443 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838290672 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.685207542 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054005451 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.558711447 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.850932853 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144363043 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911140988 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.635692826 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.867010601 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.92989845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848133349 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917536636 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847300254 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.8494009 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850212971 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884686219 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654191031 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948240274 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853644648 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932906188 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917133135 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35589348 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845334461 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109661519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191817807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157616439 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897488579 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838361048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838337158 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775651357 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987108041 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065080925 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111113681 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.969820774 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.957066149 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863431979 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.425317211 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.958628834 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07271304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115043119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.735752539 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272717131 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.875974752 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.840169113 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851783257 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.051452188 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051307627 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158678698 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986184665 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848555401 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193048521 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11595309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840777287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842962166 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431821934 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.844616065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.526121967 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.884103195 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.686779539 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101022331 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850864154 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216531568 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86372046 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.997203764 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.612506654 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.554975467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128247329 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.825222337 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.900648456 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115407645 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.219472133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152709372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910588471 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85375173 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.962381287 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988031106 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.699285975 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842336532 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842012994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062282728 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.55190806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851647725 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114206922 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147762096 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.837061412 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.699026163 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865294673 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.853354441 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065414403 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112592439 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095672576 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852328982 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.848518289 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.661610497 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112750948 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898763952 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776198135 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.844014045 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940085003 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090070732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866152933 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296079085 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.553648353 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119886652 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.846364007 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865618532 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.930151132 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197375775 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160076917 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.374529375 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053143293 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430724139 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.344715959 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139920317 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.850184557 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.926240279 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141055943 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.848701738 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.856696075 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878436928 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.111987243 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153853337 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.850654208 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509123665 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.811552552 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18413957 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400430525 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784770895 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854314747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.906354347 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844796169 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977803123 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85610118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.706147028 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942165669 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.600154709 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.133263585 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.849748446 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836519332 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.506497226 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.023377548 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875191204 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001585269 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847931336 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.521673569 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.195177613 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100305672 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.866140705 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.850049344 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.851822225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847314249 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834366499 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04098877 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.039669123 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13401402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.896158981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877606018 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851725068 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.062746764 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057736377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.659836284 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971798302 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868714125 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883620499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.754303831 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351559876 seconds)
  done (took 1651.641681084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.851728935 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88981156 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.89267961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.937394343 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895872926 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915269726 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.926323325 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904379002 seconds)
  done (took 56.994130836 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.857199923 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.043522389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.85758314 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.848228857 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.856261742 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.847360656 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.011209099 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.855140103 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.855674584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.858337294 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.848612837 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.845251931 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.16206088 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.865402852 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.84927944 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.834149506 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.854454523 seconds)
  done (took 73.951835831 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.855994147 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.920080427 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.876672201 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.862222881 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.823363824 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.869388062 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.663542562 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.865884081 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.846096563 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.069653617 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.48720505 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.860751675 seconds)
  done (took 89.783224328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.860785777 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.855994721 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.854420491 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.85584402 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.855369168 seconds)
  done (took 11.068930496 seconds)
done (took 2154.03405647 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.106513757 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058428566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077280208 seconds)
  done (took 5.918250378 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.003098284 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.049517511 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.167984479 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.175971074 seconds)
  done (took 10.185503925 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.140331008 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.223765602 seconds)
  done (took 6.150162712 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.247125928 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.862421824 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.230195438 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.853179888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.856443329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.855880064 seconds)
  done (took 22.356507573 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.858004946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.860870946 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859457493 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.861114358 seconds)
  done (took 9.226927928 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842767753 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.563135263 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839903903 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.850019283 seconds)
  done (took 20.883184751 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.606287362 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.616325204 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.604265942 seconds)
  done (took 9.613404741 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.347863764 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.734571643 seconds)
  done (took 8.869266273 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.115819689 seconds)
  done (took 3.904152369 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.988980109 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16502614 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.32665482 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.353589961 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.49017628 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.524432171 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.164805777 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.09445285 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.252039179 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.282292609 seconds)
  done (took 24.429062257 seconds)
done (took 136.766093915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.235521523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.094635937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.064835216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192715619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.084396008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.068219521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.07194491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.175583411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.706427983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.70073794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191580803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.154095994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.019662433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.097231566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.018738672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.097118295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.0834015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.262779081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.887892384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.09018456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.070417111 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.834284466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.035786169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852920652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.084974877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.032098158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.413843312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.097934786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.042460561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.425172678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.018744949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.243417067 seconds)
  done (took 172.238643423 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.619287842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855798516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853589739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.85391108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.250900324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856224438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854798159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.855698468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.030076402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.007819907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.856812903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.218552217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.855470497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85501808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855835435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872704036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.165544488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.640929613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.855283289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.855867708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856980581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.079067528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.857642322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.087060781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.147166784 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.859436497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840016631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.86337537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857027018 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.845998354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.865468696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.856982387 seconds)
  done (took 206.877889774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856915115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858207968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.855665298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.857086182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.85899334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858847025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856948191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85869855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.543541493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.535327988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864588823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.86231802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.863116939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857188392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862538015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.858192151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.868086975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.86649646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.862335476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866031466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867777269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.785821997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875620552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.800686285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.871887688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.874105755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858335749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872569761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877907635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.879760366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876333551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.858793105 seconds)
  done (took 220.67341305 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055703141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.866448713 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.867526935 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.801328387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.867101636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.867945177 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.861951804 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.0540283 seconds)
  done (took 19.060583035 seconds)
done (took 620.648935234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.311563632 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.14811224 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.040536074 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.891955244 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139120577 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.923366838 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.888076872 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.945408387 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.615356571 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.952697229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.520287614 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.89869338 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.611657459 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.9039212 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.015719192 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.940044189 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.421873256 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.506668632 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.062481173 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.967485566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.058822772 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851435164 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.957629873 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.651936962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.627523114 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.882613041 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.060143714 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423035733 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.892618658 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.048906593 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.617219166 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.285194333 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.893026745 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.883329087 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.941186605 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.920021443 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.225378069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.89293661 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.01087254 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.652171634 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.951234474 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.497056472 seconds)
  done (took 102.722998595 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.85968823 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858460154 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.857299588 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.858654936 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.859374237 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.856928379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.857248844 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.858693205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.857223397 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.857012822 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.858258011 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.858685952 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.857616831 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.858138723 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.857747411 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858600396 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.858775572 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.858943912 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856819421 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.857614043 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.85850759 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.857675653 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.858640389 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.857616847 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.857879544 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.858351966 seconds)
  done (took 50.119712802 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.870595074 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.009094578 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.088684083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.886415472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.870227425 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.87314646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888106807 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.874433678 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.872229145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.872499292 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.963032995 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.875439391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.888785114 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.087253279 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.882148342 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.870665173 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.873170269 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.869611014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.017041686 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.885442624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88930398 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.875499472 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.888819872 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.884013816 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.872029523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869841943 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.874078419 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337173883 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.876636904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.962697861 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.912583829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893114702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.307852131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.099161176 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.919824155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.878390307 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.872025426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966036577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.875250994 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.871625221 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.889243231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.876870821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.089662649 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.366810141 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.882385661 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.872688737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.347277257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.972270863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.911302439 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882039606 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.095556958 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.886320205 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.873998312 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.873242019 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.908571875 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.880201071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.872849405 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230765034 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.882452802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.890749515 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.87773031 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.87318897 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022833442 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.882448611 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016504629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.8801626 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.88086437 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.874264078 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.094344 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885324219 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.375930168 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.881245057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869150591 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.959529038 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.014258001 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370655605 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.881827676 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031425371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.326536415 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.892276211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.877019548 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.324534793 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.898131785 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.875896162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.87347348 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872526896 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.871864244 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.915444015 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.887792886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.307803172 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.374601915 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.240656147 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.897276628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.884144376 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.870994185 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.231407018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.881067417 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.869559664 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.081242825 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.386605938 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.881618923 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.881019126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.354044078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.883694355 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.888718457 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.881019412 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09336914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.883730816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.914600217 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.872786992 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.878292798 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.876756151 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.89005056 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.877141044 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.873058701 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.345270124 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.978031232 seconds)
  done (took 232.095807646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.869261257 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.868769596 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.869816517 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.867518653 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.866661359 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.873015054 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.865150683 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.865772447 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873244698 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.866265454 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.865509627 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.865536837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.86916542 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.867702475 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.401700999 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.882530147 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.528575541 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.874544245 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.874267144 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.874962881 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.554565271 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.884471753 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.878559862 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.884942683 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.876423459 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.875963752 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.874819083 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.913584741 seconds)
  done (took 168.136723765 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.88288615 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065017408 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.899610854 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.917497794 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.891240224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.879892228 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.906761343 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.906152404 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.886474984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.879651963 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.879558697 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.943258782 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.896001183 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.014898822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.912871284 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913226591 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.987566031 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.889730185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.881340249 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.882037777 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.90994424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.879411563 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.94567245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.013440016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.900008422 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000934567 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.890878221 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.884189652 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.885794043 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.002862836 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.898117149 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.94622065 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.911652996 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.900489794 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.005948971 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.99888997 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.991376682 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.911538001 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.88921494 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.885940383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.883020434 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.873681218 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000688719 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.902498118 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.88490847 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.993226287 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.902166985 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.886314008 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.892092069 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.882680758 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.896876298 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.899700574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.949662839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.015973742 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.918825759 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.906840677 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.910388811 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.160641518 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.897465569 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.983893746 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.881723057 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.003141171 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.902927577 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.87371657 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.88480214 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.889684923 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.914724617 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.916268046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.990904584 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.896042077 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.985963595 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.919927333 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.891030131 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.885813189 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.889632747 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.005495427 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003191282 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.924116944 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.925553295 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.917745856 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.884611292 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.885789293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.878345861 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.902685991 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.891669164 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.005652215 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002695988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.895012642 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.888077281 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.886512452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.888459991 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91124133 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.011725155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.920886675 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.989147878 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.958538727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.9600285 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.897767035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.900048603 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.888682317 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951437026 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.900324526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.897379895 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.210931207 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.959535297 seconds)
  done (took 204.291636669 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.358788935 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.945612182 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943149222 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160066973 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.316214428 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.692872962 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.933738008 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.937745397 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.959733011 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.093926532 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.991982165 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.94614621 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.922168228 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.908732483 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.937078428 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.955346198 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.93739592 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.221915982 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.065135173 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.050029321 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.919009346 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.19657108 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.25429893 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.309906921 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.968961242 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.265126865 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.646565798 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183233021 seconds)
  done (took 61.841842945 seconds)
done (took 821.001579471 seconds)
SAVING RESULT...
DONE!
