cset: moving following pidspec: 27960
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33231806 seconds)
loading group "string"... done (took 0.563895865 seconds)
loading group "linalg"... done (took 7.67803506 seconds)
loading group "parallel"... done (took 0.171829503 seconds)
loading group "find"... done (took 1.189549664 seconds)
loading group "tuple"... done (took 2.11802812 seconds)
loading group "dates"... done (took 1.332234967 seconds)
loading group "micro"... done (took 0.248435286 seconds)
loading group "io"... done (took 0.977901322 seconds)
loading group "scalar"... done (took 41.22971863 seconds)
loading group "sparse"... done (took 13.499430983 seconds)
loading group "broadcast"... done (took 1.03875602 seconds)
loading group "union"... done (took 14.573391685 seconds)
loading group "simd"... done (took 4.942261817 seconds)
loading group "random"... done (took 9.836799319 seconds)
loading group "problem"... done (took 2.001330929 seconds)
loading group "array"... done (took 22.622020612 seconds)
loading group "misc"... done (took 2.041462441 seconds)
loading group "sort"... done (took 3.451316018 seconds)
loading group "collection"... done (took 19.973277499 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574376506 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142409221 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150263403 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130925792 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204020033 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15635534 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158565069 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098676891 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.973327493 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17983263 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153798279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.527412723 seconds)
done (took 5.183513293 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218685217 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095417125 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103858987 seconds)
  done (took 0.874273165 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077129341 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145633311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094827334 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079411101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096759875 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078809197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095838998 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079090835 seconds)
  done (took 1.352410486 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086162334 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097548811 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08186278 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096610813 seconds)
  done (took 1.048950243 seconds)
done (took 4.260311946 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738293923 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278204543 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20924975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46598168 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196078613 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216684211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684525205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3388339 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253043695 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10009421 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143551843 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386984209 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137227408 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682897758 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089732145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124301366 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17652913 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442637582 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08238886 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109811914 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116420261 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142732087 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129048201 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090772984 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185742901 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081614787 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193443512 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108022707 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080356893 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276662438 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200571986 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690098712 seconds)
  done (took 10.876248557 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111697574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133918337 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097005065 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138232097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134663123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099455935 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08407393 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096724129 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12124147 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177783099 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114478425 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136189848 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095023187 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082152548 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115662926 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245364314 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122388391 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100907501 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101330752 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087468142 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138647809 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112684409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109274193 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093632496 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166450831 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220453519 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110795453 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125048372 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096682227 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112351207 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142853784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14395971 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093922691 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080851377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17265345 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123598586 seconds)
  done (took 5.136940196 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.08360648 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189194023 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121211746 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170170293 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081094269 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142548307 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127461391 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09427693 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11368103 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257047313 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.105988941 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163565988 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141854608 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116663619 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080519887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098522737 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095842263 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557029273 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156721761 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115925849 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11444395 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103015153 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098398928 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34892997 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107081878 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096175916 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081002857 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081949566 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160021821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081144409 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137294133 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122383179 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100882841 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132290751 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190993532 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127303389 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10610623 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134805496 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095874422 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079104571 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175032545 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104440824 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078814236 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121077775 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093347841 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118883415 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13477975 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098370125 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096483205 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203627727 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079745747 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114905326 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938106415 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181851918 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105694219 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09754376 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331971089 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098848305 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097406889 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077950993 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280941052 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193429527 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10061028 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081195951 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09928167 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08213977 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399892958 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079688707 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.675514169 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084211664 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109635865 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083971923 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096514227 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104049111 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087746389 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115523075 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079560674 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099676122 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078292756 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097057821 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082353262 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110369358 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10236396 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079947586 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164760888 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078614393 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093154383 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097881537 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128011283 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098406499 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0772782 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131073076 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098343114 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080191301 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133101695 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098812462 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106922097 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082961849 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143414696 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097989077 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143918424 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095383413 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125037997 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098798477 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113911876 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110435826 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099009007 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084185907 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095457381 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077290396 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164580861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082140458 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098539346 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081965911 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11119475 seconds)
  done (took 22.314758811 seconds)
done (took 40.092912625 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322463826 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104377832 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104403136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103035889 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100044555 seconds)
  done (took 1.492555131 seconds)
done (took 2.223034791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319414505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192082598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07666171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165526156 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094225495 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171110208 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159763439 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110800706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21692059 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076495627 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177120395 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076325513 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093284953 seconds)
  done (took 2.688212974 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094041246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114063583 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082514343 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108992168 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077078963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109466609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092027159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115440803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108532571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085033392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093310054 seconds)
  done (took 1.807723152 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093382145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112687023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082388674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109298449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076564879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109364255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093033299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117881528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109288493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085587 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093237837 seconds)
  done (took 1.810319316 seconds)
done (took 7.027017947 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091198133 seconds)
  done (took 0.81553247 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921126525 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.84133009 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112275103 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150171487 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316957832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193306686 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478482314 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126510466 seconds)
  done (took 11.055635947 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11469443 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102807299 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112963587 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08542687 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104816383 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0881412 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101659521 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100307579 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085593018 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10142708 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086982022 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102224572 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103862485 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087366252 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099982758 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084299828 seconds)
  done (took 2.355095539 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118997279 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117423515 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105003817 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107868979 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087544301 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104524212 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105091162 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088307126 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100784306 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103113365 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090721664 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104950013 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103888506 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080063989 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107912648 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109467004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086953034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107809445 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108768614 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092317251 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1087562 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097349713 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088427666 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107733395 seconds)
  done (took 3.27579912 seconds)
done (took 18.228740197 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157291751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108097881 seconds)
  done (took 1.000164513 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095018912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112211122 seconds)
  done (took 0.947236954 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097700228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095028083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122355614 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109313727 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08072372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096599978 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119399407 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080400554 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096311166 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080549353 seconds)
  done (took 1.721570154 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082878571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10995588 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100980898 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095185213 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10577096 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094484691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088459238 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099650634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109667221 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076997108 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101955791 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114618468 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086788979 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11906038 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10736861 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085186421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104503088 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101360239 seconds)
  done (took 2.528478775 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080071521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097760626 seconds)
  done (took 0.921196829 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081325199 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093656704 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082316611 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099609251 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09666842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078604762 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096117676 seconds)
  done (took 1.369090711 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480973262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138345372 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26556203 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085977665 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122067311 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304334381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099306144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085916403 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104175554 seconds)
  done (took 2.488643307 seconds)
done (took 11.714140819 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093181321 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115452849 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113020386 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462679638 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106759288 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098282063 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148039337 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249934864 seconds)
done (took 2.136270018 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143408788 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599610708 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.423372252 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230283921 seconds)
  done (took 2.00421979 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401030338 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098697531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084490972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082979238 seconds)
  done (took 1.419751158 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079951588 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099446328 seconds)
  done (took 0.936713532 seconds)
done (took 5.258359726 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080119487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09665423 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077358161 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128849471 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079596605 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095935591 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077691042 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098215341 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079668948 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.100280842 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098036582 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082187206 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096345907 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079016686 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098001792 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081984683 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09564258 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079318467 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096825668 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078975558 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098723799 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079060606 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09571189 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082581255 seconds)
  done (took 2.947304234 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099754396 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09806826 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102807748 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086003391 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102527985 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086122791 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102465144 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097676886 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086371302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099742817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084156833 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101338471 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099487267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085181373 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099477338 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102304197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086028113 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097852128 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083038025 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101628415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102097049 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080419231 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102091108 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086168923 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101751388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100980322 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082372857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098795953 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103188186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084791432 seconds)
  done (took 3.604720335 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085271945 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093994729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078400688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101422053 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077305229 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097065876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076993865 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095609087 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078772546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09481008 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079495072 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096212233 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079570971 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098165902 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080411691 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100484367 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109904 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080072716 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096416122 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07927597 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100653827 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079444064 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096814413 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077861513 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094731066 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077369146 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095194467 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078171592 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095116504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079100532 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100192647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082775344 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097793677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085294177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100982314 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079295597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100913097 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079821047 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097440672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07931773 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097147829 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096355066 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079544499 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103806776 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080147364 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099279561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079982851 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098616708 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080346053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100664686 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079438853 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097179266 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081902316 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098955213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084014168 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097607545 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079821119 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09723486 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098595549 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080621605 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096385071 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0795675 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099021492 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080820688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112957924 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086824968 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097447912 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082036436 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098730302 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082473402 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099254129 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094244841 seconds)
  done (took 7.241661575 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083184917 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106094504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080120414 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097828442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076774943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098290122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101428916 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080356813 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099608322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087256833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099152867 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081889422 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099420605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110328968 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080962376 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10043048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087427499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096582441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080574455 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101703036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081326396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102343863 seconds)
  done (took 2.797912358 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20729839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10430571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141671925 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107206921 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083495859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106900397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102339202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086533932 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10175164 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084373288 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100483564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102117715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082612646 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100401814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10032632 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08452154 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103645467 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086024578 seconds)
  done (took 2.652196988 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092437094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.207953226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102778062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098010684 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098497137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083274528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104426027 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108584324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084063953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099830366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091876918 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103285501 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103488543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082564878 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103714413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083429128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103481926 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08333292 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110104308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106082337 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089804056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110258567 seconds)
  done (took 3.01822421 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096535692 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100403973 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118781681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084108599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095077469 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079733894 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105896883 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082983632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109433322 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102235417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083773424 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099849061 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089987465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102412507 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106174174 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083604805 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102920182 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083044635 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102900734 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07974374 seconds)
  done (took 2.678275904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102498269 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10019661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101385221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093407604 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102194021 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084981352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111810739 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102729925 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083980937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127303976 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101411837 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083856727 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111804103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107694219 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102377682 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093665851 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111397645 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111264771 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083677222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103088559 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127685913 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085302305 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111929523 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102649887 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084969625 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10321742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102726082 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090814646 seconds)
  done (took 3.601122766 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081348168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098667104 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080950522 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09609222 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079819133 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096119115 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078962308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095852266 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081028197 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096503192 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081287961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100122872 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082847764 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100218877 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082397661 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101621342 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082644208 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098770611 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081282734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099088528 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083124709 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101185554 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08283655 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098691572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080599288 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101743563 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08047836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098992526 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082764448 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098540254 seconds)
  done (took 3.479830228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090833821 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105968916 seconds)
  done (took 0.972250758 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078444461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115269467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078882468 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102946758 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086740788 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102281792 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109736334 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088305986 seconds)
  done (took 1.53485209 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095549082 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110474283 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083120793 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112682701 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110048186 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097303357 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170043351 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10131901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087719095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097118545 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112603117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080637414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105676662 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082143953 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104775655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088536723 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098247077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105889299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085023739 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098602114 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082866845 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109383732 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087472649 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095892056 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100435779 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091360756 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113002604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082891793 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103306658 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10749461 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087397054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093489433 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081317088 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100331421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080356218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109422301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116188404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084964079 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109493172 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082908888 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11128139 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094889919 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08729334 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105716082 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091941021 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099821764 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100851638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076991188 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096418031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084309946 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095278233 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082051037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094706707 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089335527 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103559381 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110766489 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080730946 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101963331 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085167211 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103698076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088036888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102055635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081846723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107430183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087153206 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110498311 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07756073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094178413 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079011726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109372464 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124122975 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088181753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101005101 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101503331 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079917538 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103048879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083339876 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106159932 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08775106 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100492664 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107258565 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089334257 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100430099 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084419566 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108779454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098555459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084345672 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09744458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11737803 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081543991 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098042847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079701432 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111912223 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085188736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099800622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079041894 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107912021 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075917004 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100223995 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101361723 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082625408 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112204828 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106219224 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08849155 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109475659 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08931013 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10028871 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103392379 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078463957 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101286683 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084654544 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107033766 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075600321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103093763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08271982 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101555785 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109184779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080616941 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10049951 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090623742 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105728099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080222577 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09655521 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085135075 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09985484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10391461 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091111027 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099469085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077008601 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095350863 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084641925 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100299107 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103864184 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087422456 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103628056 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07695903 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098659216 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104203202 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091453707 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100249199 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083113842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106805065 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082877659 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099630166 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106880544 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085214075 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098810482 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088007665 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101338563 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077472491 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104343927 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103087891 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081212969 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103002262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085894264 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102629368 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082991395 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099458362 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106569205 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083517549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09879248 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082248281 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09899488 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093441416 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102676137 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077447337 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097332902 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108492524 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079991661 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100817115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080927521 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102998801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083553448 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098630055 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081784593 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101736078 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113453662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086700277 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1027665 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105716906 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094491668 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100306487 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084593433 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100541109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083607287 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102127654 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109405973 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087132691 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106526788 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084571684 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097326313 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106858045 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089856469 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099357263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08055963 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099691487 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086430308 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106703528 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103789381 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083671985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098787877 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083334261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104473939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085149999 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10134417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081273275 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105369521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100451665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089403962 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102662485 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111168914 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086208699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09659312 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086620133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099522362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088370177 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095762837 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079124371 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099302562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102037717 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081177093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103174472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076523603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108636527 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089894913 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101221605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0822024 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100581504 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108306803 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084152902 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104550519 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085727835 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107771664 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111195494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081727143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104351735 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093886963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102035809 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076177065 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10678036 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080678508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10053616 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100974381 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080801538 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103802575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091871532 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109510047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094410682 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085843554 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099888399 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081349947 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096315617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087342091 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10408053 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08297261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10763503 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101808598 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086241324 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105197611 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083220126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103114907 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083939974 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104649129 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101244924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085509332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099887511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085896414 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100384012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080986468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103126751 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082840978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10088398 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08841437 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100357007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101298301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085269571 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101842642 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08350542 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102279143 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081522954 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104954615 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08340706 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10159619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103215501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078782781 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109133599 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08278787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109411836 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083080855 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098921764 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10656006 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085693899 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107149321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084047336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101969405 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084417841 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100629772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103868568 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090177647 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09895418 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094299239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110955576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101383712 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086563187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102462892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084504601 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100727273 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084069606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103395579 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082598417 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101711033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106602293 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086273238 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101783999 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085506266 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103085428 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083308917 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103382816 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077870815 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101224883 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082411967 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101869632 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112619579 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084375453 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104992275 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081329887 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103293125 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081738753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099550792 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109645289 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092106576 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103374106 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109596849 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081678975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102659656 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09366041 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096666337 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081131357 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100025615 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080706619 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109510979 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102447302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102097582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10091541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081978117 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098340865 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08402601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10121507 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077052686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099449781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105299988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085682179 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09995485 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08307887 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104897413 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084036167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112079972 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101260252 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083736455 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101529212 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080502134 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100234724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082585821 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104988628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084250335 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099874767 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07992251 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101941629 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083280599 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102929109 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101707 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084440132 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108905853 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082643377 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104563195 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087803849 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097007426 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104663488 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082672578 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102184082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082053758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105844066 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086099812 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103397668 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11060856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083379703 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10220121 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083085323 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100440489 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082700986 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102726343 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083768167 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101376988 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102747648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090842688 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099970121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086113203 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102022122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083224423 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109593533 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102144928 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085964727 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110630785 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085750161 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104233241 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109925326 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087851126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105440159 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084245178 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103513404 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08946353 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101035475 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108582319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083209977 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102779797 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084471163 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099633021 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083108766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102788768 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082353303 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108781846 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103338001 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082144227 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101352706 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081642003 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103684851 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087709806 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110981205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08532863 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105488227 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097297223 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080343351 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104000758 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080988531 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104561548 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086648078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108706992 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084655855 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102544392 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101084218 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092732054 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108197922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087268139 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099949375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086712193 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10430596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104115998 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084560251 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10279781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085281766 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106625095 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084670327 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101660468 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109905829 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086232366 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103955762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085502367 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103046166 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083123433 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09836087 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084355568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104033089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107742148 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085322102 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102878426 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094175702 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102168817 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083582711 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106944655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101891551 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087962444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097483402 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084814368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1038985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084425459 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097709453 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082639551 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100110724 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104779992 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082493469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098052477 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095125288 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112097318 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086413509 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101920613 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100253083 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078502921 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09773985 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082521081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104312707 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085835821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113205922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08253737 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102199718 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097556508 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084179393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10543379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087114579 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099820736 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079076242 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100917118 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086454813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108884896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082374963 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102630974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105715979 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086548264 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10087733 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087239567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099429952 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086888007 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116364834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103715971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084161561 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108948325 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091424859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10445241 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097636189 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084685545 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106592493 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083579285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104865856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084238675 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119801818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105860581 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083190431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10185324 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08633321 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102326604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110625865 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085702348 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10377002 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088676151 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104826418 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093436163 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1059097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11155015 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087333613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106002298 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082286758 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103074749 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08113619 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102298846 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104299478 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084939139 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10801155 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091936534 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102561515 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114100596 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092640484 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108563024 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080032781 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102694706 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083474334 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098788735 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088164628 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101396388 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102383481 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082440267 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102027127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085000787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109028355 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085086777 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104634646 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08300127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096781704 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085303621 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105991073 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103468101 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080429306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10322188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085317135 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107265236 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087339545 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103794269 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084472102 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104607669 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102781738 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078791584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110371815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082718337 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105890843 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083183617 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104362976 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085079923 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106878695 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109231281 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084957507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105500123 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095762105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106637959 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100117913 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081239511 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108007938 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08237206 seconds)
  done (took 57.772207272 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146353636 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080567851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098684127 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07961729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112072323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099366136 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079290913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099750924 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07996912 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1024124 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079113967 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098778807 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108266471 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123223885 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092338219 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10324924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079368599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100882899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098062484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080705199 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109666465 seconds)
  done (took 2.875799776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104268719 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118111798 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11492323 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118826304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089551283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114610842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114073796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1149731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098845094 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111801924 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119209553 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115590276 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091141575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111587114 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110802207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093433868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119426329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109239748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117045358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094972518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112928282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114864381 seconds)
  done (took 3.230943908 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084482017 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102153195 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084798339 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097361981 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083483591 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098938117 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087382601 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101389092 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08628186 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102143104 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081939459 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101869276 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104628778 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078962451 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102843035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081236002 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151790554 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106931916 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083130241 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105074874 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078459199 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106160688 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098521306 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079451085 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102249532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08767685 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103961314 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081285682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103678777 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082393115 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103429809 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081191825 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105255548 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102594401 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082411015 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101343602 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08351787 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103583444 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079389688 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100931388 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08402462 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099393128 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08436737 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105087289 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082813079 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102065818 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08491072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103560172 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078522324 seconds)
  done (took 5.442753909 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105501658 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161579711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085954539 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142999192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121373273 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113836567 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087907378 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14199495 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102794457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08255802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123478284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121757056 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104191814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08995373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111368816 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104151846 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086229004 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103072202 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089716114 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104283977 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108590748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090869166 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119685132 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118615571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108771761 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082846748 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103459364 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109002591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099111597 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110134829 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109329503 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090622314 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121860751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110724026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083972688 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106618976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121681234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104266253 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087421798 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101768686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086821 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11016369 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111295039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102121171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104897683 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109511197 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084536447 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101777075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118654338 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087083057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113840614 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120827195 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088601674 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105501428 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109637938 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120788214 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084766748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.1028373 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08771001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118429078 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101690395 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088062078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120372671 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106849183 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092271748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119786089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110250864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108444287 seconds)
  done (took 8.163946531 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092853578 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112068892 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120728787 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12186384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090368086 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111471325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110343976 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090795017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110808269 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116488145 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111558654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133782485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086190732 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11438574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111356766 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09183715 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111970237 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111197527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092624029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111541392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111407426 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120802358 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091305147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120268441 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141957404 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106288398 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091910765 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112487662 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120856368 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110862701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124410729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091203664 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11096946 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12175464 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123368494 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091341964 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103930928 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111084369 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091492709 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111964094 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105697822 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100947851 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111227467 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105749471 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091745035 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111488968 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121123206 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124551459 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114978857 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097508408 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112690504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120840249 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111123327 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092179248 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121427762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1472895 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121421319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121034665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111496403 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100543795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120338393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129610336 seconds)
  done (took 7.694337398 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107682207 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115953379 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118798665 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100220979 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082839042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109115336 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082815473 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103657277 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114362012 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095181028 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117976055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109814765 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092655536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116976085 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109813869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113371688 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089272696 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109932341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114910351 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08843388 seconds)
  done (took 2.932945882 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093255057 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12437569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085596532 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112806932 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1085189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091466018 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107897131 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108226536 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086252856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108299218 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095736585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117173215 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106263422 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091797985 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117124773 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111962777 seconds)
  done (took 2.510624229 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099594529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117369729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120797404 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08469738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104924591 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081163247 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105890583 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100968735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080829461 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121458218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085448334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109845292 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105741086 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082622456 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101675526 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08837789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101694046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082257059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105555415 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120192503 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096612031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104773595 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085106367 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10772135 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106673383 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091146812 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107043099 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103525927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083469382 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106128852 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085954564 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113898947 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10234953 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083917748 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103457486 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08282147 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105537987 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085020168 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109322671 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105645939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08323728 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105573648 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085625465 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107336277 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080795521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105850282 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081579908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111814537 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102668006 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084980251 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105388734 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087744805 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107012867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116490815 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089092583 seconds)
  done (took 6.26934573 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099440487 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109500355 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080620087 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103571007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087963785 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108066016 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109111497 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08818992 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108277825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082976288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107940527 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09017923 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107646915 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109285272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087604725 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109683317 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081582203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107138153 seconds)
  done (took 2.627924557 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090978027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105619692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09321869 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105846938 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085232251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108649991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080507232 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104652318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103895343 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085764636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106022078 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087434673 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10394238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087369684 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106637449 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085472923 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107976286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104010884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08541081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101332735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08857837 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104640489 seconds)
  done (took 2.98041214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11819883 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125357019 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093673225 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231892025 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104012259 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133190485 seconds)
  done (took 1.654759666 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110183907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121009405 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106713657 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106510627 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115712963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08753764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108452359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107540795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117669477 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100873697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108332564 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118343089 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119129817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096292361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114053399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115405756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108236265 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087671177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106952806 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129120978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087939363 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118055926 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109081228 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08682083 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108258676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118226299 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118448024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100913217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107924218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118313198 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114236536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088123144 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117649019 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122562203 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089694236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11839406 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108650196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129058624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113876354 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097588692 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109561149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114854544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098216913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114390466 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118619115 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10889778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09339888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108923111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108795775 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135335313 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095103017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118059108 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115513064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118587918 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097617839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13488027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122998169 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118557687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115839544 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12318394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118743149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093696809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117505745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122162163 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115376898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096912892 seconds)
  done (took 8.145413199 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103226976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126615795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10913694 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122362472 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096945164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108385966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108896066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087633961 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108610196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108018298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151887227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088257717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118366951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118521497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088131892 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108293866 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108692058 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118663156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087536141 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135200226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10902079 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118278924 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097577546 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117913696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124070793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115221526 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108281912 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087812033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108314498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088708148 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115522615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108764417 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119027635 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086621693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118583186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108674787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087903141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114972288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109050704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114797343 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098149548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129328366 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1085928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108282534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102481375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108836817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10926601 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087084363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109382889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107773936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101421757 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123932075 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123883835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118504252 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108530531 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087877629 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108929253 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108323331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088955596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114861188 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118802359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087771064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136240717 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109042587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109098376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118480211 seconds)
  done (took 8.053451159 seconds)
done (took 155.633581361 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219291489 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200266011 seconds)
  done (took 1.273120045 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097463996 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137056201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096604919 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168915515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106821375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118506168 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138267912 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097477997 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107179054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085536972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10801886 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087817698 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172482291 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086010952 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106433357 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108328377 seconds)
  done (took 2.684387572 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118108038 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233348079 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12538063 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106065586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090438484 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110620303 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084293473 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112116913 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089552295 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106606899 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088489851 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107483161 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085518766 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106945979 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110620323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088708926 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106686519 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088041069 seconds)
  done (took 2.816744272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11347865 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146793778 seconds)
  done (took 1.124076104 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242528787 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162828081 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.228295503 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468935215 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.27366032 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.364679345 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198844182 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210027926 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162502999 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208837848 seconds)
  done (took 3.37842806 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118421677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180502181 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316129507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155960038 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106419406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129810714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156326504 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.1312903 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122704937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100851827 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121708641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118554449 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139024173 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09508319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115980557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117480553 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121876991 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114763567 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115209443 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095391748 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137689685 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08521113 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115894867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114242448 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098038223 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119462295 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106472907 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085347051 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116902278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094234177 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113675148 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126164365 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119503158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15494362 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123489229 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157078541 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119831743 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091341775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114876944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091531724 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119291245 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118802621 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12489493 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097497057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106481714 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09690519 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106006381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085379622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114901394 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119392057 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093080508 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114140553 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154374737 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118348474 seconds)
  done (took 7.391275247 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784157808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156656743 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090771012 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.879788511 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136813863 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103129011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776927012 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111531463 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256067535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75735298 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132630427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120017581 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204181775 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257119711 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923947168 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286229569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.66609442 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123665808 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150515735 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154248877 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118117554 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13645824 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10991375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428839505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116920539 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112126569 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095867419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118924351 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159821314 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125407666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114023943 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17893523 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246267387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202748885 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093940314 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111869607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111592292 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169651339 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262375146 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192463881 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180551736 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107967074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089795821 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121780045 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131323986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08601933 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186128129 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17497946 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169658103 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114862866 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119167796 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098144915 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121231762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165422026 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122418225 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308111693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320102467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089721701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121364681 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12616953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259874855 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102046008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225708593 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139026693 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211448461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090016919 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777621279 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170512843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111122324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095519932 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119829471 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115331858 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098401422 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166864413 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407331897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124058566 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113814401 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090078023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227261464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102361741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11157797 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160969926 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116557798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119662855 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102185727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121863577 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168412473 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25078845 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101719461 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120026461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114462803 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102071413 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116235468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210519862 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219932152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163585594 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22837481 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099590208 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184664901 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167772472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120226299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171548344 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119628261 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102158469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122469225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21798039 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146056619 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123354165 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093354461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11897386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147894082 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127594613 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09730226 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192785766 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459696075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168440168 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109009675 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1277174 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099177934 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161400191 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117439595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260920475 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121856333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169189878 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119888746 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08675477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12126454 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163186497 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121996074 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098806032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122132982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119074289 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231447013 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215753497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121255377 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219631635 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183966699 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117701928 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171364361 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121693591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168273236 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119643243 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098581592 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116773047 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769167612 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100316035 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120104031 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114555686 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187091146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089531523 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123722159 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124446611 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087061606 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787000875 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127634855 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099919808 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125321629 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118089998 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12022267 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097375776 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115976171 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162054994 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230643387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120202143 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097481435 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125100247 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161811081 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117051633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124841088 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102727709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125656279 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122054683 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092429798 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124398821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167596676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184918687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218258445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573340105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111854304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102934191 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227588332 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112256332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287308611 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096711137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224445891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164007694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121362993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316991226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164197536 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185786373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126470746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173545621 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10970696 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118099397 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164319442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089629144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116914102 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160960217 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125137213 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122963863 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964689521 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090793855 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223859809 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109073081 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170960093 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117502627 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118911593 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266172768 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112396886 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126963102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166051344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113953593 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103336832 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872816842 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124986464 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101057711 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118906586 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223447768 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163463238 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119638326 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097513943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119233121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161505234 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229129809 seconds)
  done (took 43.971507427 seconds)
done (took 63.495973927 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279188671 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217220587 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268891629 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170977918 seconds)
  done (took 1.899061559 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172455948 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149922148 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121367276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107109444 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151809988 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085468607 seconds)
  done (took 1.674666457 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362516938 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276327541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246957222 seconds)
  done (took 1.777651941 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319811113 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251188788 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471927324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324337962 seconds)
  done (took 2.356504958 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211878307 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133808146 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111331869 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103790999 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198579464 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247490554 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142049906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202813765 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099054108 seconds)
  done (took 2.387410935 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196569428 seconds)
done (took 11.179347548 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.186781881 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.17246666 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.328261293 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189096102 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.218150721 seconds)
    (6/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.248954548 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160542804 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092881475 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123640517 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123242753 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153390853 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12006593 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199743656 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19173731 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126774438 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116111258 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.150530485 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.185704816 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121754517 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.158215558 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.184568654 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109697087 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.076387333 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149278954 seconds)
    (25/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181225228 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.170120622 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207221989 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102512401 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.20469584 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.137230951 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188384851 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067870837 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118200174 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116319806 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116504432 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133966134 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097078664 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115984154 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076584703 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110464702 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114365281 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172663257 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.251794737 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113394659 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156486068 seconds)
    (46/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.166511658 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193581094 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154564598 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144152178 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.118311163 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.228212475 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136289115 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141351868 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.163522151 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.149797281 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117086116 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221971943 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110687021 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24629164 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119873453 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220187757 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109033343 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172440132 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09082264 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.182938435 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.167818701 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115767934 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087785639 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116789441 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066926959 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122973197 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133534132 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129944215 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18553009 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125381281 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212733626 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.145519176 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120479767 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138797935 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110577164 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185137149 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199930094 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066747761 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117783139 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.086819859 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189564783 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113993201 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113311819 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.192122172 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.17311501 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119951215 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091897344 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066105936 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153676326 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 0.172223877 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119377467 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085881291 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187080741 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066704077 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110971671 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111458404 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173016045 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067882977 seconds)
    (104/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147414555 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121370236 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073373617 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07233237 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106010015 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118923853 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118511819 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099848605 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172840382 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193602619 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085864688 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111343787 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067508322 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090621449 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191683201 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.174070434 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133901091 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119079254 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066680076 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.341204784 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086250856 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.186304722 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067434792 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119056843 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120583999 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093070332 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077279008 seconds)
    (131/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116258274 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101294789 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114695867 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173809607 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093310937 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115150486 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096588171 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132219577 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11943527 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107182654 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212935032 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11767331 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085802412 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091651415 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.076126946 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116290429 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222275111 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067032878 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109112007 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085636813 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118583321 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091239896 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132043352 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.151919515 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.197249873 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091007214 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094354239 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109374587 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108666907 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091109886 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067426199 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06639864 seconds)
    (163/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116984213 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184339926 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065797475 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10953623 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066002207 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137054197 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066299639 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096887675 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136707725 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08968435 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093895719 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138772393 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077568966 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115797078 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154882178 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169860101 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180160476 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092937233 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110021383 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066580805 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078016902 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111107031 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118562596 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067565567 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090873601 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.131142339 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.13177156 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08482193 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118227111 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139348481 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195688242 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110351015 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.165994021 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099475435 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093272895 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195447803 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118899387 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.112540188 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11972178 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078078321 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111216628 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.134111452 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214805264 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08728153 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121961453 seconds)
    (208/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092146894 seconds)
    (209/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141116944 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091437876 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116643155 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075658356 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11896868 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067924876 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110223594 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086084952 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112169067 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0862991 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068125546 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.18251636 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179435137 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124195367 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224500813 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164660891 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111195438 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11198662 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087070489 seconds)
    (228/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067732231 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111396864 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 0.188725171 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217679037 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177120947 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084697383 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116791518 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113574622 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090744922 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107284529 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149035454 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10034391 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110372951 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086302584 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091918645 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139193401 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109956404 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.122071906 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124332769 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068702096 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091144496 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086900805 seconds)
    (250/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112622314 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095013321 seconds)
    (252/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091267098 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067470079 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06800732 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173145012 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117125805 seconds)
    (257/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077694103 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140046113 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069014003 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125376373 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069340005 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096471355 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135978949 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.141247774 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08900809 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.137365217 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092935595 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092888714 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087959149 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114581811 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07986586 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136288878 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153742272 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066580781 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068700775 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092226354 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096465886 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118690764 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067253913 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066755903 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113693583 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178586742 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067968269 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119142923 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086170412 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110799563 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087453762 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092311265 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087989694 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109198032 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068194593 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085461641 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091150873 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094747923 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119059201 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067361233 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111974254 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102575588 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109572035 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133121775 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153841511 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117644004 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077155659 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067029378 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111080188 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092191966 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117737526 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088556174 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092859584 seconds)
  done (took 39.683070906 seconds)
done (took 40.575480991 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099873259 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148907311 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09646405 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136145026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125071561 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091570091 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119436368 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097910343 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124384583 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125620568 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097879171 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093865049 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096666124 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121016221 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096876245 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140020697 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125116192 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094429592 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120500875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086489391 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119430878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086912164 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11335374 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07001465 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122853815 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094124378 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117020701 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119928431 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087234679 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111255237 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089809807 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118580992 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086289331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125385792 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093920475 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119952654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097926302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121109828 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088895667 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110809057 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118988039 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087488269 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117877715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094724646 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117154785 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092016482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119502596 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099382079 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139895798 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11569476 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095510837 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121854192 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096926602 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118161763 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090693401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120013203 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09209075 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140236033 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120074078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092547789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119159643 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094627593 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116594292 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095997032 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119391475 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097362428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121999849 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119131512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097132568 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118901222 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086834766 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122651362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090599872 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111196242 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096364551 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122481171 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086342165 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116943327 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118520684 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092279586 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110400136 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0898155 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112464188 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092707289 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113852486 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070331453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090556234 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118048809 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110105024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09610018 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117715679 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093684401 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112323197 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098731954 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111168062 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092623295 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110947481 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088081877 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113450063 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091350788 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111781552 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090513912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120446033 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089798583 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117880708 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123794084 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087573089 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117604354 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086395368 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110711826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101299153 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121488204 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087931606 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116359575 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086879026 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119695917 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086380979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111471798 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087385327 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111796744 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092654452 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112666814 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089773133 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118588057 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125824351 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087257424 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11466697 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089604397 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110961069 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093138464 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111398321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087458244 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113300462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078209534 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114253894 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088174028 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119031298 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089726637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120639442 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088992358 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121687558 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091979394 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117411686 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092501283 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110405083 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074439059 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117230765 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089886783 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113671442 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086805678 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11316534 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08753744 seconds)
done (took 17.00017872 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086987963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185560039 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151890944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143768326 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108058341 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111955668 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12254 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119968569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113931434 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143524163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110286386 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132550919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148822883 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086906696 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112686709 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092409232 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113222882 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102810389 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146137106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133032017 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166178278 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086831453 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147657438 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13730961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121185324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115379886 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113514787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091345232 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116076761 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103879086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132982013 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091465728 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112627793 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134809863 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10507745 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120602592 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08755595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119485455 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087446088 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112240897 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142182106 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109439303 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117656013 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118160909 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091406275 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115368138 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08897774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122190207 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09943856 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117777674 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127057226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156261743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091522116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12249156 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087287859 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123686078 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122550493 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090811944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113122838 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090630842 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112700494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091386718 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128092844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142428254 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091730604 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123863966 seconds)
  done (took 8.657662093 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10544835 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140375822 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105071229 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148189821 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112212117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088539913 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113644641 seconds)
  done (took 1.772673777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088183696 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134867357 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111842376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136522679 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133329971 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108286792 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124145327 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088184364 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131643868 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089951818 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134884454 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152915467 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090033777 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121674889 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139287274 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088105424 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138253446 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089123621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117798136 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112643469 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116426589 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135456247 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090605768 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115034685 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103302563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114259414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163253686 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093816882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116331615 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092046613 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113124421 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166888408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104906787 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125231622 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088879475 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129270844 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128807635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087289089 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130856759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094103292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128621311 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089638558 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115249651 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087310417 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118867258 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124887928 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090829848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115815702 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092468255 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134905343 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089859935 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130049885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08918247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118671583 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091334978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120487702 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123934006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090522357 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135088822 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090495657 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132152729 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105490796 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128359756 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131389563 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092023666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128489805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103127732 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117828334 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091139108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118248519 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131796148 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087000753 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116244195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10003203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1166813 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11380967 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138129793 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090426867 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125435023 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115112065 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090330655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114791477 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112960547 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11934584 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089006675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120107186 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092198478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113291461 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088689041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118364697 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088018275 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116403888 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092769075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114653605 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1173022 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106251202 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116133355 seconds)
  done (took 11.875759655 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090162178 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115536142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091769482 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115723358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090703087 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116272751 seconds)
  done (took 1.595058116 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114792865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118179599 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10538184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121592031 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157781608 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10403605 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130380648 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124555551 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108637681 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128763655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130799827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105231033 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136042815 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121792987 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104326124 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121926278 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104678382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125876911 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12793828 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097075308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138012566 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122138572 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096739542 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132970594 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118823422 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096820248 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126190136 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103344465 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128193187 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123614515 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096551062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119328771 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09692134 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123666045 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130755354 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097064725 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122404217 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119260632 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100833795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118826121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105581647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122948821 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12768632 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094809541 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124800629 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121856178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093816222 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12648171 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.1044309 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120045417 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120819439 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095681393 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119602161 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094783178 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12267674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123709708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094575317 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130863591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097372407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121775174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119136315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094148278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124941185 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093558548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130355522 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119407672 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097259214 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122245667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122567613 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096093076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119942039 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093017561 seconds)
  done (took 9.277619194 seconds)
done (took 34.13371026 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68504856 seconds)
  done (took 1.659254574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.719365954 seconds)
  done (took 1.694964964 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.187742291 seconds)
  done (took 18.16263481 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498612756 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583370077 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.889272522 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181370787 seconds)
  done (took 3.129492037 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953354845 seconds)
  done (took 1.946435492 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298028413 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260732885 seconds)
  done (took 1.540282801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772965787 seconds)
  done (took 1.759845156 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.368833156 seconds)
  done (took 2.350084489 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332883325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185958803 seconds)
  done (took 1.505343582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545225587 seconds)
  done (took 1.533099965 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.102373124 seconds)
  done (took 8.094472256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269510631 seconds)
  done (took 1.265876297 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303779619 seconds)
  done (took 1.292560215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.518060018 seconds)
  done (took 4.511202863 seconds)
done (took 51.429175404 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099036662 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127998286 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101706295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125525652 seconds)
  done (took 1.436969564 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10104993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121855546 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100157297 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120905187 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126675172 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096665429 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123569742 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100846968 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121207894 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096522015 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12120523 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12009645 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098715308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123278038 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093923401 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124430797 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099570787 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120928441 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125335924 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097330412 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119504168 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097714445 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125104064 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094549908 seconds)
  done (took 3.663133333 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100053449 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119358167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097191226 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118347421 seconds)
  done (took 1.432252365 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100761044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143025649 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139495389 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100778039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143819965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13680255 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092059053 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117528431 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094214308 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125698259 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090696055 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149496853 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138387297 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099465555 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12846614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089795316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118118111 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137248369 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100516927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12693268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095032061 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126033151 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090985939 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140885748 seconds)
  done (took 3.818054138 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170313841 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127629687 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139419345 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09485922 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160261491 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141558342 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088115391 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141263839 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088528685 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131543687 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11935799 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132980991 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12964728 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088438456 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113973287 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087561243 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12967527 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129808789 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090979779 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127993792 seconds)
  done (took 3.430017332 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097761026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.1177634 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087748914 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116953706 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099159041 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121484503 seconds)
  done (took 1.639461256 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091704047 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114894471 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089282634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115049767 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093879638 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114743493 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08881279 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115483672 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090702207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115155221 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089485227 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11386711 seconds)
  done (took 2.231263872 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493933399 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117616093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118704389 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088779858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122946156 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089408127 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129807969 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092144214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141794447 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089457596 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116793667 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091052045 seconds)
  done (took 2.689624399 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234888279 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126702482 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288397728 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369850119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155771199 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178871669 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27898836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161472751 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225345978 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16743811 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204491062 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224810462 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15351213 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190684586 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138752595 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119009062 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232785096 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247294275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154530058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209899409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228510761 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168049774 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179737188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151306063 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138789673 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17288845 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095452838 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131467949 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234481419 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176389851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189664043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188384977 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12089894 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23776633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253323954 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220468586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286932496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108978755 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177093232 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168055797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263696511 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138621468 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204445001 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15749844 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132567022 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19167871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191937356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17730538 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153369177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112920898 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223084102 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239670597 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193938724 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137882451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304387779 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15010649 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175217791 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222068375 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224775478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22722582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19017414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121519111 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190752714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217907092 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186106991 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177293509 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180837481 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149371039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228862741 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189879862 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1670098 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22123099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187323454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141545674 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171281501 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1737611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173399993 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259852882 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184121445 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123467086 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170589099 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150193834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133225387 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168827946 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125541434 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241894359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118126179 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164909844 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246205707 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15979275 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16169255 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205568252 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23119402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149984635 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085102601 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155769486 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155995168 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19570808 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141244854 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159933519 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163069478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130433012 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187569286 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096993456 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211453026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090845503 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201036779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184263578 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100641784 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161849316 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152652596 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151635789 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174040227 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226040383 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115670465 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134629395 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237169566 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179484911 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153146151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179668036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203636203 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146476717 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150816087 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199716132 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245950697 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140489119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204294062 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157416837 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136817751 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1329826 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181783358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154931604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162408812 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108126969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212638041 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207606476 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126543325 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111296495 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222918748 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13381509 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104911086 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164152612 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148979558 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140861359 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153482169 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154551911 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185000231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177581953 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155925258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164106163 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153413538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255747102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14309005 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151204418 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149701714 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094564635 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220099696 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200514269 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131007401 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206109167 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172228856 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232410749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170496636 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134797043 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177838139 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103325133 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121069674 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195199602 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16818263 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161120551 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223665633 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203160126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207671574 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1845829 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175656453 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174571931 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166725555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157285498 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139669315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161501731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173193568 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097199123 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144849909 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135067566 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149729461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14398365 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107232809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225361253 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170764419 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217743728 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133134942 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151084699 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182277367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128497712 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173761791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204762445 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120679923 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226778574 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195109795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187907438 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144304874 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229993669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094424294 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126851054 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142836298 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172032572 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133842657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109127049 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165031597 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181672947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208160641 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178094874 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239057464 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174302942 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191052895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122224282 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141187365 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21242236 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178330252 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189279947 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11644198 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150667634 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177764953 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159030882 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257361163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169066794 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176691214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237120828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150332212 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104813484 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151974643 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223574515 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155197773 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178782211 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147092253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114313188 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161861788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134241198 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161433611 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211936274 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162905397 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189600631 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150684445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185874095 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128744022 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164714734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160328145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166743678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081420773 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202842998 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20635312 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149978998 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168869906 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189419264 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132458909 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30683255 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242500148 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196735432 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138566852 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156548322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1617969 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164707889 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173571954 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179396627 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160315341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188189842 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159846137 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137496327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140288188 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12145682 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150711063 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132199184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150284436 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177522309 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140359117 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186345509 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163895887 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159999216 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173036742 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151220406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145741688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151369849 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216517172 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184154218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239449174 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150561341 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181757295 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234533234 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099730398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132907913 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133903842 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178395026 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10942649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220944045 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188838389 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231873298 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18243525 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195253812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140870473 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120348243 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129524424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201434591 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209878066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1538306 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161741743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232721871 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120556535 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133370397 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179790891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294732156 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143639392 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224303505 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081324533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282597376 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124662596 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106207627 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164913042 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237734843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13689594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189147129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173306076 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171821181 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166571586 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151360065 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192434594 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245341397 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203951254 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180749501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133692774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157326143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178732523 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220747933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158659233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113488246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232168792 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196548959 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197726968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143330107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172615917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169343859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160023567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21351271 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107939212 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234952447 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107777173 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223761596 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154250543 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145229255 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177790215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189889406 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142094444 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188354621 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212369996 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108461635 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134876306 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17082655 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20673576 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158186193 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100777816 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180560482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126273588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196378893 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26126774 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135722154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156494772 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148905744 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108959976 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156190952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159193236 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142524039 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163448571 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205608611 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136518621 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193655413 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232575348 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170880634 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175464133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147040321 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695536165 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131493371 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197373078 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161113255 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235000111 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12282982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174001794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158559859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16920354 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22591147 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162179499 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232266561 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195591106 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206730703 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105593775 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159581163 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165139971 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146407965 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152999834 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169669859 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161215519 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155114923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179511294 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170983709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135864048 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140272183 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202268117 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160451348 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182441348 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180053197 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140881124 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174209674 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217830392 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106793972 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208177318 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209600362 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144025729 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152360401 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133736455 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157868415 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235352697 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124531682 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234580906 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18769727 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158813848 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1705736 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149003521 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195633114 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156856306 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215242304 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149100645 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160338934 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128824096 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138048396 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130758452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155937036 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169721935 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150176761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159953424 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140356549 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21982221 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096468491 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145803464 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293213055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220265746 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217397225 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13674702 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107900482 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163314882 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15323137 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205983309 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179955278 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108313464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138341607 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138360847 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133530552 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136243903 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15584058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199558985 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167024168 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235888692 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109831372 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280182218 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141049219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156787143 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089803294 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131736163 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15268684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14727256 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159693634 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194023989 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265362355 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147198299 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106946469 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151599254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125648394 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109193595 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166194224 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163833873 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177533089 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146218506 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109412695 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158244758 seconds)
  done (took 83.737736497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165892941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132527341 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148347637 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202740688 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177878874 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269585115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209761439 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253921582 seconds)
  done (took 2.653296386 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093685453 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146430326 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157452567 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13366882 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091833146 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119603801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344856952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132824928 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116189835 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121253998 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173974007 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093160029 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550044554 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090347101 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119442094 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107298871 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091594028 seconds)
  done (took 3.769161488 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478002763 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.716366831 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511782857 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09772578 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.193013493 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112865616 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.78519052 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196085965 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114756973 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484379456 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774845413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16568549 seconds)
  done (took 18.72770153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099294568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121965953 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108895751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135689068 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095961085 seconds)
  done (took 1.662631714 seconds)
done (took 131.873099502 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104416062 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405050667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072170628 seconds)
  done (took 1.60787892 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107826966 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137115282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109043266 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136307403 seconds)
  done (took 1.595045458 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098218265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127707065 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109610016 seconds)
  done (took 1.434814331 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323902837 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192393071 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.162226452 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105857231 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130125953 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102693205 seconds)
  done (took 1.441317604 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09732429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12870111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098505071 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12938713 seconds)
  done (took 1.557735752 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094988541 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071164519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103430052 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074842371 seconds)
  done (took 1.444505155 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114391623 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132310266 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104437741 seconds)
  done (took 1.457436025 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130140426 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139603549 seconds)
  done (took 1.377216239 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106479424 seconds)
  done (took 1.210046187 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117908591 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170616265 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190604033 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166690912 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234831426 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166331607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.1425842 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115076595 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132190213 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144059327 seconds)
  done (took 2.68715716 seconds)
done (took 17.693774308 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103188298 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518136867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414223162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116695154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722785063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381620608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.084211758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146491642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166546957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093707296 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139869162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671721531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038475846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468150306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996676996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371874174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677051873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121054723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120250306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094029025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.066736656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092666218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121625815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093274075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702740366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426888838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095775012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371101512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092829375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127738307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383127795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124045606 seconds)
  done (took 17.241656864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095296036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174089065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098671798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138651871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123538891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094769301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125277294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09393923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18062384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122880165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111994726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122197638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127117102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095830506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142170038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092849428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125587298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093889488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12107252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122852344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112642064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120994292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094324505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121566675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094300252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13609456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095122447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121698688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121204491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099962604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127613264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095321382 seconds)
  done (took 4.854346339 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141485905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183892471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128493136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127054591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170022194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123692419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200747255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118740877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183006147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123909654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14029325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093385331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156799338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096020998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143750983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121931481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097319741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12281144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09286099 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122685151 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140380206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093779349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123066923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093635975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123349673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108595432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124183026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121098738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094100894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127097303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10115377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123441784 seconds)
  done (took 5.179367949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097478602 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127081879 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109085286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138220463 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095674517 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125803269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09766071 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12413485 seconds)
  done (took 2.030290972 seconds)
done (took 30.406355805 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111773508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128066098 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107857628 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134426475 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102964842 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132401258 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092183976 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133951557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135044821 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102617314 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138109038 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091636101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123889072 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092305205 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1349706 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097754884 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133138891 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102721635 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135589188 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133570865 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094982557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134671844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103284477 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133463847 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104356615 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134431711 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138708865 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099872578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122813437 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094834891 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125134041 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104231854 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124339435 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105543811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127448683 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097653409 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123801697 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094695148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13337841 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134037884 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099839289 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134051288 seconds)
  done (took 6.037803546 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107543279 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14057644 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10564484 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081621677 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118101377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081011938 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138472931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080000099 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111193294 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108888834 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074946545 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107101221 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079334069 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102082261 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077741355 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075897979 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109384607 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075731729 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076973734 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10625078 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080089439 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07264602 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108745973 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07966095 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075719324 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109887385 seconds)
  done (took 3.604272973 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10051383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135651707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122857573 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183878526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161389204 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100909848 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132269674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14086172 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107960945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120749922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096083542 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150656577 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111051223 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130015627 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121972255 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108215311 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136482145 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094291312 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128963844 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112998858 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139333608 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103314387 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143743732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133916414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092935268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124126807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097539421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136021998 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098548348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132256597 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127398606 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097173177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123781637 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104939363 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126833327 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094609814 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142441631 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133064199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102032167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123229467 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096060739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122125669 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113231428 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169020375 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091901767 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131890079 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129092702 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103756543 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121501858 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110721674 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131236393 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092837133 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125640449 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092542107 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122202057 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107702738 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124680395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124403313 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10248136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124624652 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105531096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125981766 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109191939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122509208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100418195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122352846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093910651 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122243681 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145794227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094975526 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164323107 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093689321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124384447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102408623 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130746258 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129526074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093214714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138362289 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103322136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126561142 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102871464 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127099555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09619839 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140766917 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125310462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095598309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123659599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099929135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124572709 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094979576 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137715121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093182425 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125399998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111332447 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122045731 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123684835 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099573843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126607911 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092731213 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135625189 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099047284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123697105 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103585775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122009116 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125788258 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102756656 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126902307 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09250968 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127963137 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099361687 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122802068 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093532296 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125335786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095163373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132922688 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100072951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127578043 seconds)
  done (took 14.910979958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227789189 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216548562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209706338 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265025301 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135580373 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11532027 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212081744 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156193759 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123846331 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16105466 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175135825 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182221522 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170874582 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182625048 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171305144 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092840165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142288476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134423451 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247085909 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260119933 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143601343 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101574227 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162529443 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162523696 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138017568 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133056862 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110796032 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135079335 seconds)
  done (took 5.832224161 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109027623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157951562 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098609363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145880209 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149250022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093644072 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127416714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094820045 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135364538 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137485971 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093765119 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129965666 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10040391 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133465109 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12395943 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103009315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132731604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095217484 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126828781 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097019175 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130073167 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102610491 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126716113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092879706 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132076663 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121599841 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086828489 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142813622 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093322571 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144921513 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121518391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099958337 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133285728 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094211125 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12410957 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095475497 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125118335 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095761808 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125437177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092083648 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122763348 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078197748 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122335019 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108004363 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129571147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080209141 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130671896 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128594783 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095297894 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121249112 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096829538 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125999647 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097723194 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131023229 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099610122 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124271264 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096961781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116074231 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100290357 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126102483 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085010333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092667394 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128358879 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119188761 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102013026 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128012388 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092400705 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125994135 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097808337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129933261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09644414 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126570911 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092096031 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126196121 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096528844 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128200734 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09751968 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122588309 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094125356 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123740413 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075764811 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124121313 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074653215 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127124778 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09264989 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123042784 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096240101 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130311324 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138678144 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096093824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132676391 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095304476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12322174 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097673841 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113567331 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09650978 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139296767 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142073144 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094387783 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122283681 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107772623 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126467715 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093762972 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10720437 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101634774 seconds)
  done (took 13.014980133 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128714333 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154566194 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095842824 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143204946 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157330992 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159151713 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101227235 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132178843 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095495152 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14254755 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094685891 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134391923 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098799873 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137889771 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15763827 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104606192 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126793629 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10932528 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132848764 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172372471 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113043525 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143164911 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108419675 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124588383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09991832 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141341518 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162456531 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108719707 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137845908 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142798326 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108514806 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161332879 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113311195 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128634653 seconds)
  done (took 5.525273593 seconds)
done (took 50.036855827 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211984694 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.453807664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207781514 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127893475 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.217127803 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220293427 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.241736379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208041993 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.213295355 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.211850297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.476108167 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.853558253 seconds)
done (took 58.783865469 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.314071877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340733841 seconds)
    (2/2) benchmarking "String"...
    done (took 1.472041456 seconds)
  done (took 3.949812646 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.629447044 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.163584066 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473661686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208537976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.213157412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495686717 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.866607664 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.577038979 seconds)
  done (took 28.137062329 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.210717837 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.605200997 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.900883518 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.917488475 seconds)
  done (took 18.774532791 seconds)
done (took 60.948818654 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.194131703 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.255510189 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219190718 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.208532875 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.322820192 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.246345306 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.536935441 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.266377463 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.234686735 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191351458 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231209173 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.229203993 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21424083 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.587006576 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.227513045 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.217548646 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.233781877 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.736108287 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617843472 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217376049 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.245035784 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.262368792 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233202738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.219003927 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.271979637 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.217396537 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.210699182 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.22957764 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.818245834 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.218019374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.272562871 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.763515388 seconds)
  done (took 191.290027682 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.211489049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.358967435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.411324216 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254512184 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.840419938 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408333598 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346978741 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.898901012 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230939471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215207208 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.536404936 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211928125 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.607454454 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236211457 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219945366 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.321655747 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.429486342 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.569093747 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.228762164 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.487560773 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229825462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.532236493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.480098929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.463686288 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.251187028 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.29352435 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228670328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.239021856 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.411464779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.358418955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217381138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233062096 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845685896 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.074408845 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22450342 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.250636296 seconds)
  done (took 151.500905687 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.492835787 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213751778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214172432 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214238427 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247210878 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213119982 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213364121 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.80018944 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805053378 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716476666 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.463677477 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.6125735 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541181781 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.218669516 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309372758 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227689346 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215872499 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229858306 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256775886 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219548364 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21568118 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800900685 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231439866 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313576627 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.406939476 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229730306 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246507051 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.606197587 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213756004 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247762423 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.545627521 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262713612 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212990253 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.612858709 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.427937024 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329945932 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212201648 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212636191 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244185836 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215072773 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493364459 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212215808 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212291103 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214474102 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211798491 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895886952 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217078836 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788762283 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216839768 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192859194 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215635506 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211584949 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.441245145 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.897399463 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230635992 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209923029 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.2129987 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209816054 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210499453 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24278276 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.437976785 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30869506 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228750568 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215108693 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242976336 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212755904 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.213675354 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230602455 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.386905435 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28422983 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.33103112 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780399268 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217080048 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309070712 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33200702 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.212069982 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211700813 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212454601 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212652741 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32235171 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.212694139 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.627699432 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386518072 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228934509 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.558257836 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313261468 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213134302 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213003873 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601581848 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218960084 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.212478635 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.017629678 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314439389 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211939838 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213805973 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213511797 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.629779417 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785314903 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466121431 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218086054 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.598281858 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218738865 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647862939 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76098778 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908235862 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218436284 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326142675 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387781729 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.23062809 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213434423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.556749189 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217396198 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272007058 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212547893 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611116646 seconds)
  done (took 366.750719352 seconds)
done (took 712.180284467 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.861387729 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849437046 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.965015419 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850053844 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.804174467 seconds)
  done (took 10.474214417 seconds)
done (took 11.622077062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397374939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397804305 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271867414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398802153 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242234783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41805373 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378331656 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234437509 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31457947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295363866 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313065074 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26735093 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241739428 seconds)
  done (took 18.315752742 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541793063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561599441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278532592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541637651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255617545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529170454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413255484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424274353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431772792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24730922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227283282 seconds)
  done (took 16.597891651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526345235 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535230421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281690337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544970378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256248937 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547220329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416557747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428344079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432440653 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246447835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227798527 seconds)
  done (took 16.587023784 seconds)
done (took 52.649572986 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222456137 seconds)
  done (took 2.366808743 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259138375 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422314048 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244477921 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23082701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.226273053 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225492942 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228811431 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225284974 seconds)
  done (took 11.208740281 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.221640615 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219781545 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.224552602 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2244469 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224464993 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224523463 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222390718 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222055982 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224585211 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221323916 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225698971 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222854378 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22491828 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225721253 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222045627 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221814609 seconds)
  done (took 20.718246582 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224909641 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22178196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.222968025 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22342004 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.223412788 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223549438 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224344611 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222721281 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223961963 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.223206983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224108497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223773135 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.224345677 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223192905 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22273247 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.225148827 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.224203176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.223695486 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.228834397 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224090242 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22423427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223896353 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224596001 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225512888 seconds)
  done (took 30.525196691 seconds)
done (took 65.967069263 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.314014676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.907090126 seconds)
  done (took 9.367903539 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22706647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224866278 seconds)
  done (took 3.599994802 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226326768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227274857 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225594353 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225747703 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.226337508 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225794903 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226457275 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226155891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.225290588 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.226007392 seconds)
  done (took 13.409645168 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226959291 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225395483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224452276 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226570922 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.227178314 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224013083 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227261421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227218537 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.227644377 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224457221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227579731 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224514445 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226378116 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2265117 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227191163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225860009 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.226129887 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224331387 seconds)
  done (took 23.217457086 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.227075988 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228021171 seconds)
  done (took 3.603516391 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.226822599 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225355881 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225102715 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225463884 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.226161395 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225829935 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225090074 seconds)
  done (took 9.728188498 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228535941 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411168848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494416085 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810869041 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22985474 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232428282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112983084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232168922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234946957 seconds)
  done (took 14.134989048 seconds)
done (took 78.214207895 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.241114878 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24116342 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.414006922 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.239878663 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240912448 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567263439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244798664 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351881392 seconds)
done (took 37.695525237 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.236781786 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.965974565 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.971229525 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.223451117 seconds)
  done (took 11.312537393 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204561512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.148994921 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207510851 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.238637594 seconds)
  done (took 17.950695773 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247727023 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557631192 seconds)
  done (took 4.955353264 seconds)
done (took 41.611220269 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230562887 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231416096 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.228362292 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228806228 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230895299 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.229371365 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228383327 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231383152 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.231279208 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.231296123 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.230912168 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231450039 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22724055 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227863471 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231488216 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231549346 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228595101 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227408968 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228842154 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22869456 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231828303 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229292003 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229416813 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232630317 seconds)
  done (took 30.670664858 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232191067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229962227 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231420981 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.23144767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22972447 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232781023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233035873 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.230140259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232501557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231716805 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230159666 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231763479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232468359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230244787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232007811 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230609914 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.233847866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229413977 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233016485 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230418526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.232678224 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229755189 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230326444 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232897841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230822889 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23016529 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233245026 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230311399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233290003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231180309 seconds)
  done (took 38.096980001 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.239689897 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23928213 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23338416 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.234134854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233045262 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232877167 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.234148208 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234379399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234309882 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233995263 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.234602875 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232979912 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232923135 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233833299 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233261623 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233681078 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235405234 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23492987 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234822298 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233513536 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234313966 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234408779 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233221881 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234539611 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.235162425 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23357663 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235068742 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234646325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234398106 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234707127 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234675444 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.236349762 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235971993 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233916002 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235806703 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.234445155 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.240571095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242647202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235333514 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236129864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235388803 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234343889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235560358 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23596754 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23622747 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235727601 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.235411718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236244375 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.237223313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236971894 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235261928 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.236997304 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237323305 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236054368 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.237359594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237902766 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236581983 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236558984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.238119365 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.2366219 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238247953 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237954179 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.237860994 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.237595542 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236774583 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237485324 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.238192155 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237754826 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237679506 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238237353 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.237916799 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238645762 seconds)
  done (took 90.136826442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237620647 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235197768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234819541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23607352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235304686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238062291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235326646 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23744195 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235631268 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238821762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238501257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236624496 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235507294 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238895054 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238230794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235807052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238153644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23631107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.238323744 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238769664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23881521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236717402 seconds)
  done (took 28.37256833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239229858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241721366 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236132889 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239411781 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236169173 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239437225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239882663 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242301959 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240459562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238137752 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237118585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240954072 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237260496 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236757397 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236484779 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238239494 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23964947 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239869198 seconds)
  done (took 23.458760923 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242646591 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238160409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.240020651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236816222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238741098 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241265827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238428679 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240603602 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.239958985 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.239541342 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241755926 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240682379 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241881118 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239141977 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240100066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238622781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241655714 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238159193 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242394901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238629873 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239416533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240810782 seconds)
  done (took 28.440715026 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241391304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242560983 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239484301 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.239198936 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239300206 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242065795 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.2414023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238116824 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.243188242 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2410322 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239107994 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242634134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.240736932 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240609529 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239287266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240103694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24240847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240972614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242657105 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240125216 seconds)
  done (took 25.976864986 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242331456 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243034576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24466828 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241846609 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242852403 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243106862 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243905782 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243675567 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243772903 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242889777 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243349233 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244208158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244359165 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243424007 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243763902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244852431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243765233 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243799461 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244444361 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243786661 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245560406 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244080997 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243512087 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245639039 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244855241 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244658433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245180972 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24532917 seconds)
  done (took 35.99448005 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244276774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24491398 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24246562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242496664 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242915245 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241274887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242997196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241970147 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244764021 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242618108 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244053916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244337009 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245577922 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245331132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246093065 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246284566 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245886726 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2431861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243897062 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242927671 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246215829 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246604013 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246920461 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241841903 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243997914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247417335 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243622775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244200534 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247492853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244307728 seconds)
  done (took 38.49661212 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264844777 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265435503 seconds)
  done (took 3.695702904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.24599205 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246258553 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.247516443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244785654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245144666 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246774164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24685673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244359009 seconds)
  done (took 11.134064576 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245529726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.247815359 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24697658 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248544261 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24785616 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.247497012 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25473733 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266927505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.24873638 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24939505 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.255763182 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25419623 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2487786 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247882323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247499654 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250450327 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248976734 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247921807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248210366 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.24993747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248705509 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249829277 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250901741 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246223246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251290208 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258133243 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272396312 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249475268 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248039899 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252782606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249692711 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.247271103 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249288202 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248960556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249657147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250270719 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25791454 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266874174 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254204802 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268045563 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251496958 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.248084616 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250521967 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251134749 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251527985 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250370584 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.251881761 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.248387655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250508581 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253026919 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257749311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249971908 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248602969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253999339 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251544939 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257542132 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269075357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253055665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259414442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2607803 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282408802 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275583359 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2530048 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.251788349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261964177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275312013 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258522923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26835923 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250519486 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252064601 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258239468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283456042 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277109609 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252896146 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252507213 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253078886 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251929222 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25445987 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258933397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273775417 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.250582355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25237606 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263734315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275609108 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253390084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251785992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252471911 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.252308284 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255214371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261946761 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271336237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25383935 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252558192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253358261 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254970571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251553013 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251801091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254876216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250072951 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254030792 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253547754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257246526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262346755 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254277096 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254227772 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260538685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273480811 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254627379 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259655604 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.25507763 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254331989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25574388 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260621981 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252757165 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257732378 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262978702 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254639793 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255741292 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254789376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255657286 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264839758 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280711227 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255663506 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255954536 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259723074 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266370718 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253886644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257516875 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.257283236 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253365163 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25372522 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257349574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257257978 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256808513 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25540894 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258060357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25400465 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257044711 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255141473 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256204743 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257446299 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.257711783 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.258439505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258161837 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256703741 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256845337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264130804 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276213854 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257937728 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259085023 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255941937 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258799252 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257185213 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257881644 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258507714 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257509475 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257820787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.257415547 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258049842 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258822649 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258800117 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259165658 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263592977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25871267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.261203638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257865949 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256920486 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.258833719 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258830159 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257772252 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.259529604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25740932 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261541699 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266438157 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.259179922 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.257514526 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26063472 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259344127 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258399085 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258561208 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261094781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266496429 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259541113 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264484264 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278024499 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259935296 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260239402 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258963669 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.259165529 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259941304 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262785381 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267274597 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272818346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284708295 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.261247467 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264099179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259804989 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266212414 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.26401145 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259925001 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260163942 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259506764 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258806497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259556956 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26095975 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.261274505 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258971498 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.26223857 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261244788 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26015902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26208451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261286677 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261716563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259148323 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261376223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261245149 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261135508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.259008721 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259685954 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261246582 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263050926 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260547162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267571096 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260154358 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26438973 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262579637 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.261361817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.261666545 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.263372265 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263860469 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.261602705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269527007 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280661927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262128535 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270150522 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281269258 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263691222 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265336444 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263780544 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.260096553 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265242956 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270562524 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263304652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263447061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.263339807 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263293205 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263508957 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.269586683 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280521381 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262772106 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263845589 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.265350431 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261589519 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265275715 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264698548 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.264256867 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264706515 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264036625 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264672899 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264147383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262953511 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263683065 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264398441 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267590922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.271584171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269085757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264484442 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267342126 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.265025104 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267736196 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263931205 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.264097244 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265697115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276570094 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288892458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271470689 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284905854 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265839802 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27067513 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.286612974 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.269141711 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265429657 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266348341 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26638396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26534619 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.265644576 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26677536 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267607504 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267446239 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267618813 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271097004 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268569596 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.266634515 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268415184 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266936419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26733604 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.265962879 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267570648 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267677047 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268362969 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265172976 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267608187 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272708027 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2871056 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266485535 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266564106 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26742814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.267621423 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267395849 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267216844 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.27024403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274622312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270517662 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274457926 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268933908 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277215405 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268852265 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.27122891 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276188151 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266472586 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267256171 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268605866 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267986069 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274936031 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28705156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26923517 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.272584481 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269003235 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267046889 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268799663 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266804586 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269726116 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.268688773 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276963343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288932555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.274136734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271313198 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.267343633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.268052511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270562248 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.268117713 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271924315 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268333617 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.270941571 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269560539 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.269101192 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270801889 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269861929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269690454 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267511921 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271852408 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276372288 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.291458091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274318512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270827101 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.277167375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289877022 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276674635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289662547 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27172065 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27014727 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271406302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270701287 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271096382 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.271586587 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271886503 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.272711035 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275900041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271061532 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.273273859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27224208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270940082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.271222521 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283052359 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295988797 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.274064062 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27551866 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269851447 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272820989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.276372721 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272236465 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271735527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274381033 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282087135 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280396986 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.273325116 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273165949 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274226111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272967666 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27431837 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274173578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273336811 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274103661 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.272700345 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.272863601 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276296401 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.274158926 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.274061683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274831552 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274605699 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281890474 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291583653 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27356982 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274919701 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275031392 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.273990062 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274193646 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274198022 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275608268 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275234501 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276279739 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281869714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280384317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277682546 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.274808918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.27549403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274056765 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2760269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274969894 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275071835 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274768373 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27523077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.274565278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.275354111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.274544148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276646272 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275392881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276240924 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278450522 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281512401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275354925 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273528718 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277005272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277224134 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.274361327 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27739716 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28205914 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298225941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286066446 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284263934 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.280033138 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276465032 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279222235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.283133928 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.276192371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.276696495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.276563949 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278092858 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276714395 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279654493 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276458927 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.283006725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.296303882 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275505598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285331855 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.296303531 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277599459 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277859607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.281150275 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277932982 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275530962 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278374696 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276012325 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284566852 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297002473 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279711443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279146741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278152989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.279947761 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283419185 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277812676 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279728791 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.276080121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278752384 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277312328 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278542526 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27586905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278142404 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277948974 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281582114 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.285496295 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276930733 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279820486 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.279204028 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280765156 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279728509 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278888012 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.278227214 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276841301 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278407424 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279533298 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.279555446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281472837 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.279916282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282336789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282006827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279430274 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283054652 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.288822026 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287978323 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.278116528 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280202276 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280732098 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282819117 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279495106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.279316175 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280562622 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282963275 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284132617 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281119569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.282175066 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284802923 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294613512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300734062 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281497674 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.280818962 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284501618 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281117313 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279777672 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281430567 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282281961 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285393365 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288860677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280888953 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288277909 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300452773 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284347695 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285522965 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284736639 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289947521 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284229793 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281964121 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282323846 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28696362 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297003135 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285045335 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292761044 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311591815 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.302301172 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283513492 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283107694 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281495785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285416126 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285623046 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.284937364 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.284555528 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284667874 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.282898445 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284059009 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290266536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.284284288 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.286325935 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284182702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.283306951 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285360197 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.281678347 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.284371763 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283109836 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.283309139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283251446 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.284515459 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284291611 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297479521 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30978499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286059695 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284429744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282458714 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287354184 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287628521 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294393086 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293085228 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284922449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285281737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.286008958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284186653 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283732576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.286029972 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285143013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284902544 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.282534605 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297263536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311060163 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289191023 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285230535 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284844268 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.286450179 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287291384 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286200346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284917871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.286820033 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.287580448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289534333 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286166598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28632632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2897974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294733758 seconds)
  done (took 757.994743998 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284014935 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284911487 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284503935 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284633873 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284663889 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284029573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284124441 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284674901 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285104599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285971557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284709197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28574173 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285858093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28485507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285766225 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285200316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286460488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284284215 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285718922 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284474895 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285836774 seconds)
  done (took 28.188542511 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.288901931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286215291 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286605828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29035057 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285752835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288200636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287307714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289727985 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289371995 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286313121 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289218247 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289566129 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286934936 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286918366 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286667932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290609037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289797288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28784387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289642265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287646445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289895672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28782843 seconds)
  done (took 29.546456556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289636685 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288796998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.289461984 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.286460093 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289529978 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287423269 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290150203 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289153425 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288959444 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.291194067 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288979726 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.291170484 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.297630269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.295236355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291498547 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.289987007 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.436497908 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.291482739 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.292339158 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.291288146 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.288889368 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295756696 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.308833863 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.288743179 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.288765801 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290168761 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291343347 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.292442688 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.29148517 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.292797976 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293668574 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.291833893 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291154668 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292893662 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.290298238 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293461066 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.296231214 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290728229 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.288687111 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.292506479 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.301645898 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.313026988 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29037518 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.29873897 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.312778034 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292846403 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296172308 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30056647 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.289171748 seconds)
  done (took 64.709188362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.294125209 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.292760013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289865205 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292140818 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.293182473 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.292917091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293156156 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291885636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290318248 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.290571938 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294608858 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.291433029 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290757678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291642793 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293592385 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291063918 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290676951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292602099 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290813398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291306279 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291061416 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293717438 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29357149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2923776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293240199 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290283407 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29180732 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294925387 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291700051 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.292026547 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294736792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294186019 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294740426 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292383255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291620496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295302449 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294652832 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.29228104 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295530605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29346203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.296389824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295193241 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295377181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296521445 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292445545 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.293593102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292730534 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.294640051 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293916916 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297122783 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296368521 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293434528 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296590938 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293682486 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297564855 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295835164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.294958437 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.292925089 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295952126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.293664667 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29393974 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296076657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294884308 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.297353214 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296747613 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.294537576 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.29487661 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297383254 seconds)
  done (took 89.178274336 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296643836 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295389446 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297812822 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29657447 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295668717 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296944809 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296669717 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296540395 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296329113 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29715795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298291634 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298232851 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296405468 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297301599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297017539 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296740692 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298333355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297968752 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296745887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298525842 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29853803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29759218 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296972486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298579233 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298146757 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298087903 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298331134 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298925192 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298086251 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29748512 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296855889 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298073028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296757292 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298821692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298759033 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298032957 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298406008 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297904485 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297350553 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299287453 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297927433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297792459 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298704689 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297888636 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298229338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29824335 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299554385 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298204341 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298024083 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298701776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.298900748 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299481665 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299201434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298663779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299891472 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.29911663 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298913433 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299501002 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298658253 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29920579 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300732875 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300532005 seconds)
  done (took 81.693470609 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300638866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300441051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297375641 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.297722677 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300318482 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297914984 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300545379 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.301303523 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30131138 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299830259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300903952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298713127 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297606215 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300558797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298160689 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298669508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299358402 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30055956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302170526 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298976052 seconds)
  done (took 27.209355147 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299538121 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302124401 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.300041213 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300468271 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30282534 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299495747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302444493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303100478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29917074 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304405288 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302610608 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303667007 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300520246 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300934272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30373375 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301327479 seconds)
  done (took 22.042390027 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.301216814 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304080666 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301270073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301339275 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300134853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.301402351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30265038 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300877123 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299961304 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303183339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303396135 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304076877 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304020131 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301781971 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300844269 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.305242034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300831727 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.301518763 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305561846 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304064887 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301448052 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.301710924 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303967681 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.304991423 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301850712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301902615 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.302181992 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301823693 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.302199526 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.304739417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.302173684 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303892088 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.302134867 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303088253 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304698137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301871018 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304510923 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305505235 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305458264 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.306388989 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304886581 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.302897803 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306588363 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.306388573 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303496886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30436947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303028289 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303347037 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302764048 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.304063273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.30728071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305224682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.305613536 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307321721 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307853391 seconds)
  done (took 72.908304824 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30718862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306405532 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303720835 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306587994 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307522053 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304733995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306070674 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304422497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305205347 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306396363 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306113934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309114076 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304695344 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309065457 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305128536 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307710397 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30562284 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304430203 seconds)
  done (took 24.732188379 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306722424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307931788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.308237973 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30469295 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306105333 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308950923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305731544 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309850899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30818964 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30623122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30557675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.308775299 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308799815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.308781281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305971035 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305204293 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308641023 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30887022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306151027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305231275 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309426275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309324377 seconds)
  done (took 29.984797497 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.306504044 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.306094557 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306489835 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.324509349 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326688412 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.330972483 seconds)
  done (took 9.123266085 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316097974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309136186 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306073686 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309977853 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307687812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307408051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305369329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308731951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310107423 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307548761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306380299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31004957 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310562963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307451823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309820148 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30983058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306554263 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307724915 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307440777 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309952712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306936326 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310508332 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306479408 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30741291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306941085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307383951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310698875 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308695851 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30841484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310174034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310568797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308543624 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310225701 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309560154 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311735243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311611284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309475762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311505289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311939303 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30960942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312308941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310968129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31142807 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310188794 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311833206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308751082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309876228 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30997789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309502292 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312792015 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311854202 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310369662 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313811766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314275215 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31333047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312700311 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309618975 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309930375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311573281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310936173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310221228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313942496 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30915537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311750433 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313294117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310066875 seconds)
  done (took 87.705546582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310759946 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311577465 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311139394 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311008997 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311620562 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311804985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311533351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312389278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310789596 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311306034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311042343 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311445701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311559731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312715547 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311725323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311915338 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311572277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312147046 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31533963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311482375 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31250778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311831272 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311523829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311684552 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314350555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313242205 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312789403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312554476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312660947 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312943848 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312158642 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311493411 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312869397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313431259 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31262104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314080673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313648705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313372109 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316178647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312676209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315104323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313900907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313308181 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314599761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313079649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313801696 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313282032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315043651 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314453319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314693304 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313660118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314209934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313297148 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314147688 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314627035 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313794563 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314106616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314108646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316684637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314600993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313806068 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317569456 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314775395 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314874718 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314475331 seconds)
  done (took 87.894249139 seconds)
done (took 1768.541128958 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.319664518 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.425740377 seconds)
  done (took 13.97587355 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.482645705 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433902622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315057836 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.348879641 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314635069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.313521718 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.333498314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.315689924 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.317103402 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316035575 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315057249 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504375745 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.369483541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316615351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316136731 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411139204 seconds)
  done (took 42.965423562 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344765147 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325954473 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.438146835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343160912 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344545477 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512996517 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380927095 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.323559649 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.50381715 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.370529765 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.943653668 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345798913 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322347514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.47580132 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339055816 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.512724775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.59197316 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.037216747 seconds)
  done (took 30.688528305 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79861205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.340333514 seconds)
  done (took 9.372737702 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.347930709 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.370236596 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.337018476 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.362855032 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.336392784 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.34638581 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.345512961 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.360996012 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.358016464 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.417234453 seconds)
  done (took 64.826206308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341975912 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322742272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3228249 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322158792 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.324158576 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312965238 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320583599 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318798835 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.18404299 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.460421158 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329850723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32958336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341418558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323190356 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.321412154 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358121433 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.476787097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321078751 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.320284669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.328809229 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.322916533 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409831947 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366095145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.323691374 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454617819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.203095511 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330656724 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328732494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457057761 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321690695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323502157 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323395589 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.32474933 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.940828674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.812499718 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.333814594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.348047748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330791481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322569984 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486578046 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.325170732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330143505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31624673 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.82421511 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.4578976 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.442077193 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.653640569 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348153669 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327387936 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387315939 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326297483 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.325372966 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.354294553 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092894631 seconds)
  done (took 111.49553909 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.369359793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.708101093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486275959 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.344443386 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964864756 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938016311 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336882856 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620722086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.382934505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317831809 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.652066972 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837941552 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340371957 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368645984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.945497558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390669216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333129697 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.051119096 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336659654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.318134641 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821545789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31949926 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.342974461 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.476782082 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359131551 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787581865 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.846531905 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.764800274 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33740971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.319038415 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.796348086 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33917529 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.325926773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322183884 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588506232 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68999592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686956792 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.342938481 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3342076 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323661038 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.337223897 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78508403 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.694954829 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.338880544 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320364356 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795974167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.337425378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.323457804 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.323629981 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524888146 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.953874055 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32025327 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.783936903 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.322046356 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.604293678 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37943136 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395973465 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818727267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340146562 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.396887759 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382053209 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.322485175 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329815695 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322470836 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326636206 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683737754 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.46176466 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32746801 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681814064 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818334872 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.345729815 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866226257 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.220239598 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34373156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.437555514 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322272551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.878967073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834194988 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.354453469 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321843891 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670080125 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.342289442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.652346498 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.338220363 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338410139 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836002148 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.331929286 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.36366951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.330830802 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.322529141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.960817374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322958579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617162276 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.391001135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323610833 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.322719276 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.332193448 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323601923 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32390622 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.322345649 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871943721 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.347353089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.302231487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339927545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322935354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330405708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.328208974 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.326444609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546943054 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.72656041 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.34987576 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324481226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.324375398 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.333191663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.495750052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.327001751 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.646096773 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.345805583 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323878285 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332415647 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945078972 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370107103 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325815324 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329057609 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.246085875 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.530924153 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.344678494 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325445238 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325389887 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.349190842 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.622694705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34532785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.372150307 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.328963123 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052023246 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342907418 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.341279728 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.621416419 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.337007423 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.26696924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.353114013 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326546597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63426605 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.599597494 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.370850771 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328189796 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.344699891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.015021038 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.385482944 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473811273 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346702531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369654154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526449329 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.747209124 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327604766 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.933312161 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.326699493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544736908 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32711206 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.649893626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827524027 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.344664776 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332512643 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042356965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.02983362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.973695192 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.334534163 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.662740495 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.276989975 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.799190991 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.327455003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327913098 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.752695395 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331459629 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33277562 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.329136032 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.329264089 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.468369595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501935148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.66792286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329151584 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794949829 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378819281 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3385193 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337344199 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329687304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.681762975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401260235 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.331233432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.330080094 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.33126809 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329691915 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815484244 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.230601228 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.330113153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484147746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9821578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349210894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329555551 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.874630385 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.583495345 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856406133 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.349131039 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.653400421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.35700282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369020463 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.918075442 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350111739 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817128366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352068264 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.331376403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934005819 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.347751312 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684834903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.330968625 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331491529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890506171 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.348822343 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331516605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.637825154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350649983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586210581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.331757585 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348036166 seconds)
  done (took 1109.455025068 seconds)
done (took 1384.015453087 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.333296741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.340183495 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.320842588 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339261748 seconds)
  done (took 26.585921847 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340735773 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337459942 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339445317 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.337040501 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341594345 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339361506 seconds)
  done (took 9.288261842 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.425368147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339510931 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337987604 seconds)
  done (took 19.354427822 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.552083351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.704746836 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714669259 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.694127032 seconds)
  done (took 10.919044688 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.340087003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340511708 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33966608 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.344490561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343281113 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344327101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342991352 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342961251 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.343957355 seconds)
  done (took 13.334683501 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.489569842 seconds)
done (took 86.229731355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.403703514 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.878232124 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.336421313 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.31646466 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.763017848 seconds)
    (6/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.912548929 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.619981239 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134861235 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.424621672 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376478567 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.438477872 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.361312485 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.033155715 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.321733685 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.372657391 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.401580499 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.192330493 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.714887615 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.339248245 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.781349264 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.260108665 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.208535765 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.987328938 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.001590014 seconds)
    (25/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.606808944 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.396089278 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.804813935 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.818075467 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.317193087 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.577521942 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.340329259 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.334823491 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442746369 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.014048545 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.440882453 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.456769526 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422453875 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363179149 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.520884174 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.482580747 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.240881493 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.745436661 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.336812605 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40172096 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.205793136 seconds)
    (46/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995950227 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.324311113 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.336893455 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.399681403 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.371200458 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172891383 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.776735634 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.398530922 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.317599124 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.207660604 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.46751573 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.509190295 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.624707758 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.296383279 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.44052594 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 6.336951222 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.107319224 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.317681383 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.212799092 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.522566352 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.319898469 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.622968271 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.41329108 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.473962667 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.318135423 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.360107859 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349375781 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.405636342 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.338779447 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.707303683 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.340309392 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.780369951 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.371974612 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.307090698 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357903839 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.318236339 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.336376277 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319673303 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.373144883 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.603925641 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.881544855 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.408872309 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368637599 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.436829683 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.375544949 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.781883431 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.375355271 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.414565065 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.292573243 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 5.679283119 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.343467717 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.340549445 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.339501832 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.329223347 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.454640573 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.474823647 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.322634253 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.330613205 seconds)
    (104/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.735154065 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.356013956 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.320739782 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.36151688 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.352085098 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.596182077 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.606585548 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.717873547 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.327598407 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.342002037 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.761812939 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.371006439 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.326641073 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.622406136 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.911676648 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.088613416 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366278333 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.351450068 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.32309942 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.471237799 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.264958649 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.860382202 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.556572121 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384271749 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.476818458 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.611489801 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.576377712 seconds)
    (131/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.467818896 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472780716 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.146005919 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.434426878 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603125314 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.148640433 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.357986273 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.874012531 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.453824059 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.613973575 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.446391014 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.489859625 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.70638365 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.92571728 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.768649176 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216152901 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.34287145 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.357429092 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.842141618 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.152514712 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37012258 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37102823 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.996284642 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.737090319 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.361307969 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.647532351 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.386217835 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.308214055 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.758649371 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.357665675 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314856925 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.328564002 seconds)
    (163/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.466274098 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.33228149 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.601556032 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.131727079 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.158077938 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.917926946 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.368009146 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.504094677 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.344409961 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.127806976 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391022231 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.266387805 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.331206053 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.824125475 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.346694339 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.344878464 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.221691659 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.397690266 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.567395975 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.342689471 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.411341625 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.794433104 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.406427116 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.326951594 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.432492174 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.386724081 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.761023442 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.423079848 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373789108 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.348579751 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.352994556 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.711050893 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.903629481 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.918596846 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.400389095 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.346216294 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.366492945 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.989185251 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564755996 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.115654632 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.37743461 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.989463597 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.353254447 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.375102564 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.373784671 seconds)
    (208/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431121883 seconds)
    (209/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.741225131 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.390343072 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374967045 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.714495094 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.396647153 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.332446537 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.404762458 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.855308496 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.516789109 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.957288375 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.373994808 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.004647071 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.367642062 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.379955216 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.350843467 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.349360544 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.367639228 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.366112716 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35100237 seconds)
    (228/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.05597881 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.323464164 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 4.405700351 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.351104155 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.329886628 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.45004475 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440766126 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.915301689 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.127641963 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.989354805 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.342147669 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.439752502 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.023421112 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.19837045 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.932522437 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.370671291 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.43266991 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.756225052 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.080297821 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.306849049 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.852844593 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.57756666 seconds)
    (250/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.491832741 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.359581753 seconds)
    (252/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.537152529 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.331130843 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.338721729 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.337822075 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.376615615 seconds)
    (257/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.193040078 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.829967859 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.353348393 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.085784847 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.363678513 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.735737821 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.437226898 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.012974824 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.464235402 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.996537569 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.368390338 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.331864963 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.413408639 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.418060339 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.748863754 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.39652385 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.340726858 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.65890097 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.461590133 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.647340828 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.372125968 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.447853398 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.03559116 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.325729298 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.418389693 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.337668976 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.891124874 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.436198198 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.160256526 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355003134 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.35426466 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.366668349 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.421236527 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435850212 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.028374417 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.466043733 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.339017818 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.197156637 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.378942454 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.334863727 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.413795815 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.973353796 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442936001 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.445272494 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.426857348 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.395474837 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.165486642 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.617712901 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.328859369 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.37690553 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381192975 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.410873196 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.349571649 seconds)
  done (took 1048.814992708 seconds)
done (took 1050.075769315 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.389550845 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3857101 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.366594843 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.389793643 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.479032398 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.38913702 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.379322964 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.371398193 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.417419499 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418631187 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.366837568 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.389412545 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370044688 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36773558 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.368134699 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383871706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.472219817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369269601 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.385355534 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378469755 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385486255 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.366800671 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.417539545 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.389772548 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.373341181 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.371824921 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.372801975 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.388553092 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.479424396 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.370860981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371045924 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381326917 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.473552637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368340284 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.36492845 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.389620345 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.381230931 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.379104239 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.373916963 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.401949711 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.910039232 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.388280077 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.373482784 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.37149528 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371915559 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.375920423 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372394703 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376996089 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385810979 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385184636 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.894182682 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402935531 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3720803 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37155906 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.382267851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37189878 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.37532082 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388910706 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.389890088 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388935749 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.457715435 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.377514482 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37390423 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.387567946 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379619662 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.930663808 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.385256218 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377175993 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.904828471 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.396087911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.931534897 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399391712 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373801177 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.386160705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.404078306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.472466304 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367737333 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.372135213 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.380995446 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371040221 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382518308 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387555186 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.379308549 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373688877 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38878421 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394739393 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.38314891 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.375636663 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.382036521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393190321 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.380721275 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384112567 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.377994393 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.369558622 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38370257 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.379002384 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376884683 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376391403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.380447237 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386222976 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.904664838 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412214772 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.371117142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.37267363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374537771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387766878 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.904611387 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394782869 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396212809 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.42272043 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.377115466 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.460879613 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.379074469 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394140505 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38415906 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.3795087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.370485147 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.46467779 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.900176849 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.409659167 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.377969658 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374811123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392926505 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.378541685 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372396028 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.479681897 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377836939 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391291433 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.497490249 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388150465 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.40859621 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.3743752 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.379573934 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398453854 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393975015 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409348981 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380233274 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394099093 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.392652925 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372816269 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388566753 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.38781909 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.379135746 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38317907 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371610976 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39933389 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390890022 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390441692 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.399124499 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.498381362 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.375955237 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.469350987 seconds)
done (took 232.870462338 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.434380536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367530912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.464741094 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.371473342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474931218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.474946544 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370323848 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370547318 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369516304 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.7531911 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.37034154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370151402 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.370682186 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.370049255 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456869963 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373287854 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.370111559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.716847349 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372173264 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.444960479 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.369852499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372127156 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372538286 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.75397573 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.36630535 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.366681431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.446022715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372827294 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.718491121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.373508063 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369450854 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716994063 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.462370384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390491458 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384005495 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.381185496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476294794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395744511 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457026392 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.457403572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46812235 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.411150759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371212372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.366841868 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.375465796 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3748226 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373461752 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.401767984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.366340602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.381390157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.718264809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375223825 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382623657 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374482543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.372778891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.403780462 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.372478064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.375496106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465366789 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.375267581 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438176412 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.756304566 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.756326295 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.374519452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.37304244 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374368583 seconds)
  done (took 151.133517109 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.442023237 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447571627 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.491495906 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.39521897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.42469753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495772051 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394647499 seconds)
  done (took 11.377024131 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.382848191 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376209625 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42574247 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425432671 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.377215604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.523558226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37730067 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.387381185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.373839502 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428385872 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.378472434 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377242594 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384348169 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.368740267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.424925375 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.38758417 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.491730605 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.378191933 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376983968 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.534279842 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385545344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375601537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.428968784 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.390712126 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379563686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383596853 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941158429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378161285 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374415024 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378218968 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375793389 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416722406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37921385 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.375657415 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375233865 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494111057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377799465 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376918724 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379328775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.372345892 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37867239 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.37954654 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379689011 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.377386169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379546095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402093536 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379870442 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380181786 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380326463 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380188715 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.429414338 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380034549 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377496454 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.377758838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.435509388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385251091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381058274 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376984405 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38173536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378619787 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536286833 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.427848729 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380310318 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426855749 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379933932 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380524483 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.380685679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382065708 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434581865 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379891668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426710727 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.378513953 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535946989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.403089723 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.3816885 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.383568505 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382215527 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379536308 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.378657354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.386150563 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377570922 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.382296853 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38615252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378914301 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38084708 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482523603 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48942698 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379709077 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395056554 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388008345 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.379690514 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.434047714 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.382007716 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379421413 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432621739 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.496031405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435332514 seconds)
  done (took 157.654489912 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.386064689 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.389864847 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.38283599 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399019544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.383606544 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.382059202 seconds)
  done (took 9.615029374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383953418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383545205 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383459572 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.383908473 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.383169758 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.384971176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38334188 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385589504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385767979 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.382399486 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383343569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.383999131 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.384514361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383100772 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.38304663 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382348175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384750997 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381746445 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.384812955 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383094786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.487567417 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383847978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384229887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.385437877 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.390760871 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.384395464 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392589679 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38470959 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383528304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393199574 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405167798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385772726 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38569303 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.390944234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.389490568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384602572 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388539331 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386857929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382995273 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386867626 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386928401 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386415104 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386183144 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38761329 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.387501419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.390715908 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.392497317 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393696439 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38594611 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386774574 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386955199 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385931161 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387551003 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387608249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.38696666 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408959214 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391734277 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.386557886 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387326732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.388053374 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389008071 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.388318421 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388904269 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390907192 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385251343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389953698 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.388605505 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39057505 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389083484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387320065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389510413 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385649708 seconds)
  done (took 102.27081973 seconds)
done (took 433.339436511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.391130824 seconds)
  done (took 7.689513222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.570758135 seconds)
  done (took 7.869561664 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.350717698 seconds)
  done (took 23.655205103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.45155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.50013391 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.411334075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386251061 seconds)
  done (took 27.047686148 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.476809574 seconds)
  done (took 7.774736276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380968937 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.395160558 seconds)
  done (took 14.075713863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.531401281 seconds)
  done (took 7.828990222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.012486994 seconds)
  done (took 8.317122184 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.406003729 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.40643602 seconds)
  done (took 14.380596352 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.361429644 seconds)
  done (took 7.659327928 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.508054724 seconds)
  done (took 8.807707559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.383253539 seconds)
  done (took 7.682420941 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.908246787 seconds)
  done (took 8.206436958 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.933878863 seconds)
  done (took 10.232414129 seconds)
done (took 162.531645254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.380956398 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.383761736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.38394898 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.382587121 seconds)
  done (took 26.829034031 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.423174257 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.423351863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424369731 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.433532285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.425690313 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423134592 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416023277 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4151005 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.433854923 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.426483785 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.42570229 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427756933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.423849075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416283173 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425302477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42455823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43378055 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.426133616 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.416091254 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.427898187 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.390812888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.435646466 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.425505948 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.390397305 seconds)
  done (took 35.432467184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.913716344 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463454214 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.545158695 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.44312949 seconds)
  done (took 7.663901055 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442706301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444430261 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456027347 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498273096 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.521529872 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.451724456 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418264676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41169011 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.398684118 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.445174453 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518610621 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.459702995 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.530036963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.390858504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572998056 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.391110853 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.391453204 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.443036323 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495048269 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.509225507 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392365335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444668922 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.44882729 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.460437478 seconds)
  done (took 36.236879249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.39106429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.409366873 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.390979895 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.390350432 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.399081551 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.390228336 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.391971891 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.391808687 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.391142442 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.397315287 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.390258226 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403180287 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.391710441 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391080486 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.397907643 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.392751735 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.398921268 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.390623892 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.391074914 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.39826124 seconds)
  done (took 29.1895462 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.385548731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.307362226 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.737454619 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641525768 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.386456803 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.393751101 seconds)
  done (took 29.154841588 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469334238 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635121893 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.39145949 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.783067333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.876522456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.41134244 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392261249 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.6503291 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.009589332 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008769903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.462855252 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.466991621 seconds)
  done (took 20.862123974 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.403885956 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.394176007 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.406507954 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.409916099 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.453403367 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.414751004 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400290667 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.38763751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.460500109 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.47397747 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.415853126 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.453068643 seconds)
  done (took 38.379000297 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475121589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437279059 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.484477466 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466399626 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107746294 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600899991 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442346453 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.840024805 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401608037 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662543399 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392026809 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486685126 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644915401 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392487707 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397147687 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.438466234 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637247779 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919254958 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390823023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720145497 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42242264 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389473396 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.733109298 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.429591595 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602067997 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.536218582 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651762055 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169598659 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70908588 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401898976 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401046931 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390374133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664195463 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099735847 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508035679 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401343408 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399394513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.937545946 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.371571201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.695997634 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411319533 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401699805 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401324295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392863902 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325807025 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407847829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852783604 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.406086025 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.105030919 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392659553 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404012457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489112494 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.396758943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.966216289 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398198937 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419069588 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.391464394 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488165576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982174328 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158333158 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406766274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.334912995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396204943 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621445903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074314213 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.515035106 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397850696 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398220545 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328443344 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.619150395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416528298 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539506487 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41746452 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044221567 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120207901 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420461679 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331872114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98691103 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408839177 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.334964752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623044298 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171204321 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330015825 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.341217184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329300207 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165803204 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4050198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.882051346 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41617469 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871212541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.415019674 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412124607 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419101093 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619267283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.273339845 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3952364 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.399928922 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528126441 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417502979 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842219562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338663773 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400500797 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65164983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.608192787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39627107 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481259889 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634365075 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406621976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41901625 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395988211 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415465036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.024066868 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435245476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162595853 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420294074 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174147602 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200879064 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409393059 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50369337 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397474409 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66534562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.220820694 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.558252092 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464686177 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402963889 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396363173 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.72679082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996884887 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.558004062 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.393366728 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397567522 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415349212 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.397720629 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345747719 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.4085588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40432505 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.182352354 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621712723 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414317228 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681122166 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332560949 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545464837 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408910796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.623697321 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.682792969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.4153639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658059904 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402465654 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419835355 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41662997 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417796143 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500369342 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42117137 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.410856264 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661260864 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402637175 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401869912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.749482183 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.185108786 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408694946 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405269301 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40009192 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026581489 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397728146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403019431 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294792499 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.413283194 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46692928 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405716847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41093142 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.386309069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420023494 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405343788 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.397956164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625724686 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412277828 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.655193744 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487686765 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.616963116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041953251 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440745616 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.336509898 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.112336976 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.093851934 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400137323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591510449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401026788 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413318606 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411499144 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402613454 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033055334 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428419001 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.664200151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.414612622 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412667285 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406426307 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40225419 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.365029157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210959513 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416301408 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.420078501 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546717674 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415539986 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335869807 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919035207 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407780741 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404092489 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.180897881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437366128 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.661274741 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90187685 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663992814 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406981779 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416241084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.782614956 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.445424104 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403314377 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411050156 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426884604 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.434628264 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411384948 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.415551967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.759321932 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.773679393 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971505703 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169761501 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014331259 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414090067 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.405735471 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.294899973 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854386797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347204937 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063635403 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613803938 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884446058 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35774616 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626954691 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.692039928 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251412596 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416145838 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633310934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391324964 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407308828 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4250745 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618284534 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439616648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414217361 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342451342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686992734 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652354409 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409002121 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490486758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864685935 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419228506 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.190233699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.434319118 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.912492496 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625595156 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.958520465 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792835355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415321721 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427995043 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904794659 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409421903 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931012684 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065637963 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437360618 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.629873552 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350604847 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418147894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4176971 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403364222 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.86720138 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.406412072 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.662034593 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41769512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341790189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416488424 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987093043 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281957658 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412022099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406520888 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226099103 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423178998 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743796369 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421773891 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.352347847 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431434697 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341875128 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343020601 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.100882416 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417802687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384683123 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971368126 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.421026607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428737514 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409413269 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258398755 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664361444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423075718 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046256088 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6614604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411827709 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452020385 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.508882412 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41997206 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.398241375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31110171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645405757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459892964 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654577508 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.523184449 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.310198423 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.434798154 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62471558 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306242906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414438609 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688240661 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.140830579 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.415836007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145102118 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454998837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412801181 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428629007 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423182673 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432199656 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502825027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421000245 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420862843 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422249342 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600280282 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43388155 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420413309 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.424532187 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508346952 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.228376325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.392800262 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192190544 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054939213 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205298015 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069202955 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451526408 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412075304 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412581177 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346456863 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56301843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938270486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684276012 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542096389 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.41170257 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435368048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414837684 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433954964 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634059203 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687283335 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38449481 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416009303 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210174019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.295430562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424226055 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62522254 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98172019 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056940841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54440148 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41366973 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869337063 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694937884 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50670732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414124661 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007928626 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.430285332 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.896887591 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.448807868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424314982 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569706123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425261997 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118032745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44664704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574589834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188122039 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.794032319 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679579679 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.940633744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426805072 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059902984 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215164327 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685660415 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485695329 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427060235 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.519396095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563601494 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.412268069 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.324213688 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415646691 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263335672 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.126537871 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.42614001 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060122509 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705584173 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.413127673 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.416289723 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446670622 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426468892 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640917951 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213622804 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649432513 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427673808 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426265166 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989460438 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056982843 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457313755 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3512682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421532834 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69681932 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673696458 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440725549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.869982067 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.129544231 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047691289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.399173686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440999033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431361823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182600666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062932456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.406167579 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992178139 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086902257 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41676643 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700321545 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422906335 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423102448 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699885449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.42176164 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421377764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439170946 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.057523033 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278904793 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.438296498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.818584797 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.362227415 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647892099 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417024392 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376555079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422808391 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.613889811 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427552186 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548457256 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430740378 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.431896447 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433358677 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159463891 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703834482 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.425687425 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.41943993 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.402399665 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430036 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524644552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66855755 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424421543 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093605392 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.771998507 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676588662 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435631849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.40685857 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424290021 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421188704 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140598221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43152205 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419040622 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080540444 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.430862281 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.458592551 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42447918 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.638989817 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633444446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427570332 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440468879 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425948699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442896719 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321636972 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189161487 seconds)
  done (took 1686.034299684 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439482109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.451707381 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.454088833 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.480058503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473963816 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501798107 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.446614029 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50057392 seconds)
  done (took 53.084171926 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.4269883 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.588096409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.454381763 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.422647829 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.437250539 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.433501601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.933212152 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.455209755 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.4314225 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.431070784 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.431017817 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434420905 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.141520182 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.43765523 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.433619573 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.410564048 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.430141651 seconds)
  done (took 67.074228626 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.432401131 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.828404628 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.452006106 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.42556567 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.055107224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.458963939 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.846166818 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.436910787 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.429751233 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.760594111 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.103501283 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.477473701 seconds)
  done (took 82.044530962 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432278947 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431620651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43104247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432636064 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430824568 seconds)
  done (took 8.49534621 seconds)
done (took 2121.785377678 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.672537619 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201526437 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.128416408 seconds)
  done (took 5.666749247 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.572856427 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.622499532 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.774683345 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.782975051 seconds)
  done (took 8.092374388 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.710837843 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.816793075 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.621576485 seconds)
  done (took 6.487916308 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.973819476 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.440731581 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.454133016 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.424934843 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.432711257 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.433847894 seconds)
  done (took 20.63209246 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.43059555 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.433104728 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.430992591 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.432335061 seconds)
  done (took 7.067456165 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.405663121 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135116199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407499312 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.423000351 seconds)
  done (took 18.711033015 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.176808311 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.189017017 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.174228689 seconds)
  done (took 7.879847225 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.428062196 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.266317493 seconds)
  done (took 10.034872368 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.727638859 seconds)
  done (took 3.067217753 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.560110428 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.756971628 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.568015311 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.530323027 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.143292865 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.747675835 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.279115511 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.809563442 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.500342817 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.935304781 seconds)
  done (took 33.171600583 seconds)
done (took 139.695342077 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.562961177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831904899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.633313186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.533641238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.660911421 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.633098376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01506939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.502108858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.041483644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.035823663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.578226827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.662849344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.754427028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831356537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.753335066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452625312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.663004705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.596517655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.263409996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420639852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015059399 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.170582034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.410803122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.188734756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.664464858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.586488688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.752416947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451757744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428496177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.769590822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.586152307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440685182 seconds)
  done (took 199.234619728 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.429563728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.447952164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430258487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.444799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434544924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.430205892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429768219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.447283351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438697334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429544594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.448398414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.430721493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431473698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447961066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430775767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448484017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.451613893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436892733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.430888425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448500456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429508636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.459766886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.430135364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.446311997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429989403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.431245262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.43196744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451204284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431454977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.431430786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.432932303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430749436 seconds)
  done (took 207.349540234 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444247827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430963164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452268316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449975039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431149034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431177477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.453180953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.432175166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.453181777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429970122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44801099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.430000148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451816174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.451251539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432624636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430731738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438543372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.434534115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443770731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433054062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448874841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433621132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43244986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457946253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436481777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435505173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449011944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431679675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433210833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.434493642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434828772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436685888 seconds)
  done (took 207.413722737 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636258957 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.440278007 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.441950907 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.400391841 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.441791654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.441891225 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.440803828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.633067617 seconds)
  done (took 15.224419089 seconds)
done (took 630.569810472 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.880281617 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.581063105 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.647439303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.461845387 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.312341334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.482411699 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461065902 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.642954106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.400590255 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.652650333 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.755072531 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478947941 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.899095837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460560005 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.732821906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565095626 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.36202029 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485285103 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.802057725 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09497774 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.733857932 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.982901489 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.664086896 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.383947244 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.915484995 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.970495563 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.267061795 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.347271329 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.480809966 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.8109307 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.26638202 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.538332465 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.530764922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53147998 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.58836361 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567105489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.500322247 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.527781341 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669903789 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740474866 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.072866466 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214347017 seconds)
  done (took 97.812592135 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.425908124 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.427045769 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.425266609 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.426512239 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.428135025 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.425732674 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.426131585 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.426054384 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.426755791 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.426925118 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.425956267 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.427683168 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.425002276 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.426814743 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.425594106 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.425112646 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.426295363 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.428660443 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.424946406 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.425404261 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.427622715 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.427940334 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.426033682 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.427272648 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.42593293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.430303265 seconds)
  done (took 38.442660459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446134808 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710988378 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.881230132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452408459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446432358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449398941 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.53077527 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448229485 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.450256763 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45010608 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.622338591 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451133535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.484207085 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.907271934 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449901136 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.448814925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.449253191 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.448082767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.719130451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.456740643 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.554801341 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.449329358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.534248209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.457666037 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471689477 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448130855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.453101648 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.975692067 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.469407528 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.623410578 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.334773494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.53794156 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.929048781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.907311703 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.333023408 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.459918367 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.449870097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629720416 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.450721084 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.449272985 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.533215766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.449191808 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.885627348 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086087071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.467621264 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449997281 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.997513114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648725609 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.71983281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455905572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.913659743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451539441 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.452806742 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451521679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.720403854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.456713221 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449788506 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.998781435 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475821906 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.534376975 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.451291806 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449975606 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.727579889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.450450913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.715723122 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.452178274 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459609259 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471975 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.892351436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453814634 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.11358887 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.470176908 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451578616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627882391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.719685692 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.041654147 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.474720181 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736091016 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954377021 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.553314927 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.455858289 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.962476252 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.55708496 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.455460272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.455014608 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455382972 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.452680782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508269048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.535369856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.046284091 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129250521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.0190294 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.561020973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.465079927 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.454393842 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.999703906 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.474118069 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.453175102 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.887743795 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115120694 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.473540299 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.459349814 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.113260141 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.475303948 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.539282233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.458422534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.897579001 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.453734916 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507855723 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.45487968 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.459702071 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.477893397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538556569 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456291323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.453994456 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.082760429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.656452836 seconds)
  done (took 190.646225653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.446744128 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.445962438 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.450024188 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448612816 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.446038862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45520447 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.446246299 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.448969251 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.453213906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.447282577 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.448642768 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.448356139 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.450622841 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459461275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.459574331 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455120499 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.05981126 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.449493259 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.449007459 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.447661512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.273538142 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.456592964 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.464183691 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.44776555 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.45022148 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.450308595 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.456639176 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.451318174 seconds)
  done (took 155.426911986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.456311145 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.073712812 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.475709361 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.600474607 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.47873062 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454887146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.6015842 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.527966569 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.484786029 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.454267347 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.454366073 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.78681742 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.459485063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.023470522 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.669963252 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.623032342 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.027807103 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.476305383 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454902679 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.455313729 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601690795 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462044748 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.788975525 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.07392108 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479245135 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075015262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.442894719 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.457903582 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456353758 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078233685 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.476184443 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.790968767 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.544050128 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.523062418 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100723079 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.040981958 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.042441921 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.626023253 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.464821403 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.456624945 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.45572426 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440799372 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.101970921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.486719255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.458914363 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.097959812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.48743014 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.461435653 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463919422 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457601885 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.524523139 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.551346239 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.83687024 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.121930906 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.571138124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472017682 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.607239505 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.852762249 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.461366796 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.024923655 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.441608465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.115807438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488732827 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444208616 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.460078556 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46512037 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.623826799 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.608362622 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.034117523 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479619271 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.024551508 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643654218 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460509621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.458973075 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.461685043 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.106775028 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053270654 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.642910212 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.606680837 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.678344161 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445276653 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.459942805 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.44375051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.545512448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.459909426 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116967032 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.054805368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.479764868 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463881896 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.462083983 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.463246443 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.657672527 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.142177005 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.573308174 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.01828488 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832161363 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.82171961 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.470828248 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.526048611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.487971047 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.814612834 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472170286 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525812017 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916909186 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.814956244 seconds)
  done (took 175.092612381 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724134938 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.78450338 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555240996 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.604298584 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.113830873 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.052299504 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.845012422 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.616066944 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57932098 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.739625786 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.754131492 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.558544587 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.649744577 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543531575 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.243899118 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.559011014 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.583104095 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619071312 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.58338354 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.534404437 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.172314836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.775597634 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.64639322 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.519666245 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.569906406 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.28187891 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.065041927 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.0330658 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.642585297 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.933764828 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.034671 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.675736085 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.529302775 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.225210644 seconds)
  done (took 70.717494648 seconds)
done (took 729.494548711 seconds)
SAVING RESULT...
DONE!
