cset: moving following pidspec: 13830
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369326115 seconds)
loading group "string"... done (took 0.506222262 seconds)
loading group "linalg"... done (took 8.487735207 seconds)
loading group "parallel"... done (took 0.172706999 seconds)
loading group "find"... done (took 1.271430356 seconds)
loading group "tuple"... done (took 2.029613359 seconds)
loading group "dates"... done (took 1.341752216 seconds)
loading group "micro"... done (took 0.205074904 seconds)
loading group "io"... done (took 0.572187895 seconds)
loading group "scalar"... done (took 41.488162952 seconds)
loading group "sparse"... done (took 12.859535885 seconds)
loading group "broadcast"... done (took 1.037409375 seconds)
loading group "union"... done (took 14.720035884 seconds)
loading group "simd"... done (took 5.151053695 seconds)
loading group "random"... done (took 10.429328828 seconds)
loading group "problem"... done (took 2.085650478 seconds)
loading group "array"... done (took 24.595118677 seconds)
loading group "misc"... done (took 1.064774857 seconds)
loading group "sort"... done (took 3.520053498 seconds)
loading group "collection"... done (took 20.725805 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.569888171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132649774 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143922433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175133293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201582843 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137416058 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154730401 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460303834 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.003445306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200411964 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139667633 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49793235 seconds)
done (took 5.56874563 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221772576 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081373543 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125378305 seconds)
  done (took 0.906799788 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073175404 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170334894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091316028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106155652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105147581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089234665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.106650434 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10597079 seconds)
  done (took 1.47974023 seconds)
done (took 3.39379011 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.732740011 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.817930733 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.480103831 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.119866528 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152659569 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126249907 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.304660866 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.140625584 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117010577 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109890338 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172904304 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.348535279 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471791789 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.91759518 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092136527 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126043626 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080046977 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693312796 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078648638 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114229046 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503675509 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.105215386 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113255226 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125537071 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20984648 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112218387 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179497153 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105077553 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666679958 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098887434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179654404 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095063061 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158931021 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.210737137 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091223318 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089462579 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67570006 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190446034 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107048012 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090359622 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673980255 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076225955 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188847613 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108347325 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106559219 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183799168 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097214436 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090614814 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080408543 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100086305 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.150470125 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480701757 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105084246 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141841462 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092326118 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689335273 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091171423 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151918963 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120926166 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105353968 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079367128 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104496035 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153181856 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096010152 seconds)
  done (took 19.314229831 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112991323 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13573469 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090681348 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134578766 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135582613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075712016 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096562351 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074455913 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123686837 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178287712 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134095173 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140376034 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07257241 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091258516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097976334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245631015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115638513 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100358119 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092518041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086475481 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136602539 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090980767 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105276627 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106360769 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164068141 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20085556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104563956 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12056688 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089325476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096565777 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138834068 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157174629 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072896562 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089524626 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17508067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102515078 seconds)
  done (took 5.004304731 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192346192 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097523584 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.196191733 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168344851 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141764489 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157403777 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103776055 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256135626 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.16004262 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161269311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12679322 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112173365 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075369946 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092103774 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076199533 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.692693248 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165020235 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143756748 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119607484 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10087699 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077843086 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367634819 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081823667 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093648629 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081678568 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087257355 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158068652 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167604805 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098312224 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.189579123 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094769681 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105914147 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128511145 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191349574 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123422648 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128945834 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08153838 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09323775 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191582148 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085083433 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092081677 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.098868714 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094703572 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127003355 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113324383 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095247527 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103905546 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22395821 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094633023 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094293954 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.000042735 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197081098 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091239587 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092844736 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33053166 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092997955 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099578769 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074859341 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095368982 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269614985 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114502956 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094334613 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074554157 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100580663 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075303376 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384685501 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099002305 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.862538388 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079235234 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.149699125 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09480435 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099544269 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082587491 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079437259 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114814414 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07446254 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094135158 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074630384 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092214977 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079642911 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111247087 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095736501 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075722349 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143219457 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112570539 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093848274 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122858791 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095928296 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074592069 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125251981 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076989325 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095831098 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134534514 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083378939 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095332781 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092667329 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096314747 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138543621 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091172842 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156183094 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092570329 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104942711 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097930277 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124159862 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113536422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075820501 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097103581 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073592065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093447351 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142066002 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091603076 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075543755 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095117664 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088570079 seconds)
  done (took 22.693199569 seconds)
done (took 47.712379813 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.381228207 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108700594 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108483474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107365327 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105451626 seconds)
  done (took 1.588908487 seconds)
done (took 2.343805743 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312258962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190971182 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083032602 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166979466 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09941651 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171338568 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156763979 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113819602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18289639 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095961278 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160644798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095147804 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083706278 seconds)
  done (took 2.690435952 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087638728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113358617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07757335 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087080154 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089238399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087158042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103425617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116614768 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101529799 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083335637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088597003 seconds)
  done (took 1.784538944 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086673123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094746393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094835439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086664466 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088828508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086936529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104989522 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097801488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105889131 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082009847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088794745 seconds)
  done (took 1.767969041 seconds)
done (took 6.988311669 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.062450636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.435787628 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098577206 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167274554 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.322532816 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192177218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613775825 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130772065 seconds)
  done (took 15.966233958 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.125049819 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092650734 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078600254 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095459076 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075603214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094414103 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076594057 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095191931 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075308698 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075391352 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094928902 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076563417 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096714223 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078603073 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095520457 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077234893 seconds)
  done (took 2.220031649 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110006898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10945062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098053785 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083295208 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096520612 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079840571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098881484 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080706705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094199906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08045508 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101553807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084149702 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100055346 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078707458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100486519 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102040649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.079640098 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100079154 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083627205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100515751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085099207 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098030488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083718792 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101616805 seconds)
  done (took 3.094912916 seconds)
done (took 22.034380184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159551755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079978002 seconds)
  done (took 0.998935456 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096008469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114377904 seconds)
  done (took 0.972785791 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101029179 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091975703 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128622509 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09333979 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092935837 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076104757 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125487153 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093059004 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076879804 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07753613 seconds)
  done (took 1.728620728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.078557123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080236553 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100303259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11287767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088779756 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096019014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082350051 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097710677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083623206 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093192585 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085025588 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114240929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102047063 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097562724 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099003625 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08443563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104655722 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099058406 seconds)
  done (took 2.469125342 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075077366 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078680003 seconds)
  done (took 0.920589569 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078500347 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074959861 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096078109 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096089665 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076321958 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076162867 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093355521 seconds)
  done (took 1.357059313 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.460950219 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178409967 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320433256 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111503617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129724299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337584936 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129086138 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108327862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10793393 seconds)
  done (took 2.693539091 seconds)
done (took 11.908420357 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087309393 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127257297 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.467815572 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.10982783 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.072831533 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141674738 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.247238509 seconds)
done (took 2.017791266 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330669811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117006919 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08591959 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076169879 seconds)
  done (took 1.371961483 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074006339 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080928229 seconds)
  done (took 0.930295529 seconds)
done (took 3.072288473 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073929715 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.123735889 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072751567 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071261186 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090007354 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.071077119 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091405523 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.07111824 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07265065 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091344558 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074137989 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09039114 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.074114862 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.074634246 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091729742 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072660715 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089675138 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075452165 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.192704545 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090364434 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072675648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091934513 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072609 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072573601 seconds)
  done (took 2.869113188 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099264944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092544537 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080971792 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098662791 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080572205 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09763334 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081028159 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092569879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080843274 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09591062 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079940004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095478158 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078435746 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097178657 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078281378 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097042348 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08142986 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093727366 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077976826 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097157727 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081652492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092466335 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079648106 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097275385 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080258639 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096094588 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079360365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093721498 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081854079 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097527863 seconds)
  done (took 3.434551248 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081107627 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071604116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088080551 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083034678 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089225376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076511161 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088402275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072736388 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076648379 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089548866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078542028 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090398445 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072808624 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077903307 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094392253 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079914996 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109040207 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07382455 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090663683 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077699635 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096337888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073110369 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075812651 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090178969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.072445615 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090148313 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072874224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073180191 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091517374 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073331363 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095899235 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08040245 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073672205 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102956608 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080407511 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089811103 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081515899 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089998007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078376697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072342474 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089353367 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072988169 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090645609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084909832 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093463912 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075377798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.074427784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095268865 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077171553 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097531172 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072206139 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073267517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096143937 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077613097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096142624 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074235377 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090914096 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072436334 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078032926 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089900406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072548607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08990804 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079364306 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090898199 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096941591 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10234225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072817647 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078093382 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093566693 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081134127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095221297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091671651 seconds)
  done (took 6.811895473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0769305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099022252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073221361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0742971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089792118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073813585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098036451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073772026 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092863534 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092477106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091302643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074363673 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091869415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076849756 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07388582 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092434561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084070113 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08907396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074195183 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093773622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073504565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096452275 seconds)
  done (took 2.638379785 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211117529 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100275031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135136396 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091724261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108519186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108086979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080670119 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098855222 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080127351 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100451369 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083627388 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09686651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109188526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082189671 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098350953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082933591 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095763311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083935766 seconds)
  done (took 2.624381931 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086954605 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091315581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098841166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091915543 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077272055 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094003382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080351407 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107466495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077101593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091244867 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085740214 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094628678 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078347447 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092501183 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07673712 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09210916 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077469326 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075446609 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102245247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097893266 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081064639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101231896 seconds)
  done (took 2.733198229 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09163757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093951333 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09488436 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095870105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073337223 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093169033 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082847808 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091523289 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08386044 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0929554 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075668618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09249604 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082876432 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091934125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.080698393 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09218338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0768715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092193705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076937935 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075181549 seconds)
  done (took 2.516576741 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115199207 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105679806 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090205846 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117678142 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092250639 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106254987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118092731 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089566936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106117833 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103095347 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107369231 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090679282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119196536 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115028754 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090993494 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120987102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118461714 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102620596 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108017377 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091338633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12141503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109201966 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101165733 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108302647 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08925715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106400042 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090312901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112580806 seconds)
  done (took 3.738184751 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074411608 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07462567 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090589436 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072398129 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073209171 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089356125 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072597451 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.089274525 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074770104 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071763172 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091363096 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075263766 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09185851 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076357029 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07602464 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092637788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075494111 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089710123 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072142465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072239718 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091295155 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074941991 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092174763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072094717 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072673037 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091651449 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073242472 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089282236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07426166 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071594336 seconds)
  done (took 3.189420205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083067865 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097341451 seconds)
  done (took 0.972838854 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072336778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107619376 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071741698 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078749505 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097763438 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075353837 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102302598 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098100189 seconds)
  done (took 1.49513863 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099204848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111593369 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081035812 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104057876 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092932786 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11119595 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154780299 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081281387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099831044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076334896 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111556366 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.074753623 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083265799 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097957069 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084869439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106687464 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076275865 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101892789 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084196798 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094148484 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08256071 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108541008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087330295 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099278483 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078344148 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105051865 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089317104 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104856855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081440212 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106482727 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083883569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086730343 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082554014 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101767336 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0785937 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112532367 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09434019 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099108376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084817701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099300344 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085379182 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090773061 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085528691 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099531741 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088349262 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097978412 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081783228 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091123848 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076054226 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097039973 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074737874 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079251675 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086768315 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085500242 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102281844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110514826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078787456 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079909924 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097061957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079441278 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099737757 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080362135 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102889719 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080357306 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101439274 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085214849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100450555 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.073720167 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08691647 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076256181 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102665781 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099750734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10350041 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081436055 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099334355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.076254759 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097713617 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082356198 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100644152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087012974 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097179129 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082248793 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103507746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07932348 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097523698 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082127751 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078206525 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096156493 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076661934 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113414589 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078582381 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093520934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075648855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104112443 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080392377 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097248995 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077012128 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101924507 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.069344685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098775465 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081531599 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099473639 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087511997 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098395325 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082237106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.101033949 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088117867 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098255472 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078970939 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072116715 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099185256 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.077828857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101444919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070427859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097993642 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080001203 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098444957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085769694 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094228769 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080976344 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102890273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086642453 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094546844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071841741 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080071886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097286111 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085262888 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105452768 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078448947 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091058035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075384721 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101708074 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080805518 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.099070212 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082653525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098767879 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070747681 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094209697 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081498991 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10431281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079523614 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099409102 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086045008 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099848308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079683592 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103771477 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079236324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075974415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102629385 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080982236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092152586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086436135 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097553206 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078994758 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09800803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086582391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.097926508 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082801598 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09560418 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080670429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09926508 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07565802 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098376012 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078125904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106631911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081136359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.073974312 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090406678 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082515655 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.094424118 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080186846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093341948 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08176354 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099594636 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077632368 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078635132 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097050958 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092964166 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106111045 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082345611 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101057243 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087588317 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098232479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083728775 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097835868 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082911494 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099557191 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085676424 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099479087 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081849289 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097566588 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073150112 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101388766 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085829757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09483893 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077473607 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076420949 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098572844 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08746896 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098191345 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081917936 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09561879 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083041347 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103591685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080646604 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097759384 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076853643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098348698 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086253806 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.081529352 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10040297 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105050339 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08236178 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074834041 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103894894 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077878986 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.102154901 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075328494 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095099686 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077155274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100163153 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078925168 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09692695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.069905019 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084715847 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103558031 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081761301 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094847045 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081199757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107343506 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079828023 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101195832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080423346 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101921825 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093480433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094062058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080773708 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107167454 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081162522 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087627176 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083480716 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096558487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075284078 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096365759 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.077799844 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08109965 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108052947 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081419079 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087711048 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080462728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095564223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077396108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093243317 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086130118 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.098297412 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080305044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107209783 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082455641 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09894283 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081770936 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098377328 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082710955 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099808757 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08203007 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081687883 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096896103 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077471878 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098375579 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076341699 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094885866 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079847123 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098312978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081325942 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099351149 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080565299 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102787183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.080972005 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100308545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097706831 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095309497 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077542961 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099813752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082629294 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097509177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080122177 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092930322 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086610006 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098095811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087182532 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097051065 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07298726 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082076628 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097962483 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.081880684 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10030855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082490965 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097967555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080451457 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098408286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090311935 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095230667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088794211 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101326079 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084192632 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098920089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08237563 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0975129 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07702099 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081020649 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100866024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082102337 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098863921 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.083680016 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100237259 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081271941 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097029533 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083160674 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.099410233 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0843531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.088866098 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077405662 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077107073 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1012045 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084944313 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09975494 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080514241 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097612992 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083459802 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099217495 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07465432 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105371501 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084649696 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100349264 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090473057 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095010345 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082110939 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109053095 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07109403 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079140486 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097331422 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077888463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107067481 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084964562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106532951 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084806723 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099886854 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07737714 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103558098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081760692 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073903429 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098439391 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087214783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100308409 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083258997 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102259792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084249576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101755131 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085073475 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097854895 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082023024 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100829702 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07388282 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077834859 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095357364 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081810776 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100188512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077992718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093484448 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081278282 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100068759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08256628 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080199572 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098268442 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086321818 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100557645 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082924018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105133443 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072012448 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099548092 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081204556 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099544122 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078008932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100328658 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083822446 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102232948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086728032 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099176651 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084752878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080654173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097204689 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081340868 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099808368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082250806 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.095991696 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083612579 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105791068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079084113 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100217415 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082666276 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097311308 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083500964 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10236359 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081659575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084967151 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100383575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081669211 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103737087 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082044344 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102131903 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084345768 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098278026 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086563859 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096117543 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089319905 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101309782 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083559885 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09824951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078974093 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099329789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08148891 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079687917 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105545082 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08390137 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096386613 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078210339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097580879 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082180647 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104712457 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088960338 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10038043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08371864 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094145192 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074994274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101342665 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078857437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080378909 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102418341 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085787134 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101500937 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079072767 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098573309 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087326131 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104479069 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085200415 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097128845 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084107649 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10077193 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.081826136 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098489918 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081594474 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101783366 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084126024 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099103179 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078482687 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108947903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087178138 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101837698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080412231 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10254885 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08187213 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075226995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102065467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084728682 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102095176 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08183035 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100079381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091902635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096230245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081634124 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105982453 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081494297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105705444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07608533 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101114179 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08427847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101819186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076869426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096521577 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079605799 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082772016 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095745383 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077008777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110989203 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088037872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100666904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081068258 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098940231 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076358809 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094688999 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078250683 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101834894 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081261689 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107951244 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078716884 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078263078 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094523032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082299481 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101848638 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084684751 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092951128 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076915297 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077861545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102017002 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106515745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080954264 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081755296 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101878718 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.081986726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0966885 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089239328 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.091964338 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083872509 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112185354 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084092162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102448424 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086383838 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106281848 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083144657 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094756091 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084119313 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100989587 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083291189 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102325836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084655811 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115763848 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084514215 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097007213 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081638173 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100430341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079171436 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107611762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085517466 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101283434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084334962 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079889324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103386764 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088551217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10326665 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081847438 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101467645 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080499313 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100455309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080364137 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098809971 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084298142 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102624788 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082244679 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1035435 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078743556 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111919267 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089376862 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102774793 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075178965 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078228223 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097936827 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077338877 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102617013 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076418007 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098584374 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080790458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080628636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104289716 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083425098 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100828744 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085012857 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101059116 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072833391 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103919869 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083364522 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104123957 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07516376 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101499478 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084992408 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105231938 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08860997 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098208535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083057155 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080424756 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103921368 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076409717 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104412164 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081280597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100026815 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078385002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101003059 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084387632 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101766005 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084237127 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103132344 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083329942 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086289642 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104031354 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075723848 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094085509 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085504275 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098327171 seconds)
  done (took 54.707693347 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121466455 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103237892 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073426999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091338794 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118221551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078188249 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072277751 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096980372 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07758608 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106439334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073663229 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09238144 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112812578 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099814785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11591224 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106260291 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074157222 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09603153 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073493865 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096140542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093809329 seconds)
  done (took 2.812486547 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09869477 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109862857 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08948489 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114653136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10236471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091779497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107495376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110268347 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095107368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105503614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113475026 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091924953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104891967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103517577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08550929 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106068404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094857608 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.109924329 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089440171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107760194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108028452 seconds)
  done (took 3.086295694 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086925989 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.080366772 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105283396 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073437045 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10096737 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073104115 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105832578 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075689075 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104574816 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082732731 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079397206 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101023534 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086665987 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092094078 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080923187 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093972477 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.08687591 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08106243 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102245523 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.074960853 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.119976949 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094700247 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076840905 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079376559 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110520272 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08276173 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100899462 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081519881 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098147631 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082591751 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.093841485 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084533947 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102844457 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.079695242 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079043602 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100953681 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082458656 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094779608 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079764469 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.102859525 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.076876343 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082597433 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107805332 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.077825071 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094385979 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084607376 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100302779 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073265102 seconds)
  done (took 5.135456998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112666751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130490869 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100889262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139549903 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11587698 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091996681 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102292147 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139282193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076064123 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.099565592 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.098232789 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115388765 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100732361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088449421 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100332331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082820043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101887371 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077133475 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10598951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078161697 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106000294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084695448 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115898126 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111605559 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086454325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099962333 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078576107 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106962217 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112616396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089341737 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106438967 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088602635 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116001519 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101898664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078456294 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102842258 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098064379 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101667183 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083083638 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095420907 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083541232 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106957725 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103097354 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099293746 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101130998 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083325707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101015224 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075180453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112793452 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103909901 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092167483 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11404541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.085905298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102249444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106230576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09747719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100885032 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08019865 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10437818 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11287812 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076363928 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104511234 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095404563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103225066 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091001461 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114873816 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101803396 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08748798 seconds)
  done (took 7.746491204 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110546208 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106074024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099375549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118295579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106298495 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087561886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105858507 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087668125 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107663528 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113004141 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087015095 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153902741 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103310881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093334327 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10622178 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087490723 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105646667 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087880064 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106835006 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086681729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107667129 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117619808 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087503488 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117586118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119466516 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08363058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105834683 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087469393 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119130432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105250889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09838805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107264101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106331422 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099418057 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.11933491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106136871 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081712481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106805334 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087200144 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105617922 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084371202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118244366 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087330427 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104192874 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106108256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087056407 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117463648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120558169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094171051 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112707622 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086087436 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118340163 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105159118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087416017 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118448295 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126344033 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118483455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098879172 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107858815 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117922703 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098451297 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126980666 seconds)
  done (took 7.321635266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11063678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113958183 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116946986 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07425486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095649743 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087252036 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095889313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076560446 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113250404 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09302228 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115116304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105561576 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090011671 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116178997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105966685 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090658789 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105373009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086499285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11370996 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106362592 seconds)
  done (took 2.863225433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088014837 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117879585 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079898075 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10527937 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082238955 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104951863 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081775833 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101603125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080141773 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100781076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091303933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110549033 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079199342 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106463731 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111398306 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086506619 seconds)
  done (took 2.379727704 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098770858 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11942483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123919898 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084994962 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076490729 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102761143 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082738796 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094064152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075372845 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105896107 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085632961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103788842 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082482547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.095790363 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079914595 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.083380835 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095870772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082537652 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100987671 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103019989 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103687395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081519957 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103733858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080257749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102733449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083240176 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105934598 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076386976 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098821488 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082062454 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101090066 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087410381 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095673165 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083143594 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097229098 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076671928 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101948087 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083251189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104507901 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082441395 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.096670385 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08241519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080703189 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101060471 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07453675 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102520817 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.074693079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104189824 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08102277 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100862117 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082642675 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106761901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086130478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109629817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089951301 seconds)
  done (took 5.938896891 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094082908 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102319506 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08418073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096304268 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082596119 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086323623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105062984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081694948 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101459413 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076544516 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101231719 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084635081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100699412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084294683 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102101578 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083977198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093463216 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081469481 seconds)
  done (took 2.501765899 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084849669 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079065093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106539169 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079689642 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099115051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082314146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095300316 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077629055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096589335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079757376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078273055 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101106942 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077316008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.100757695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080017917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09857481 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081687664 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07688514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099527434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074407584 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101434999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077739873 seconds)
  done (took 2.789367475 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096575747 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.130503577 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093667123 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.140799123 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082808183 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104024763 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.091828837 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105164983 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121102654 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083435757 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082548052 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.103898155 seconds)
  done (took 2.09900786 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103346213 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136692923 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081133891 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102028927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092724586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105061754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083776664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106501893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116888137 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097259531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104444661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117957056 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098473887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115296067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11248876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093695455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104874762 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10328271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080907631 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12662913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083852273 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118462358 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10533238 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085164254 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10326999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096175709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118122814 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118376579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104715957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099123737 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113708763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08388892 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118337041 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117317673 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081961161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120041056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104238664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12611016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093198904 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114962816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082131892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113228404 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117966678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091227846 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117194141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102692018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091580073 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104841283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08436545 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133072799 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114253857 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116549517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093871559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11896025 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118764732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133185087 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117192507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096619224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112778792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1184111 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096140234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113155029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114725958 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117478227 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09421882 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115581503 seconds)
  done (took 7.884994485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118724254 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102081396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084144999 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119944875 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115490249 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084263317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104528583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084429755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105004305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080767507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149252611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105283151 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11542552 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095897504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105059539 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103748819 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085707611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115332158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081415003 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131923192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10402359 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116781268 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096292939 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117105774 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117398871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093868878 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105476312 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104587898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084843774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103305 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091580198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104081422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116048761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082192603 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114848163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085483881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105282895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092983317 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105824365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113566901 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095750253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12679566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10498707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084847134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118550066 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103613457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08475506 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101784201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085610071 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101189798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097434195 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118288382 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118500863 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115857384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085016148 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105242922 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085360535 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105248886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08424612 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113203245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116394403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085071424 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132892492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105680183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08537223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117013182 seconds)
  done (took 7.689507591 seconds)
done (took 148.752280904 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098127999 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13588244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094427712 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163214574 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080243769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.134185868 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114225972 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11622632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080062183 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080279932 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10125142 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082616424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16619187 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081483032 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100158086 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08469416 seconds)
  done (took 2.578476404 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17494646 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280091207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09943684 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106304702 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086614515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102541914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085601388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.106340366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082580716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111051126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083697521 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102013197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092624909 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102801006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081177493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102294908 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091857293 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102708935 seconds)
  done (took 2.869338979 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110870759 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143756107 seconds)
  done (took 1.126791805 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115259427 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179195731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28933562 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.132920037 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.366667025 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123811483 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154960597 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100124025 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197462412 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124919572 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124030979 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086230495 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133412104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11220345 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090521917 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10640216 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113168085 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109105003 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087560959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109477563 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131124425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08813724 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112735726 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088440376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181123341 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122259454 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106939306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087272222 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107622534 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088776978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111705863 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100347382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122142204 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.160752326 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.112891994 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157373893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114854198 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08492605 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.107957051 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085573072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11149689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111499869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100888915 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106364627 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087360071 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113975279 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088069225 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107992336 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094120388 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115701084 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114110189 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091897386 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177681647 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094516809 seconds)
  done (took 7.515583826 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.779761213 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147435194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085858582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888818316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112959578 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122152874 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784474535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109235924 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226786602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.797555996 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101536939 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119968783 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223407312 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246751007 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.133752827 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307952968 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68473577 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099360185 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135006134 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142481677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091954263 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132529331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124363485 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44962245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087517805 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104286615 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096222301 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116357172 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15501962 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083990471 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11046284 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172614306 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259066246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196529663 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086818917 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104461207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084390827 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162400664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262911159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211911957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148012021 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103235769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08315311 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117157177 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125296075 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08213226 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15797651 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166922792 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18729186 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089623664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117200063 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093582474 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116534468 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157070012 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081259536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329582054 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338029011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083424285 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115703022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122107361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236761989 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107165587 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19810986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133612198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.207915559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084518861 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781144403 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162025443 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083445843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114692356 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091152819 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112252499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116163312 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162041604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364337291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121192551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110040417 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084968774 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201281479 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106433109 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083819362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156671967 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108843593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092302857 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121826558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118563182 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166487831 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245045672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119201891 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093873569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111434735 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098269237 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108467636 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207110577 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212319962 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154692089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205455464 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118296823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159809253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160986021 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116850741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167107461 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091090114 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124105585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117584362 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189514688 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137943161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106731232 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090704417 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113727647 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141060299 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088601884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114096212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163996019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476231784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161862023 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103854491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090155132 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114670781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157869352 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091913275 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258486372 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11540083 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164318767 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093345157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103500337 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095312122 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158151402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120465269 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114514645 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096670485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115017863 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245836356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215123196 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099903323 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23654955 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173536701 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095237479 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168972324 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11609878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164184394 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116492046 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095530517 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108425787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753695046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120391345 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113250518 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090074337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189835444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083593626 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109240299 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084384624 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103689722 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781961908 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110671569 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082700786 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107611918 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093527029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113683302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091451379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111204441 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159131884 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228363754 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095967769 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114827873 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083963386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156303998 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110528717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084874752 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107501748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08586767 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115406799 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089628614 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109310725 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166853357 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15508404 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215648862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.551808338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106877856 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086308381 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226741641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085127841 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303603257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114455624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201716315 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160400615 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104507336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330739644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164747552 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189787225 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088688244 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167290068 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104275936 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092391256 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155220496 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107571612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092059344 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17748447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100100287 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119152355 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.135217893 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085905821 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222401478 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104542331 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164570954 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087991081 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117573708 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301670828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084949659 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1242842 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156905817 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088592903 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107461795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704151779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106344271 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095017304 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114878972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194483737 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181803617 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092907155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113782294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096265054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180538605 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204776175 seconds)
  done (took 42.620231892 seconds)
done (took 57.580074684 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301192859 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252731828 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.24936979 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211147868 seconds)
  done (took 1.986404039 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173676168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123403527 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141770617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104161546 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125949436 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104043783 seconds)
  done (took 1.670843829 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.42220652 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.348964955 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.321989952 seconds)
  done (took 1.997279457 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24321017 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263160801 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.315249922 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.391914466 seconds)
  done (took 2.220853382 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198042155 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097606863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118363528 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111494501 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16436157 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.190630437 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.113968702 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.143975353 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124237297 seconds)
  done (took 2.208528484 seconds)
done (took 10.989542165 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.135875174 seconds)
    (2/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.174182614 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.251956617 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.235572397 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.224116557 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.256247741 seconds)
    (7/286) benchmarking ("sort", Int8, false)...
    done (took 0.199956183 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.213844464 seconds)
    (9/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087541384 seconds)
    (10/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.248729718 seconds)
    (11/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.184590031 seconds)
    (12/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199639616 seconds)
    (13/286) benchmarking ("sort", Float32, false)...
    done (took 0.168404758 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210732949 seconds)
    (15/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.205756489 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088568168 seconds)
    (17/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.181192898 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098467439 seconds)
    (19/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.19624742 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114298124 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.218489762 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097771454 seconds)
    (23/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.153480345 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098521775 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.166239936 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.227126439 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154217536 seconds)
    (28/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121654845 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.167174803 seconds)
    (30/286) benchmarking ("sort", Int8, true)...
    done (took 0.225599857 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103803373 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.188218949 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115057078 seconds)
    (34/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.167385479 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.099810227 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.226882648 seconds)
    (37/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178801541 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121420325 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18785979 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118057189 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099552916 seconds)
    (42/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112360489 seconds)
    (43/286) benchmarking ("sort", Float32, true)...
    done (took 0.234352467 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098348092 seconds)
    (45/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145436766 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153550879 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111227728 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087509252 seconds)
    (49/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19466546 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122491325 seconds)
    (51/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.227851373 seconds)
    (52/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110359176 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.152687204 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093199219 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136189425 seconds)
    (56/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075989837 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.094179624 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09972294 seconds)
    (59/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12243038 seconds)
    (60/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.070550153 seconds)
    (61/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119312324 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.242772238 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085105675 seconds)
    (64/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.094341801 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192978744 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.148555898 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115823953 seconds)
    (68/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091137281 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139145735 seconds)
    (70/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120650103 seconds)
    (71/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089530941 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196117658 seconds)
    (73/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087571053 seconds)
    (74/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.118364309 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087347268 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115837887 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190666131 seconds)
    (78/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.193184721 seconds)
    (79/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135883448 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087650249 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112457914 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149274128 seconds)
    (83/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088195019 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.10536146 seconds)
    (85/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.07045759 seconds)
    (86/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.183689123 seconds)
    (87/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160246651 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121037514 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082928688 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192273266 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192275649 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133463752 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10832814 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095197645 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0982428 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194032023 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191596243 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090478378 seconds)
    (99/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180848229 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119161726 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115133101 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123005371 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.154681616 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168442934 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136788164 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171230369 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112380676 seconds)
    (108/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119631259 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191313644 seconds)
    (110/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079244224 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.10992114 seconds)
    (112/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096338662 seconds)
    (113/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194749522 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163289353 seconds)
    (115/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081466457 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16158005 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096925878 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.096174265 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115161666 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122191509 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083283413 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112430191 seconds)
    (123/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072166889 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.178690692 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119118584 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095032637 seconds)
    (127/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114052367 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109953472 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099271877 seconds)
    (130/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096639606 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140851435 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.08870336 seconds)
    (133/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113144299 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095081988 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12350233 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112344549 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075120387 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085436369 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117261436 seconds)
    (140/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.194065932 seconds)
    (141/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22271984 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083578974 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115781888 seconds)
    (144/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096939598 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131238553 seconds)
    (146/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.089679107 seconds)
    (147/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094928916 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091482468 seconds)
    (149/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108752923 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096415494 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09700776 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07142741 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094661956 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112272088 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183245145 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092798315 seconds)
    (157/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095073977 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072278792 seconds)
    (159/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.144922066 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083818229 seconds)
    (161/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07474456 seconds)
    (162/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.094956859 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23907577 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087814023 seconds)
    (165/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098374784 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074447066 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149715099 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072327944 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112612666 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094381336 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069865831 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 0.233317638 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.096718538 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074917446 seconds)
    (175/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103676899 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098078229 seconds)
    (177/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121659722 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090930937 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112104686 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089486261 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112425377 seconds)
    (182/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104341525 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120202843 seconds)
    (184/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075642738 seconds)
    (185/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.108976578 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090275506 seconds)
    (187/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240480984 seconds)
    (188/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191660759 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089765762 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115213554 seconds)
    (191/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10934386 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072346584 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090366843 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.225380994 seconds)
    (195/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111331559 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086803329 seconds)
    (197/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103299434 seconds)
    (198/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.133999601 seconds)
    (199/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179144255 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111902947 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111321168 seconds)
    (202/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.156657718 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074884964 seconds)
    (204/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.097537697 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074914109 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11979495 seconds)
    (207/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072697263 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085839844 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121578361 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073034026 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097372278 seconds)
    (212/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099905961 seconds)
    (213/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.094009105 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074742935 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091087953 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160725752 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100627368 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097570212 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109295908 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084717614 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186718919 seconds)
    (222/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.070987669 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109252133 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075725933 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074571023 seconds)
    (226/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.094573694 seconds)
    (227/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091875589 seconds)
    (228/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.103902993 seconds)
    (229/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070941477 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096488217 seconds)
    (231/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.094816975 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086789837 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099201597 seconds)
    (234/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.112267408 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.12994911 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073279358 seconds)
    (237/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096231557 seconds)
    (238/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072674171 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116166767 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083362989 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116547234 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097324267 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132678786 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072750566 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091794926 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098347615 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097629385 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114995823 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167185561 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087946885 seconds)
    (251/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107492894 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08998512 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.096523677 seconds)
    (254/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070639765 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125461954 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072592847 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089936879 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11261294 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107848494 seconds)
    (260/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.106309509 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081362298 seconds)
    (262/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110453497 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077892979 seconds)
    (264/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112640957 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08966572 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.115739867 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091372287 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110929263 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084562944 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120669008 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092970484 seconds)
    (272/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11300121 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089029578 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113229601 seconds)
    (275/286) benchmarking ("sort", Float64, false)...
    done (took 0.145026472 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.112326637 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073108029 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.097987389 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088340825 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113271774 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084397436 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085905694 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115186703 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087960769 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112697179 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106496638 seconds)
  done (took 36.270916515 seconds)
done (took 37.181984569 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096969939 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149165872 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093270601 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136641162 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096447587 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123341383 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09331548 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119766285 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096962471 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121917239 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095448843 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101473304 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093972046 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118420482 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094357167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138099676 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096333382 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.113465526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08528003 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110106997 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08614553 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110470404 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088302272 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10105824 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094725515 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115950809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089490834 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117747165 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087297187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107395654 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0852386 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114583159 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084146728 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096097291 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112246889 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086854848 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118388327 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093287104 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112033604 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086197892 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115286476 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086663498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113644079 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09125371 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110888324 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086062976 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.109982891 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097205847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138060458 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08664696 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115792949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09356252 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.117707897 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090969297 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084630949 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110083191 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08713797 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13755399 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.085595896 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111790405 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091536958 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114332661 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086406231 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.111274338 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087028577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11680377 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095050631 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109604879 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093923135 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113043035 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082463945 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110527945 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08494546 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084533022 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.116032999 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093544624 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105784854 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087014775 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114258308 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088726284 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110008744 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085087774 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087494332 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111052909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085105739 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101924282 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085096185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113203792 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086117013 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.109460887 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089573412 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.113612828 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.0884012 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118296955 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086152383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.110770571 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087482766 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087163027 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112346569 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085062405 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105789294 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085554027 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115366874 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084466058 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111733392 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096581362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108708581 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089858584 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08503022 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109314552 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123732051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093640859 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087231924 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111611954 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083604854 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113909137 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085288456 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108605274 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085021255 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11049196 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08789634 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110403651 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085773675 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.113438768 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096939067 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082204405 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.110128775 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085789819 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110841982 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.108055959 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112066226 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084402568 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109871804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081757072 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084946712 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108301215 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08965324 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109498718 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086488706 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110473218 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087934718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112085034 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08793838 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111206149 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084015424 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.10430971 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089641268 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085295048 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11175806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086961684 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110623133 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082614816 seconds)
done (took 16.257879117 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093354234 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184110847 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144478869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146303633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11967639 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12937171 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122445165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116627327 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119595998 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140536571 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142249962 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109089418 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148824767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093986792 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128686353 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118368453 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09315165 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128640204 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151495068 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113128355 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143415173 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119686 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114541139 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137407231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11702363 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112594748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122106416 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093381087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122233655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135523839 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109010937 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121614596 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095723145 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129980122 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101373079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117818002 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129119709 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090589363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118214626 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093814652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132022899 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105450945 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1156669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12466091 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094102781 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121528659 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092415092 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1169213 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094123242 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113163853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098202932 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140658881 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117739509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096462332 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12084411 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09384633 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120613885 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121207917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096261851 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121199942 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093504101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122104553 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098602753 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135578424 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117295907 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096357165 seconds)
  done (took 8.729356784 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107959798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145252447 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099949599 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125629969 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120464009 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083211114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083228487 seconds)
  done (took 1.739219478 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084272714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13786128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116104842 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141044639 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108351415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.145280879 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124193103 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084457732 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132357098 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0934877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137580701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162824486 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08505134 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121649392 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117612788 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109624161 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119118221 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108796731 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092057295 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140610083 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11498838 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106566131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122057841 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085981882 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132578652 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086868271 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174614239 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121084024 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083994233 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090189573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114149245 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.177687954 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105511669 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119333231 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082808972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136205616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129750496 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089002148 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133016717 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.088856975 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130214004 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091094463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116551895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089840345 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116396002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100180935 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119841959 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092918762 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114500758 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111663627 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120095747 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131294493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086645486 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088985579 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119174548 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091306156 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124186651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113185287 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111719374 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116410028 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109903571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135987439 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10533034 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135099804 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126382904 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106057988 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129612645 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090057206 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117350814 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092607655 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136152963 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088859772 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120148441 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099941184 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118344629 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11219943 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136617796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088902705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121889419 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089325727 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112023086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086364094 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136727056 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088278251 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111395125 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103042819 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121776741 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090389385 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112685246 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.131566099 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088728069 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121725519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09584057 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113132449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100265312 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138436907 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120055194 seconds)
  done (took 11.955363436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087332791 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086936524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116419067 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087706234 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111863375 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087230412 seconds)
  done (took 1.560990617 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11469708 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114499041 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100753613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117156971 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127843778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134970357 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.134805516 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095381436 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129835577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099328192 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135387736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110530559 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13974556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118726526 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110204357 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117673346 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110483698 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115976128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.098809532 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114442999 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1032333 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117762284 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08897151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133449861 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093657804 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118226781 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093779937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125832482 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100594919 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121133883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118286066 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.093830438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118152471 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095529661 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136019975 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092244737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11373592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095024035 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119747111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093999171 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136223873 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090096794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125137458 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095395858 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12135604 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094062462 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120394 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092525505 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134837445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094836239 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120388456 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093453291 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118621826 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095892998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118973873 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12201013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09588522 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135178974 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092200593 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118727726 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088717835 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120971042 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095399017 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11976998 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094944775 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120851196 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093505772 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114760699 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091080263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.1187465 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095807423 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115217793 seconds)
  done (took 8.990358481 seconds)
done (took 33.944571166 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660122847 seconds)
  done (took 1.642547258 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.810644427 seconds)
  done (took 1.79517081 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.710770831 seconds)
  done (took 17.715985072 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.457812966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.546736547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.952827172 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158318359 seconds)
  done (took 3.096621513 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948323657 seconds)
  done (took 1.952909437 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289775354 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23204997 seconds)
  done (took 1.510748446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.798629436 seconds)
  done (took 1.795316093 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.491372808 seconds)
  done (took 2.478624413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335008116 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168389702 seconds)
  done (took 1.506058628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560593257 seconds)
  done (took 1.561571494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.72441911 seconds)
  done (took 15.725456109 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236400088 seconds)
  done (took 1.246284946 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288962476 seconds)
  done (took 1.288421843 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.450832893 seconds)
  done (took 4.448098273 seconds)
done (took 58.756208116 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095609483 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098824517 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124987287 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095918398 seconds)
  done (took 1.41136168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101195266 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119013327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096459674 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118071114 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101426575 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119051772 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091844119 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.162315886 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092910906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.119548918 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094354423 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118396539 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094683603 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118608554 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090956435 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.119818444 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097014949 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11863179 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094390027 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119889352 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091431426 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119513634 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096353224 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.116695484 seconds)
  done (took 3.622222843 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095427078 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090020035 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117619848 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089823037 seconds)
  done (took 1.400340838 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098936554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130734322 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105171801 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125158195 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106668683 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131193849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.08840548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114195505 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090086126 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124519308 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090683337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13468644 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106691058 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110179367 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101600249 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111260867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085949543 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130686278 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098517382 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125177579 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088933497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123786346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097375979 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128683373 seconds)
  done (took 3.658645409 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168797734 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126605805 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137391786 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094689525 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162840806 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113898888 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.112680605 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139377871 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088043294 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125117381 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09170732 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165213953 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.09710625 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11646991 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089279725 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120398066 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097602921 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122595831 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090501849 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126482939 seconds)
  done (took 3.395187352 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095604058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089848111 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110659592 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087940554 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121365753 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091514891 seconds)
  done (took 1.610337765 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085445945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084091824 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110486066 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085660805 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114496478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084632346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083908118 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110469543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084914707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11041262 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085524433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083451045 seconds)
  done (took 2.139450576 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.370668193 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.112912745 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089358812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112666262 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093828479 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113200554 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101116634 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114308829 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116992308 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113493536 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086927512 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117043144 seconds)
  done (took 2.559339338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201700539 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093179702 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256170404 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345004014 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152130847 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161279792 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274634661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158980632 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179570686 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134008509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189164957 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126857994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149200179 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173688828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135701318 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.171613944 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169967083 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195618436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117450721 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225285352 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159148731 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162325884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14750981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146106816 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13379847 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153941457 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089780858 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124374357 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168512879 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165302433 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170166658 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145418934 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108565132 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22021152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206697616 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173662125 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297782289 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126758817 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.186977722 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17747318 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220088199 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136395581 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188767691 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151329288 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125618898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176271577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125671892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177037232 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127964257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136416931 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178965086 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171773313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175547927 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134166697 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297672709 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141203283 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116521374 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177524459 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180148616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184639069 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162043323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117337389 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181169316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174668301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174242589 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14125055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162828023 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094911889 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168367245 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190310727 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17202373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15827737 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207947481 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103052784 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158467184 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164193113 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148961232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174362185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156192042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091051681 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146414849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133335894 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09804632 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184345467 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092545552 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195490617 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131031529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185636439 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196519192 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153864014 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156137595 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158507276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160154142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115647848 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116708342 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142572379 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129112787 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152730717 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128362276 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152307034 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111019494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123778726 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147852103 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093578874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155582504 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130131933 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161706137 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132528946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125611811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159952437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144646145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126292419 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164626934 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17904731 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128114646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1013305 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186949966 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153341663 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13018729 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169810004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180632877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.160186191 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105515966 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16338704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212257018 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110662206 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181978659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136326238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128745902 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118937132 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154717985 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151433417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153402036 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098428605 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147578102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1858624 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123380109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106752222 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168903528 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123660884 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098037821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137625267 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131726205 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11146107 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142447296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132496681 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151782836 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128031879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149072498 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152969838 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138753279 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18693537 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129086306 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128026101 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142015063 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116205568 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17215132 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178761343 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097810163 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19062984 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162614588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216946127 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159589292 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100452216 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172142554 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124638759 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089017767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161578772 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157204811 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156668409 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178331449 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188305404 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159923551 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148653836 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145234616 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162084215 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170345369 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124114645 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139525495 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157368797 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162113627 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091802238 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120044779 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123129343 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110785127 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127532641 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1014307 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174522053 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158877925 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20965351 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155104438 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110501802 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176286053 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122776645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15888106 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166800768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107488153 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178624618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175476374 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161805764 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138130509 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171072505 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089486386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120497436 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101834687 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159572131 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129520178 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102178636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138826308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176406909 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167621492 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146123613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195252729 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160993777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184654692 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118997464 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159900964 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16298113 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125752993 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178156078 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104321979 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151469906 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171731218 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138448997 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182997136 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157365373 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163201103 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192586555 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153125897 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125658893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1178077 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16050965 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136144475 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161288673 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113553982 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131043828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148280118 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102157294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122486266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174796446 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139784846 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173936293 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152524752 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167636695 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09493782 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137984022 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15526206 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14171406 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.086919796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165138093 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179807341 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140308285 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154294046 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170748098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098543929 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30347246 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179879577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205214639 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104549551 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139388718 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156964049 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153996802 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132176492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171657237 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139895634 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173512346 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153164879 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137914655 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103969778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143087787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146507287 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.118568595 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128170101 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148330175 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111532601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206413428 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111529149 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153726663 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159585339 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143121213 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116797287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1395523 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194930182 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153620976 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173267491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149406875 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132833562 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219414926 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094366923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125329516 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095506704 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173622821 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129291351 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127632754 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203397595 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192698082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153862455 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161272141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105568371 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117177672 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154203937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117511056 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218538337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110636423 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132840045 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184805684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.146748606 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099062065 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157550225 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282190726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138559293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168309291 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08575094 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272388391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119211067 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100425884 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155303081 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164445119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133717433 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153713436 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155387549 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140676747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156599098 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107025137 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209373484 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199921832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166634212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169735543 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138474073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125581563 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158106014 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170799955 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140309111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140381458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130308488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177164512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180658168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129344136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158848853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158791805 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15492861 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168036421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102073843 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192559306 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127400723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161741238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136820005 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09230581 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153074486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181009362 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128585288 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169898279 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152307186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100642598 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123322285 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147030669 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126191166 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137682195 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125130709 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173145693 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094254809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159160579 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175693814 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098803493 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150049614 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14188935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106285836 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138358873 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141766844 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130731485 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137721331 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174450952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127066139 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17123004 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173760423 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158983155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154043832 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111664562 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662322644 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096054921 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176432222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143225211 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179390139 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145507884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161654117 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127871069 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14522125 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165518852 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14513733 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2188893 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16336055 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15420594 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099899178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142062818 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138914389 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100339149 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146788873 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158639156 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107993077 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134040476 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152683174 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111586934 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.139715636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134699078 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178666055 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11461885 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175243897 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172999398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134556043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162807858 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168083641 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126448065 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154399481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137800865 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137327482 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14745414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.098031749 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130054351 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174573049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092755375 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156081974 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15644807 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157848828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159541217 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101106488 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154733581 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139553889 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154977059 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098614557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149560975 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152146522 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100657084 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124261119 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150307043 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154490561 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12449791 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123441612 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141695652 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171024857 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122306308 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101708651 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303473784 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126308971 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184640566 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14735781 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131530916 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111302449 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1517806 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149399532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155265459 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096832294 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130153468 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126464861 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.149604069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147020399 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15278042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18042028 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156256612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194553722 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103121476 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.260652614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135657842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149302752 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099411266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126586476 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110495563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130989409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139523691 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184615184 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173837004 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146486113 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112253831 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124220912 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095488748 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128987282 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155577594 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12063236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154016892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140246173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086206758 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139653282 seconds)
  done (took 73.449044528 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141564679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.127708159 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14332707 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191213804 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161042528 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237562089 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201950471 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220947005 seconds)
  done (took 2.518197064 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.097239375 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.153791203 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.135346166 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120399431 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088530029 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.324093281 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.133029194 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119613477 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.115790723 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133220491 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.111925418 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.524629482 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120204973 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.117902933 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084227234 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.110929161 seconds)
  done (took 3.576421016 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.071896774 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.51291221 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.763695644 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.222149591 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.215277001 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.168421229 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.690871427 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.176349274 seconds)
  done (took 11.913140068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118260935 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108236706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.15835105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15897368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116185939 seconds)
  done (took 1.756950915 seconds)
done (took 114.007445731 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092078605 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095117795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119539973 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096507541 seconds)
  done (took 1.487248372 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105846716 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.081966057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106587702 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076730096 seconds)
  done (took 1.470045074 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416162536 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07580903 seconds)
  done (took 1.623142878 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111798082 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129648156 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103687124 seconds)
  done (took 1.453043811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100234855 seconds)
  done (took 1.205116766 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094089511 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096449352 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136326417 seconds)
  done (took 1.432429135 seconds)
done (took 9.770027858 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108627382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427279335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.416793738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133529305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691025423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427903406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025167388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152158044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162791235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086794925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131952764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667847803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003113262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335050279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993173186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338929532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699568787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088535026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121758301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0891111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033406648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08711621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116418092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089426713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69687066 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391805918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114358653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.347381825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113961448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093236343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37421986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115387454 seconds)
  done (took 16.763919742 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093256163 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174010579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095268414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116932354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091398518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1171724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098195459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12828991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176357669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088367067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132076927 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087408635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092786753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116460286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107488302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115260574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090296578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116754672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094618103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11720086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106928141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11426054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089915081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116349748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087870801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10085911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116365044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100149147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115212527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093263251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118037185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087938662 seconds)
  done (took 4.605542795 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137647986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18321862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.122439259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122415378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16626526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089702344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198861816 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154094929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180648363 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092026832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133969163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087031089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150646708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088585245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136341742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088152879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118423776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089935782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12243583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090287751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135625909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087190781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11675525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089518494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102159166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087742374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128104617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114472475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094826665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090666334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116986121 seconds)
  done (took 4.944905684 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095666274 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096378031 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131191827 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.132811426 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09061 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095526631 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.123978612 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090169882 seconds)
  done (took 1.965427631 seconds)
done (took 29.382870177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104706191 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093181073 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128746935 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099873683 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125587335 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104361263 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117355825 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098837802 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.127299242 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096197426 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103490031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115620978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089786811 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113871302 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101094051 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119048472 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102865806 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096282385 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135315489 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130565966 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.08867991 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.09939431 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125635598 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.113497956 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.135712212 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134794773 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10388968 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093329803 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115712548 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088545331 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130301057 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116703385 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125631321 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107852526 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126692332 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091876873 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088200335 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117506653 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103322296 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130360173 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.092828609 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130118084 seconds)
  done (took 5.767093458 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.114015279 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.158729405 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.096639752 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.123937508 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088533857 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155671535 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.12990855 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.123331055 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089016259 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.141291319 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.113769475 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.117182037 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088471599 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.117489134 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.089112933 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088542797 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.138717162 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142272862 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117747127 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.147668016 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.167089545 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.125839274 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.157134809 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.118610226 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.162475274 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.157179872 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.114553828 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153038577 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.143373977 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.087147982 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.146722406 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.11990929 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.116257073 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.089017153 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.156555886 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.130778407 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.150186904 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157166853 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.125637549 seconds)
  done (took 6.079821657 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096025226 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101932488 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137604015 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180183621 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124364506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12488044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098621975 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134867221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10471709 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115614639 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089913203 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146978825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107263641 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12452089 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.088074326 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102737158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135930979 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090304967 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122135507 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107085889 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134820529 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100964832 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129424025 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.09775385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116067252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096212673 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119803289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103037579 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12428034 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09574562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120968799 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092156019 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119161381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.099477008 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091460605 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123672077 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138311355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096647356 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096823147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118133184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100090766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121044588 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110407214 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155882683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088541503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123588348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0947727 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125605681 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087811831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134509788 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097865761 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117142416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103921128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116022759 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.08762714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130223707 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090234825 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09194069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.124355146 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095105726 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136431878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092690819 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131195517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089624489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123289113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088820394 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087606471 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121307469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138563492 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091201931 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164016966 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089943655 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122590953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096365352 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122925888 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097678433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088626053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130775672 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099132112 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121945916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.098043628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120184352 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091966174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13379896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.103324157 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123141597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094757331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122703212 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092379696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116552961 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101969743 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090756465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120615851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103694752 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117686098 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091500478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123697093 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093516702 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115849759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101585095 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121850372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088627366 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.09812502 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11756398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091951879 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12623583 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092643824 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116895645 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093807097 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.122975776 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088626443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091076739 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120399013 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0904804 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130475388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095812275 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119640273 seconds)
  done (took 14.079137481 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229884276 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211692958 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187453233 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294786247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10939042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144901003 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208555321 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162451427 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089994454 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15607581 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17642647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18453917 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172094491 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182722189 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169152349 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088802036 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136053345 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.138866056 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21182601 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290797548 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.137743121 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102103401 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158852744 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157390066 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106737895 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134107534 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142573835 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110402732 seconds)
  done (took 5.725846719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105672173 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153100031 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096501273 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143366551 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144465802 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089638058 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093642436 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117796341 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101899537 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132949064 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090541633 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124812769 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0945565 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127850309 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089546916 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.126741268 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099561011 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126110257 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092076505 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.12189823 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.101806441 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136022444 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09381821 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12123712 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105453076 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120445328 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091492226 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138629432 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126483285 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114170063 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115051423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097215888 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131225238 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.088405139 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091642137 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.120742318 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091096748 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.119240875 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.09079139 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086232185 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117497501 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079812413 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120640415 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102772603 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124340053 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086118619 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123444861 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094063436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125759845 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085134647 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091247435 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120731192 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094221901 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129363973 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092926435 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12562802 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093094457 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120225142 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098081536 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.120946895 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086214284 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090562906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124480619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093580662 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126567739 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094232724 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11915465 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091820626 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122883738 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095958621 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091913235 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127171397 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086624856 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.118849232 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099149278 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12614641 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093003395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120547191 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092237995 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088357957 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106213363 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088247453 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105722591 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092718626 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087424452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119020207 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091868664 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123469446 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133035074 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098216988 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.095583477 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119082367 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091565656 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122170661 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086941006 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121901688 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105990697 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137165676 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087840682 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.115926629 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104611833 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.120196622 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.087011186 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080707175 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127413134 seconds)
  done (took 12.482146512 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131251967 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.167728919 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119359638 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108170382 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.152169961 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.134240986 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126469723 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09694167 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119667612 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108068848 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122437336 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097910168 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121851712 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.10286722 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158982955 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099390326 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119155757 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103328216 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124322711 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143099297 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137852172 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.163271191 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.128173567 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122972911 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094573877 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155382861 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163672288 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102837832 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.130892021 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.133483922 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132142517 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162782323 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.130626156 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128494572 seconds)
  done (took 5.495427799 seconds)
done (took 50.743701932 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21757008 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423639199 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202379979 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.204641579 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.222108729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.214743492 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222770252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.39509998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.89010935 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.199147908 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204892493 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.207451955 seconds)
done (took 27.739859361 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.2673331 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364625827 seconds)
    (2/2) benchmarking "String"...
    done (took 1.539998929 seconds)
  done (took 4.036021609 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.20738539 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.205178952 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446166822 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.201046064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216491587 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213123072 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.217380114 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199274223 seconds)
  done (took 15.828039168 seconds)
done (took 25.469687465 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.249446784 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.403350614 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.477430229 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.211357471 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.201379399 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.207762358 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.197148421 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.239881516 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.205227349 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.198064203 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.185222762 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.484701961 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223553655 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.594118877 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.197831315 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.199088385 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.210667709 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.422784703 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.196220677 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.186163499 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.204577819 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.183040171 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.200259041 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.213918983 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.200979018 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194985026 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.260120268 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.197171607 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.398525911 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.232274609 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.234481329 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.197327214 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.267765427 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.195958078 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29509104 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227194162 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.378297097 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.198389432 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.188883858 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.200314185 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.378836977 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570391116 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.199353249 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.196994858 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.20262497 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.238641439 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.185713933 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.928267896 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.210339589 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.20459739 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.248144307 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.597109053 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.197130761 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.219073192 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.206792779 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.436020255 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.210871262 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.208576415 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.225685161 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.216554313 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.198807063 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20043709 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.252697317 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.195608874 seconds)
  done (took 143.219665068 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.200495882 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.203046545 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.201110605 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.264423225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.203205034 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.203226721 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.198753622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201815461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.199835522 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.231713776 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.202299141 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.194885021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.214742861 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152348559 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20164836 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213464287 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.196610061 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.210820816 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196434455 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.200958875 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.202690091 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.203445996 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.21052937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.195031256 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.226638203 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.264811832 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.204258376 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.200254683 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.194400859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.199676757 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.227895846 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.24940702 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.729798633 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053373889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.207920661 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.222023106 seconds)
  done (took 80.010078716 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201519828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201472645 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198358279 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228690513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193733795 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.688339789 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.69165251 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.89739643 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.275411091 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.308926012 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.382688647 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195576571 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291281508 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211634447 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197381899 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215000068 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223451726 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201403147 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203115946 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69054293 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217249689 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.410388199 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.358110679 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209931323 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227682439 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592085114 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195795625 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201737473 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226447403 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522627055 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239498996 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197122292 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.510013435 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.292194236 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306225023 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199640312 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228342427 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203463909 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474041973 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196249217 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200757024 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207651136 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201556428 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.811279875 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204525544 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.690023422 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203468376 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.080147096 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199350888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201380465 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.062345713 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.73603362 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205971627 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203100445 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205056853 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201424417 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204018456 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228649201 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201932781 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.085926447 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292477493 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200761588 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208371754 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231732332 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203672935 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.397565418 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20429523 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.670745985 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264738444 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306019333 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.689484234 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206926486 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295694432 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315738146 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200008107 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204406684 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2053263 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203843038 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310207952 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198029703 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.571880543 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36351362 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212824952 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.292432788 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301103497 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196937539 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49287508 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205953587 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207571632 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870996243 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292579079 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196987293 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204177163 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205156491 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207090223 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.572192497 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.691382385 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.362259822 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20921154 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.338892184 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197413951 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.583358608 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.681660267 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.815283129 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208566024 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317072388 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361953704 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215818551 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208518402 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.29165365 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209410702 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268786338 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201242618 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600303328 seconds)
  done (took 364.141833923 seconds)
done (took 588.503061635 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.830524249 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.817437423 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.92104259 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811003234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.776943374 seconds)
  done (took 10.288561979 seconds)
done (took 11.42138326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38005344 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.374364255 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256632485 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377864153 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.67776593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396767194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.35853599 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226740298 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.307022041 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276250991 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308532503 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25279073 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241764114 seconds)
  done (took 18.566335718 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535059705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203422562 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267050806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545737197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244012773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568405582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427384121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.223503952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41713848 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217398763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224378704 seconds)
  done (took 18.008105958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54742199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.205758223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26756475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547649916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244449375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535308447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429389696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.217956061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419376541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219444813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22166996 seconds)
  done (took 17.990961867 seconds)
done (took 55.699674327 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249472829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.369062466 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2330937 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223489529 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216871515 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216199141 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222076853 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217890211 seconds)
  done (took 11.08364807 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219116328 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214164049 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216627281 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214553592 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216353611 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216049023 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218998574 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217095953 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215741251 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217492635 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219856473 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216541654 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218926355 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219594668 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219761149 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216479918 seconds)
  done (took 20.612956408 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220090407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215442804 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215315945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216049171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21536251 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21786261 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217984934 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217388703 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216118576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217992107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214905924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216727726 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216639332 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217915177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217625795 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21750435 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217385604 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219365273 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222906335 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219050164 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216528692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216055747 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216934838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.217269894 seconds)
  done (took 30.353955058 seconds)
done (took 63.185049493 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.218372257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.221183422 seconds)
  done (took 5.576134227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277378434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.279269122 seconds)
  done (took 3.696245803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219514593 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222000379 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224356392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221952569 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221546965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219761568 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220860929 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218302199 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217712372 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220331777 seconds)
  done (took 13.342476913 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218902554 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222454173 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215731375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22117812 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220694237 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219460951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221079178 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221672428 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221608644 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219063634 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.221103398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217666017 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220747852 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220619605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220462171 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218699883 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215047542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213051162 seconds)
  done (took 23.087122787 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22853408 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238828884 seconds)
  done (took 3.60080624 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342498521 seconds)
    (2/7) benchmarking "second"...
    done (took 1.257487763 seconds)
    (3/7) benchmarking "month"...
    done (took 1.321284631 seconds)
    (4/7) benchmarking "year"...
    done (took 1.309072063 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253803347 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232474904 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.255126717 seconds)
  done (took 10.10439006 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214221398 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.416293913 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518756017 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.782584994 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217801861 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220492657 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.111180829 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.219016522 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219698703 seconds)
  done (took 14.053631279 seconds)
done (took 74.598191639 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.208702947 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.224735865 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.225079889 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.231334386 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.551255996 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.240655203 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.210559665 seconds)
done (took 16.026832792 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.203840477 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.195679902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.19055456 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209166057 seconds)
  done (took 9.931371147 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.166986358 seconds)
    (2/2) benchmarking "read"...
    done (took 1.520225122 seconds)
  done (took 4.82129875 seconds)
done (took 15.886526448 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216292095 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215413376 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213958584 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213435688 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215413335 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.212716288 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216216244 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.212670177 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211767986 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214463688 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217255235 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21765758 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.214878183 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.217220416 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217361273 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21480232 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214048777 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214876711 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213879195 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214450468 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216045952 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215592295 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216552599 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214487858 seconds)
  done (took 30.297056057 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219086058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213259384 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217358392 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218679158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216241572 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214455543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218497054 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216248396 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215384446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215139977 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215501524 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215155729 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215562553 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214761964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216414902 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215463877 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218093314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215304013 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217143617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216413832 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215614169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212359461 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214971815 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220230835 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217153932 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21797958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215956473 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214827376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219886299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217345097 seconds)
  done (took 37.626008879 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222637491 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225297698 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220076528 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217516155 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218464026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219080271 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216902122 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218824995 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219663224 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218831723 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220714275 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21858275 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217178192 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218648924 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221796529 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219219156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219534609 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219628912 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221698974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220216091 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219726909 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218606258 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219004654 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218424926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220047705 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220950747 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220130157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219658899 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221368244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21957482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21873894 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218767181 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219055985 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220588076 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21889301 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221556498 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225520122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226245349 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216371112 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.220862894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219672857 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21937883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220173212 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220142723 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221703619 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220103633 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22198141 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219070592 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223403094 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222729244 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222874564 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224288257 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221961016 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222612072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22131477 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223456574 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223405537 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222321536 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225547577 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223529875 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221981443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223576082 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224173154 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224947776 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.224821432 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223054968 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221304915 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224063169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222796216 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221916165 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22331024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223951432 seconds)
  done (took 89.055453569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22459085 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221873156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220077903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221188256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220831251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224470854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221023491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225028947 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220898241 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22236296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222199886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222523205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222271883 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224163182 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22344349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.22257019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.223687248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221742577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225259625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223771716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22459699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221002384 seconds)
  done (took 28.040434702 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219238133 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22532458 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222297991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225615312 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225769035 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226747466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226436783 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227707536 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222511688 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222423939 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221728725 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222103658 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223808055 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222623506 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222618098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226808037 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226162202 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225202078 seconds)
  done (took 23.177551516 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225055297 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221426535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226446951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221334971 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.221446523 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226070104 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22504103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225844 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224625569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221129169 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225453537 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223534537 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225811061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224053438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226968516 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225627627 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22788307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223481202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225881386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223729194 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222496567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225230503 seconds)
  done (took 28.07957933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226656024 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226154923 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225491243 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224907441 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226986216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229592591 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22722839 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.222960048 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226884313 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2274165 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2241764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226415168 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228301857 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225476189 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226704017 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225101137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228953558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222993005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227208709 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22611931 seconds)
  done (took 25.668322233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227928881 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23049591 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228628707 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226600069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224717567 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226485845 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22998375 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228011317 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226180459 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227363664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230201674 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228574469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227693388 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228003128 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22992936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230435082 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228433162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227887487 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228462305 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230029777 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229662338 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230133542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22979845 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230489805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22962583 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228887219 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230058847 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229446424 seconds)
  done (took 35.550744862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231666725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23187552 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229492419 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228031817 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230509369 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227396805 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229075091 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230220195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233453164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227877092 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230785857 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231990104 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232112063 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229511401 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228588762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22937605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229947929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228009371 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229884418 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227967254 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231103368 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232754653 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232732857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229053802 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229077643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23095754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228889334 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229108053 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231960178 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229372281 seconds)
  done (took 38.051280636 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271465484 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276904302 seconds)
  done (took 3.694362499 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229071752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231847733 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233500645 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231628101 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228260422 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232474854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233901361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230736093 seconds)
  done (took 10.998139494 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232360877 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233398387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234282415 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.230539863 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231527884 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232742619 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241338075 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246337011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.232059445 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229303397 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.237771578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238909219 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237315259 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235426528 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236526713 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237377349 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232920757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234941635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236428344 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234785845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232503499 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236498784 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236860441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231175938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232591865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244744849 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235796191 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233696697 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236881405 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238657438 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229629501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.229615177 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23264805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23616306 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235760198 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.233379484 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244835339 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252126269 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239035785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233904832 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235900892 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234615125 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236053132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238428906 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236876816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23499808 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235368032 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233688066 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.234818038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239090221 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242178492 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238657363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234726261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239164156 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236701529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242042319 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247968625 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237504633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246356287 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248262846 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245909419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24745995 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238303028 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238174989 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245115973 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255811107 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2467814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250897196 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23528307 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239546916 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245719653 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251477382 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261320376 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238791911 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238789171 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238408155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240965524 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23698626 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248100856 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.257441884 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236986809 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238231922 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248535651 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257692885 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239441476 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239077307 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237314671 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239251519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239968924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249182217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252827197 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238223316 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237012046 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239467892 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241151981 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239196402 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237602681 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24308347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238608406 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239206796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237646055 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242601238 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24736897 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239816615 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239980147 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248339884 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233386168 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240845825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247452104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240319142 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239031277 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240963363 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247269598 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237922573 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243617955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247136547 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239876465 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242098419 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238159335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242113471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249823732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260737073 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237834159 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241151069 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245649079 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246961356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240580925 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244178763 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242937764 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237590337 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240366308 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244781442 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241400699 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240649261 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239183158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242276521 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237354577 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241784363 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237381042 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241202175 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243193259 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242797316 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244467011 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246625342 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240039516 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241173753 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245551135 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240533872 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24174803 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2444228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237720547 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242930693 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242417546 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24117238 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243871255 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241889108 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240908217 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2394824 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244493797 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24157268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243361637 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245046448 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24345358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244901671 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245013956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242991991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241743581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244453783 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244203134 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.24323461 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242355495 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243373992 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.246858338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.249287317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.2445613 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.24502946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246671613 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241360111 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243243783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24361096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248481724 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251901551 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244772118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247164939 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.242426477 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241007827 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243463532 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245928012 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243129992 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2451123 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247196899 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248469535 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257562868 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2647803 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245841773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249510476 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245118338 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2457788 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246804426 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240554679 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243914721 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244124675 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242720003 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244901795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244635815 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24419468 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244373366 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250551211 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.24457853 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245757346 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247581905 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247162088 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243458843 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.246119106 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246149877 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247079629 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247203808 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242331046 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245477819 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247993133 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248821008 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247128686 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25212729 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242249225 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249329217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247466388 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244998652 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247314435 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248727686 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251464397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249832367 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253354994 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262444201 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2491938 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253136225 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255401725 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248389251 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251218245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249644913 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244882247 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25093723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256547914 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245892901 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247817248 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248253753 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242461428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248050493 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250138283 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244519386 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243305682 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.251978309 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250033058 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24540719 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25072913 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242694246 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254345373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244095449 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244751661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249792533 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245566978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244034636 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245012096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241363341 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248707188 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250350778 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248338123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242694119 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.245930981 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246239472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246674424 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244505249 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244121634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247423833 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255979558 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.26270791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250011243 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.245976919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250165448 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251192563 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24552162 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247479994 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243936709 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246248465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245461881 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244818357 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241360105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246423577 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245686822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244495001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244940244 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248340253 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245144731 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245298355 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243744945 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245797688 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247052934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242970464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244566546 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24681254 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24596062 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.246217343 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246780617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250167321 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263173747 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246236777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244644637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245682569 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.241925435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247717358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245563652 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25022073 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254693558 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252314852 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257535799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24792311 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255093991 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2453608 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24931554 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251624371 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24393802 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245526631 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24641406 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246921344 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25370953 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263112467 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247900705 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.248942631 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245063548 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244181182 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245887642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244290335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247560461 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246137907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254591416 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267253996 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247273555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24811045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242159141 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.243456612 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245446987 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244006748 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249057686 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246374459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24811495 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246376291 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245042578 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247507216 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247082015 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245629478 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24325331 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247125048 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252890293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266776082 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247005023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.249492599 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254723237 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246541521 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255595139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263467435 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247619501 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246695176 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246376806 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246985062 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246964852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245863885 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.246688438 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.245921781 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248639301 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244744525 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249396718 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24951046 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245114698 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24731926 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256483194 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265561463 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249561527 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250068333 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244135043 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.248274864 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249339938 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245529204 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247512823 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.249365131 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255456274 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254414154 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250042274 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246996904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251416404 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246525859 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249223957 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247881508 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247980594 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248467762 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.247974362 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249527474 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252638343 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.247489326 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24899148 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24929362 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248928654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259088792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248390999 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250597431 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249697263 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.252271351 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250292256 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251868513 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247750445 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252729525 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247776661 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251127161 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254589497 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254759868 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249862371 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25117852 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.250053305 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251901989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250575932 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252689219 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250314192 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249410043 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252676175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248448598 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251410019 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249268971 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251679556 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.248910249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254076369 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253221659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259622403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253361767 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.250775401 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.251611966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252765254 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252367459 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255061657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260533699 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255388147 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.262350955 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262367659 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256797311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253371458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254755302 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.259585283 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250472319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254825469 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253514258 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255735303 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254362252 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258290891 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252147234 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259019692 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.254522204 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253411119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261167495 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.273335784 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253663123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255479323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255880475 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.255243169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.25126576 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256749636 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25290089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262695948 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272914626 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253278092 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256632965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.256617783 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258977892 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258393675 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255951771 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25772271 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253165473 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25721342 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25383795 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257059641 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252863384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256581965 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256701466 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260404677 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264376233 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254718889 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256796898 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256505354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256994443 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254914987 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256949877 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25351938 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254886837 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257850841 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256818441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259588668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.25968116 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256680709 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25979756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258606179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257529423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26017247 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266205232 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259994569 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253225649 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256157045 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257271048 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257962026 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258135643 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258585757 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257507227 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259626968 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259335594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258698733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25991609 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261807471 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273199953 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277617644 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258985443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258906083 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263160092 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.258824175 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25773415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259572364 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261374321 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260116088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266147956 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259065019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26661998 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274134201 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261518518 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26677429 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262332019 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263519411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264056577 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258517259 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257448383 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263045533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273559067 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258960236 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266773289 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285257201 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279437892 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260304692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260664175 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259890927 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.259221445 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262805153 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.25819523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260813296 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260295059 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258482431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259472052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265983695 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.261971422 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261850922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25881365 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260088164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262544445 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256100525 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259823042 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261724844 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26264798 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.2577174 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259296104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259466305 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2700137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283596268 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263544051 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261301914 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259420055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264261801 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265356717 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270335147 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268505439 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260199969 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26240229 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26468147 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260151449 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265166456 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261129873 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261644938 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263302889 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260471564 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273550042 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268705283 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266359119 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262130282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265904975 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263870114 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265931115 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261862907 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26121164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26191456 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26580961 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264777729 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263906284 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264838598 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264208814 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.269181649 seconds)
  done (took 745.901527961 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263449566 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260375741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260543621 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261311703 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26035631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261574998 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262710012 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260673389 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262662786 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264769359 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263264607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26131311 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263028677 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262556235 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26251527 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261874883 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263803612 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263621632 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262716877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263115596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263149809 seconds)
  done (took 27.693904303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27046357 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26543569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264583223 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26840758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264498602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267648836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271626366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271575202 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273751107 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269533635 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26918894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267444271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267529055 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.264958561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273236145 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267993438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27268724 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271971857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272344292 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272905652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274218302 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272663119 seconds)
  done (took 29.118308085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272743237 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27484176 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272540351 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.267789344 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274876933 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270991626 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274061786 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.27284618 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272689555 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.272034797 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269095995 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.274666886 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281177863 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.280279609 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.277420985 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.271190201 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272647285 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273090706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275034362 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.2684095 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280198526 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.266697744 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.275416838 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.274652238 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275469266 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275750922 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.277271207 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273099412 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.273832556 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.2784853 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.270704081 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274372932 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273405116 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27043038 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.27531932 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272695062 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.26936279 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.269163932 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.274393655 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285471378 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.29358507 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276436411 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275555738 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.26974336 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.27256501 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27969245 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27995253 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.269176664 seconds)
  done (took 62.358665407 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274222316 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274343435 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.265007495 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27198959 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274680993 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270028768 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27644389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27469111 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269615974 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.269695822 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273957519 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271011657 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272552452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278080641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.269478005 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27435752 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273237331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2734192 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270991052 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26837898 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276024022 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273247673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27500086 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278137872 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274062427 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272148845 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27744552 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276939269 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274255539 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27124515 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.27893198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276159969 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278464281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276525065 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277186568 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279173975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272873512 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.268710948 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280181946 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.276551573 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.272056211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275638931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27722603 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.277639891 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274765414 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.274198051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278330311 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27083622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274508922 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276141369 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275264502 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272292054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278793388 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271917245 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279206894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273972153 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271047942 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277036767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273640376 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27552475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277130046 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275129949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272397796 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.273240308 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275931904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.269775034 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275197831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275192933 seconds)
  done (took 87.845731052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278234555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278957913 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274932627 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277859736 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277856305 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.272026687 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274946223 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273217078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280553958 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279511003 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27287003 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275229746 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276881742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278687948 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275925565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274828341 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277095716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276595049 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274282711 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274031065 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275717699 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274199506 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273333208 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27483408 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276504341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270382815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27509169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275721482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275587934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275507705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27649778 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276966085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272497251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273763598 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275756017 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.274395323 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27492595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273964646 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.274558801 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273659722 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275514362 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275528299 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274689445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276058138 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275526185 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277480755 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27601627 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275601154 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275772259 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276309506 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275725963 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276857649 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276840453 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277272576 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276950072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278211306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274347658 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273815668 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275902464 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276075401 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277544878 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.2790311 seconds)
  done (took 80.2875199 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28051769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277704035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273107207 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27462076 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275741547 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272747389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276956505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275782633 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27544674 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275499737 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275407981 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274366445 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275266164 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277504451 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273148423 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274973315 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271959501 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273067699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276387958 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277245893 seconds)
  done (took 26.704974785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275702229 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276191235 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274126563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274747209 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276687697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273849371 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276567094 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277292243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273851023 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278279817 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27750868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27655011 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273172383 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276076624 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278305232 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275232088 seconds)
  done (took 21.614591276 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274286541 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.276787087 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.275850816 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276895567 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275449243 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.275287426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278144041 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274717372 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273886449 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278067956 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279101393 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280908287 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279557931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27855995 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275051656 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278527163 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.272875379 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275391859 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278321423 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277169083 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275609431 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275362609 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279883381 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279955937 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276709922 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280262835 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276931847 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276538282 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276344546 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279697593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27602692 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276616572 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275763804 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277316251 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278097228 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277188492 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279563304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279229266 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280123479 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280091304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279381706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276469827 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27892182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279248874 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279466064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.27890769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.278724915 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.277126364 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276972521 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277716676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279361069 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281489512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282620824 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282295615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280609406 seconds)
  done (took 71.478099359 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281841228 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281128054 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278558551 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278301245 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280476971 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278312732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279130961 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280527696 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27905831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279925685 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279262638 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280778885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276882257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279529769 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278503326 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281207358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277940666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278361459 seconds)
  done (took 24.228963398 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280650491 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279232228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.281526965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281152493 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28030667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281498227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280372056 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282738494 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283067203 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280712852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281229944 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283410424 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282010713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.282413405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279599883 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283109406 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28448148 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281825829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281994879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282489103 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285495725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286937372 seconds)
  done (took 29.407896353 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.282111766 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.282401803 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284743218 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.298885014 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298523708 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.284000218 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.283741541 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.28433152 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.30564764 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.331085349 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.327274032 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301070774 seconds)
  done (took 16.768293143 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282501645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285118456 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282042618 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286452025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286156222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282643238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281138876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280676984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284474088 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281419992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283553891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284991434 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285096991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28369436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287558957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285294943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284785826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282399159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283898681 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286803045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286121973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286613252 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283548214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284356227 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285826055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284063183 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2866696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284923775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284320337 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286137212 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285913269 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285447015 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287734713 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287693829 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285886213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286794511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28780222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287034253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287715238 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287575635 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289548945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287519543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288929427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285842586 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289779971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292501141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289666673 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289008342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286741382 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290422119 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291001459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290294774 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291484197 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288676357 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29067624 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290088688 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288494351 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286605538 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291560811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287972346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285558832 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289850165 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2910062 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289878155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292239029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289299966 seconds)
  done (took 86.135217595 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288357183 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28752446 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287311763 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291044049 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286306204 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288248273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288436745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288870888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290225062 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289314941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29212418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289328769 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290450068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292379065 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288267751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292936075 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289464605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289476811 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290190638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289955976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290098563 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289256522 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289576386 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289745692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290920278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289319679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290533577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291618544 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291152502 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288243476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291136755 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289102693 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289110095 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290527999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286142792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292793535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29047806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291286106 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292998737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290446813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292415642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289541437 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28932615 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291795002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29221597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291419693 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291784846 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291078912 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291986546 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291709801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291825361 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291536479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292370701 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292480725 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292406632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291123771 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29257393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290191055 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295022329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291251286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288520561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294530966 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290813417 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291421083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293358072 seconds)
  done (took 86.392363425 seconds)
done (took 1747.308138563 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459151328 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406854875 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291961019 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.302570247 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295706141 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.318463219 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306682335 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292231638 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293022584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293028424 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.291016066 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483385663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.286715227 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.294607863 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295355298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386470657 seconds)
  done (took 26.511868897 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320039353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308502324 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.407250599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317780623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32056226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46991494 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352682577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297025338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454648776 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340825716 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.291296046 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316513101 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297887623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.289068193 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316493827 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473083941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.53330215 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.294490048 seconds)
  done (took 28.620581175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712391918 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.316705208 seconds)
  done (took 5.241836979 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316973569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.301462723 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.300700513 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298599399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291727032 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.288317845 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300693356 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.29761615 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.28994583 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416516096 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.299132883 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308322618 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318040829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298458553 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300150462 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3336744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.467597084 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.296349276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296414097 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304681693 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301309194 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392108813 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336270139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295518943 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.417019924 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.285759236 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293519681 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.296646316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.424351813 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.289293367 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290070354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293377127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292821789 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.159093412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.797219216 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.288495932 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.3151755 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300403271 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.284755814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.424864284 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.287477261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293379357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.278109587 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.77029015 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.418427651 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.39275927 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.288411926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281256917 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284228933 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346307401 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.282385669 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.285216243 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324994932 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.030306265 seconds)
  done (took 82.893776898 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.2770174 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.275039852 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449615114 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.298596771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273557473 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294226517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.276309576 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.542996434 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.281206986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286242472 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59537755 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802263552 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298582719 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.314585814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.117733273 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.322865556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2750151 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.275673302 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292716886 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.280070458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808138758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277622275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.277012079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.527455488 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.315118515 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754043402 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28100657 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.297970182 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.27576294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.276925841 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.763304466 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304862002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.336472896 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.280139118 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528395731 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628607098 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596594541 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.27698974 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.311183412 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278513852 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.295822458 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749662174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.617719904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283919476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292452144 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761786277 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283353298 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.286202304 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.287467555 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521534399 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.277656925 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.27763846 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.277972893 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299357315 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.278677624 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.343560448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.361568768 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760389618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284941627 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.279480444 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303559005 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.27944645 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28075652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280149046 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280594283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621077081 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45961294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.285776851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621096889 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76372887 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300456798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827943335 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29950445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30042624 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.292483721 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280149376 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.284520234 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764045694 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318190729 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.281074727 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606060979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.289625274 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592361462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.29343852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315037257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828594792 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.296923917 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.282723334 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.28017487 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.287009148 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287070522 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284888657 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540639847 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.347307569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.280329148 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.282420157 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.285761699 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286484424 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.286030336 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28387838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829678681 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313159037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280792629 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282181295 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281499115 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28868746 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.28300975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.282351005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539926884 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.282566987 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.28444949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.283841448 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.281875979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.291345214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.532442951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.286173593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57462435 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290656274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281808519 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.29430327 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281444556 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35067124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282753704 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.288100643 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.184598432 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580772367 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304495281 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.28879108 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283856301 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285907188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287879485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284298594 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.302547548 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285843749 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010257253 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.322274668 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.307539532 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.282954408 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.294926977 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283921164 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291670237 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282821194 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.569779395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.553350333 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433266865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.286597092 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.282773439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.985103222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352559236 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460450563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302360498 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284311607 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525987809 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.473217619 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.283824214 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.283771667 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.287806451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539250398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.28517342 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586989034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.796657195 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.305652319 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291789735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.01454487 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.004912802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.293495181 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.286630064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600026958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.298579052 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284616351 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.284026077 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285690527 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.285954934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289005362 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.285389516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.28523399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.285688881 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.418210046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473365374 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302233055 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295394298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761330117 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294671751 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285210731 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299647336 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.28647562 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286894393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.339618557 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.288987622 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.289046995 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.287125325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297055773 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823649242 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285379095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292377679 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474453984 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939198467 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310197549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286502511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.292437487 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.15786246 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789266484 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.310454303 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579462652 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.297232351 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.324833222 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297589731 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380623317 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790541127 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293468426 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28875591 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903689348 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.308720503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.821056033 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.288124326 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.287898481 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849452239 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309405967 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.293169618 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288404825 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29597183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589320024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.290030058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.308903001 seconds)
  done (took 486.257737071 seconds)
done (took 630.742486641 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288596413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295791647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.2818885 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.295853894 seconds)
  done (took 10.373509656 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298695402 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296060229 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296058954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293806259 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29725136 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294743135 seconds)
  done (took 8.988951889 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28986954 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.290337656 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.295500453 seconds)
  done (took 8.086329163 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.491193495 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31156013 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.617495957 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.314829804 seconds)
  done (took 8.947698158 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296677726 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.29474453 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.296329227 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.297966611 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.299511336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.298813114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.299114807 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297315282 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.299405643 seconds)
  done (took 12.892426604 seconds)
done (took 50.501887996 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020862355 seconds)
    (2/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.292325598 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277515854 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.28678526 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.288121179 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.286212953 seconds)
    (7/286) benchmarking ("sort", Int8, false)...
    done (took 2.29056824 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.281627421 seconds)
    (9/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.290039553 seconds)
    (10/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.637743011 seconds)
    (11/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.280293806 seconds)
    (12/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.280042619 seconds)
    (13/286) benchmarking ("sort", Float32, false)...
    done (took 2.305121419 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.288101395 seconds)
    (15/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.280602242 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.543863417 seconds)
    (17/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.300230458 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333541533 seconds)
    (19/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.649082049 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325666729 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.279148291 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.317418605 seconds)
    (23/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.007417777 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.409227717 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.291808463 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.300557821 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.281807412 seconds)
    (28/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.398475224 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.295187733 seconds)
    (30/286) benchmarking ("sort", Int8, true)...
    done (took 2.292763923 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.086326262 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.501199983 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.319725673 seconds)
    (34/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.278875989 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.279891396 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 2.308672518 seconds)
    (37/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.081919372 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.299128464 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.421983954 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.396282061 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.286783236 seconds)
    (42/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.299053686 seconds)
    (43/286) benchmarking ("sort", Float32, true)...
    done (took 2.292794602 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.318912337 seconds)
    (45/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.120803454 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.177347014 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.359429737 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.311039274 seconds)
    (49/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.790217319 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.385838203 seconds)
    (51/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.280015006 seconds)
    (52/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.362692837 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.654503476 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.411566263 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.573926548 seconds)
    (56/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.282095984 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.298961392 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.296949018 seconds)
    (59/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.312431851 seconds)
    (60/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.650503221 seconds)
    (61/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.436318616 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.282308328 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.350938453 seconds)
    (64/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.28566012 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.286324992 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.432545553 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418087684 seconds)
    (68/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.320323601 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175275264 seconds)
    (70/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.342663256 seconds)
    (71/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.499568787 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303506715 seconds)
    (73/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.301488626 seconds)
    (74/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.501964343 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.282832133 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.348644257 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.226608782 seconds)
    (78/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.302770928 seconds)
    (79/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.300018181 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.386630597 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.722663129 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.289670065 seconds)
    (83/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.380200146 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 2.29532521 seconds)
    (85/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.879229829 seconds)
    (86/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.290353822 seconds)
    (87/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.282938615 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.311237454 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.029728816 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.402364689 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.28199824 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.15643886 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.330469225 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.162046376 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.385521901 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.288336821 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.28487221 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067700343 seconds)
    (99/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.284472292 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.321130002 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.643737465 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.325891882 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.283727583 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.384886064 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.297774097 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.290388854 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.501287662 seconds)
    (108/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.310639928 seconds)
    (109/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.284752713 seconds)
    (110/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.297612813 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.319402263 seconds)
    (112/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309108385 seconds)
    (113/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.804276378 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.29216141 seconds)
    (115/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.292445664 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.285309406 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.01312462 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.302268161 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178299964 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.705889292 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171763576 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.187079506 seconds)
    (123/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.285054176 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.823599299 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.322724896 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.556543658 seconds)
    (127/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.325679144 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.298371591 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.344615559 seconds)
    (130/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.40972951 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.304987339 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.017031571 seconds)
    (133/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4260113 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.558880822 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.908554429 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.31148825 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.286645114 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395747392 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42976717 seconds)
    (140/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.296811082 seconds)
    (141/286) benchmarking ("sort", BigInt, false)...
    done (took 2.300699176 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038018853 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.326663105 seconds)
    (144/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.011800918 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.161634144 seconds)
    (146/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401865609 seconds)
    (147/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286680874 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.329925671 seconds)
    (149/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.303367923 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.322618479 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.286724918 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.296753598 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.383056167 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.700379389 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44459761 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.325300008 seconds)
    (157/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.560892572 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.106314981 seconds)
    (159/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.486700655 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.067328175 seconds)
    (161/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.299071862 seconds)
    (162/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.561671703 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.30308271 seconds)
    (164/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.310663946 seconds)
    (165/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.288564316 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.295321684 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.344768903 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318610976 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312171833 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.386664064 seconds)
    (171/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.485661924 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 2.303584308 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.289374043 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.289355528 seconds)
    (175/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.698795001 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.308794731 seconds)
    (177/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.509061722 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.328254889 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.132501895 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.70218359 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200264301 seconds)
    (182/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.311268043 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.343970207 seconds)
    (184/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289520497 seconds)
    (185/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.327615155 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.302353634 seconds)
    (187/286) benchmarking ("sort", BigInt, true)...
    done (took 2.316241994 seconds)
    (188/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.231867083 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.876572816 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316020647 seconds)
    (191/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.302511792 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.865895774 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.932527819 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 2.302842075 seconds)
    (195/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.319627042 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.370191797 seconds)
    (197/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.6785241 seconds)
    (198/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.297264458 seconds)
    (199/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.303392028 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.648441677 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.367163848 seconds)
    (202/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.301569885 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.291929227 seconds)
    (204/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.889464053 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.297624049 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.508106213 seconds)
    (207/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.29186819 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419460719 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.27874929 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.290641618 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.291023077 seconds)
    (212/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441159086 seconds)
    (213/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.905209218 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.292720765 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.331380596 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.291268256 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.292326128 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.345839894 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.327492165 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.759362216 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.330531988 seconds)
    (222/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.906104891 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.344980239 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.290968936 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.308596936 seconds)
    (226/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.936014074 seconds)
    (227/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338460883 seconds)
    (228/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.029015743 seconds)
    (229/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207665601 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.305538141 seconds)
    (231/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.302545974 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410958225 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.293422284 seconds)
    (234/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.319389447 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.327965224 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.292172973 seconds)
    (237/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.82223215 seconds)
    (238/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.30937838 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.304146184 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.514316446 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.32001134 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.328027324 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.321963777 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.298953182 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333525852 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.294662125 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.702900821 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.319824598 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.301642936 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377960893 seconds)
    (251/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.555275459 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.723939127 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.315110129 seconds)
    (254/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.299024089 seconds)
    (255/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.323601516 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.301221868 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141706493 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.355306251 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334223514 seconds)
    (260/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.300104283 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.307984328 seconds)
    (262/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.441482029 seconds)
    (263/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.333129978 seconds)
    (264/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.435171659 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371416058 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.389851715 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.420215186 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392268523 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454673822 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.305419597 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.390348619 seconds)
    (272/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.342527384 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.400751484 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.306798944 seconds)
    (275/286) benchmarking ("sort", Float64, false)...
    done (took 2.33769527 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.350405482 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.294687365 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.295444319 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.31563762 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379650757 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.413160449 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.331680957 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336243487 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.333297983 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.324099791 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.306794421 seconds)
  done (took 556.9193566 seconds)
done (took 558.132882498 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.344334787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337959944 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.321119447 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.34327002 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.43480502 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.497294373 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332687592 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.323832204 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.369586783 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.371179038 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.320078685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.497564643 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.323048219 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.323149797 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.322841373 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339312845 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.324032056 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.322005322 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.337567329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334122328 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339630378 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.320741018 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.374891566 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.497327342 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.327598661 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326110174 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.326536704 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.346204632 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.434274522 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.325685146 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326252209 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.334819571 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.324340449 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.324424149 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.319629168 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.344379415 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.334432042 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.333880585 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.328124098 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.355552019 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.324615325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.329426176 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.325490611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.324319638 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.326617671 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.328622428 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326028107 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332839907 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336705211 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33960542 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.313883728 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.346372844 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.327614317 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.326868697 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337601966 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325069146 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.331597458 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343087591 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345844612 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343753343 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.315913821 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.332570407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331979236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.341574558 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334463114 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.32174959 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321176495 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.330011164 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.321646622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.33017598 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.319573708 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334658385 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.326799932 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.339242454 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.358052135 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.315379134 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339983429 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32613244 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.333453954 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.325390389 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.336657968 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339385584 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.332494146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.329096506 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342370257 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.504102925 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.337890348 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.32917663 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.337349543 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.346757291 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.334928113 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.339647651 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.329939732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.322711201 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.336913668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.332711723 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331004835 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331252654 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.335504945 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337248372 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.324762341 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345089651 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.323762452 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.325355088 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.329424726 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.340723115 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.325631403 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329791964 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35093333 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.376233073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331898518 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.318429973 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.331745256 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347518264 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.338334437 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333552617 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.325214705 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.318723842 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.318557549 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.342708324 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331699955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.32844789 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346607483 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333174333 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.327333641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.320476239 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.349459714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344504971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.450117353 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341244053 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.362088981 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.327772898 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.333684564 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.361217714 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347904585 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361513426 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33331519 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349830887 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.345800094 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.326551528 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341382727 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342027312 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333718104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336671516 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328415435 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.362850956 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345563308 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344954615 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.352585367 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.452164082 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329653783 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.319525196 seconds)
done (took 221.200453011 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.390229186 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.324853527 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.415950117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326539008 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.425207197 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.424825217 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324759821 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324044699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.324445735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.704848473 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32297674 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.325524126 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.325842041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.325831355 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.412499689 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.329078942 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32449804 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.669393747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.325539095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.399222568 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.325822488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.325171694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.330132383 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.708053817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.327223892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.323156027 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.397774409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.329228968 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674508492 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.32478167 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.327264996 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.675167058 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.420270131 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.347319745 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.339005845 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338017553 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.427983341 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347758333 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.412188133 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.410886481 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.416128616 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.366740237 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.323940983 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.331690023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.332470285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328276319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326545694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.357241394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.328674238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.329231942 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.670131667 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.340869444 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.327955817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326693578 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327509055 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.356853405 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.327911253 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332227926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425208377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.331541152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.393287226 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.714298534 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.711814282 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330180424 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.328320114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.328060755 seconds)
  done (took 104.113677577 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.397422022 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.404011211 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.441337714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334610148 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.380789554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.445764811 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.332209489 seconds)
  done (took 10.981675219 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.339388457 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333720802 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381677305 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381822133 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.331123703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.547737329 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335050327 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347208071 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.332212276 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409684853 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33618741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334440481 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342336558 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.328525062 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384620086 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.344037206 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448433666 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334898599 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.333355987 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.483098711 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329962092 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.340494733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406030296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348010635 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.334544019 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341954506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.237159683 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331169331 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331571534 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.334877251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332383587 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.434561757 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338302857 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.332048227 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333185267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.493131586 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333628906 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331941858 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333689011 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.335177404 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336099099 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336804372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.334512739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.332783045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336537899 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.357588213 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335568857 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.333515607 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.334268277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335757543 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.40733075 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334579553 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334810872 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.333060344 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414709021 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342270238 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.335208025 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.334406912 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338246377 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33230755 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486591948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384325081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.33477357 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384197955 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337674666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33856368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335378224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.336768645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427962456 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.335949805 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387119362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.333162606 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558961894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359609195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339082896 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.338649192 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.339385246 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335934623 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.333877008 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.344076522 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.333320475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339840501 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.343637215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333897373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334653424 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.525533014 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495009623 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.334643204 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.350343627 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.345020374 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.335426555 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413311784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338598069 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.334781119 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388876507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452550447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414445298 seconds)
  done (took 138.257641373 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342864068 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34622714 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342351416 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.358959647 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.341075579 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.339565648 seconds)
  done (took 9.323013786 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343086197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.338597635 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.338535109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.340369264 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.338519492 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338260163 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339547051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343267704 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34165334 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.339781035 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339448641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.339681231 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.340953164 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.338625705 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.338658102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.339078153 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.338534341 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336833695 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339042051 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338538992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.338331971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.340548185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341092076 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.341286336 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.343729761 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.341302669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348889315 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343439317 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339718559 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348312741 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.342336184 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.339855982 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345717099 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.345567417 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.345331703 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.341951231 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346038228 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.341307275 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340424936 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.341666254 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343936558 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340296019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.341783139 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342511413 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.341743508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.345845153 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.346136709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350622056 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.343780255 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.342978137 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.344239602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.343325849 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.342304172 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.342499688 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.345469669 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36408924 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.347522906 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.342829242 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.344525787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.34437829 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.346642104 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.345482095 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345912487 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.347250054 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.341589995 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.344603734 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.348131317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348039353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34353278 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.344118477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.344787854 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.340324629 seconds)
  done (took 98.942785454 seconds)
done (took 362.857320588 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.754793009 seconds)
  done (took 4.012549793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.426142489 seconds)
  done (took 3.689145784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.825502789 seconds)
  done (took 22.093330204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.397294437 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.355742182 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363074852 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347909177 seconds)
  done (took 10.720292306 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.543011702 seconds)
  done (took 3.802914588 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343564761 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.342167669 seconds)
  done (took 5.949673979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.633087657 seconds)
  done (took 3.893922521 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.711258654 seconds)
  done (took 3.976686713 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.364484811 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355866342 seconds)
  done (took 5.984596382 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331172575 seconds)
  done (took 3.589661278 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.494799749 seconds)
  done (took 16.755074216 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.350697617 seconds)
  done (took 3.617301646 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.371167354 seconds)
  done (took 3.630149045 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.791942416 seconds)
  done (took 6.053198669 seconds)
done (took 99.029422575 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.343168028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.347855168 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346836799 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.349362424 seconds)
  done (took 10.643813177 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379726078 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378647139 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.381847839 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391010792 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384863921 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382309333 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379267459 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.371638254 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39358258 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38959957 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384328348 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38354126 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390871594 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390664066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.388130603 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.381374027 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.391778858 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.38308173 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.384064147 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385113857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.347652736 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39122351 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.385484344 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.350206328 seconds)
  done (took 34.432443278 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.845507129 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419420793 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504945949 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402161428 seconds)
  done (took 7.433599164 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40261958 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.401911068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.412801003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449896626 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482930018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412459862 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.374184259 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.369075948 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357476513 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.401534671 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.476668613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.417895681 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.485458904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.348444979 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.534655754 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.348338338 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.347978679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403327463 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455838498 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.466578462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350880235 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.400450679 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.404964267 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419850302 seconds)
  done (took 35.188293522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352124535 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.36785547 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.349536345 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.348371863 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.356365133 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.350449631 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.349604413 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.350820741 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.348460514 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.353494729 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.349437418 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.361982467 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347764774 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.349480663 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.354408697 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.351224399 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.355435692 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.352004085 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.351187862 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.35613748 seconds)
  done (took 28.319003765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.343872489 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.342842318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.69648519 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.600620342 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.344090981 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.351776353 seconds)
  done (took 13.944500693 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419395136 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.560898899 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360234274 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.693684097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.776778708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352838613 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.352740411 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.591459559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.903189848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880018384 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.414836441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.420691971 seconds)
  done (took 19.990589104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.354979498 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.351715512 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.357126981 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.366792941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.402894029 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358163773 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359285001 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.343779202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413345744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.417274643 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355005902 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406050053 seconds)
  done (took 21.752331859 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433022326 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345350407 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345544093 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374472527 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353526807 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55862773 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366441861 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059131779 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370079065 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62032611 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345549371 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46273861 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60387497 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350647362 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354278663 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330900439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583006329 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830182113 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348620516 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355783566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380372972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348156838 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356734991 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569611928 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571321364 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350511834 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.607947122 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348755035 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625960013 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371941863 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3608652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346738272 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624457661 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004213744 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473275781 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557175868 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379644984 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351195697 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.351575707 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.360259713 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360646753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361711016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36059412 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352243606 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348225151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3483289 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087432067 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377288365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.348367556 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349803663 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608779226 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457024547 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.352922693 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350796575 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426079258 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358760783 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.355657641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45034974 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923288627 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351247556 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372593574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.358469571 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355314728 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353062221 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972817035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.35659907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.356421201 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358026134 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352243703 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352492456 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376299547 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350616921 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379466245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352609198 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043555533 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361800937 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377547835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889529457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358147486 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363811551 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580369323 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352956291 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35270075 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.349863584 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351936697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045391387 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360470693 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.35067846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375603954 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058433386 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583322537 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384052276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378839269 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5768236 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.3387387 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352775861 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.358438663 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363630445 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377371389 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068427147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374407777 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.35924715 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607958601 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565471984 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355736372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352442062 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83729142 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386121555 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.379404613 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363460938 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572300245 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.939166042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376228443 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357968677 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383726733 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357744402 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082819839 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367827577 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.37124067 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35730142 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639463299 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.127978474 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356952624 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424748631 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362331316 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356713714 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365104109 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367733998 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357141123 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.55793312 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381916371 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378279651 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.35533134 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356725967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.35370482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365407423 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.367232431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580567463 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367954903 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641646029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358359185 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356196612 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358286208 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.579838181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.35526455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.370918663 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617934867 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357768334 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381454267 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376521833 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374514057 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455379933 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377875928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.362737045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621511046 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362114258 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.362937135 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363654065 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362425709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364209505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.363876066 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369156216 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94424999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33665318 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367955515 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320138093 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.373295953 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42772734 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368223763 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571945109 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366861396 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393861568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.365738583 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.357821079 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591350873 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370579788 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.362039125 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441359456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.837268802 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957776753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374758969 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.363339205 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.359043376 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.358881797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359986174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361452331 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361675597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570559593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38521216 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364893594 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960623182 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367023988 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365421629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.377093008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374931095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366533544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366376476 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361468077 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385206704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379500775 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384199226 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513442285 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382954016 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364372326 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880188162 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375050358 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369671712 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362891743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399327903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36939852 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181826899 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622269179 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36811693 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614239732 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375388672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386757581 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36034293 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375515408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383023605 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.388167845 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397731534 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377014574 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371191038 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373789085 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93317246 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095082768 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898510289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366032843 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.390562008 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373335679 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084632317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387984436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36412387 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605695967 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077428351 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382040446 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843298819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.385756211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12497402 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617071182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602431803 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381158762 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.376773567 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635079405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587034849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401127524 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37098759 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374153505 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.35328886 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923203466 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395084539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456776106 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080048582 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39704659 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374676004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.447540434 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.383577895 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769855323 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394467756 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375276897 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372388558 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376192678 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185743675 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374032581 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368108692 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988081882 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3800423 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.862253469 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392065982 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584030962 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389889456 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.371671558 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.375076926 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.364141554 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621739422 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620157188 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376035558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372301736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914424916 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233473095 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373386433 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368145328 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102210145 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384187657 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656167845 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.378423547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37534771 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36888884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370344581 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36923205 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.362719855 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38179862 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347094834 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848710558 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.371862418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40161477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379443485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277120795 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624734713 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384754977 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950705401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603793204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3738357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403673455 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376575208 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376792983 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367330069 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367705002 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612363999 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407877266 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602416703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381799083 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.363000792 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377997106 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59054549 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370853894 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373261767 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621619539 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.374761095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.378535996 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104886654 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406186878 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372786277 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379612572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369568443 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401578419 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444567895 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587728742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389363782 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.384581313 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777172183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398197677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380237732 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386348065 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469349338 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384746766 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379670589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.143529634 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959163627 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119951212 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963914912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638777632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38098987 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373139273 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372334285 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520746381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380906849 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645550789 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373168693 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.388176138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403949173 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37207413 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379622198 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593710775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652086237 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379376542 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377857072 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384055531 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.375569578 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39184822 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585529168 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859439149 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917714336 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375938233 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37659393 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133798533 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669900957 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375451605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375683162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379488995 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.381743415 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414713506 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39037446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390507333 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531088398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631211516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05289477 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411514299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.405061852 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155239569 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389610374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638231657 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3721221 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595485396 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966103113 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077986461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645327489 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444923618 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590187752 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.380373012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523867978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.385035328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375894294 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376167487 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251238803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.377334127 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.390847191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967668149 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648215797 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.380596843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.385387908 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397454901 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389088306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60328272 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088093539 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609104356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389553759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389084761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378416948 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963775959 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648356739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388524096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380842535 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622750732 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625552855 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406545019 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838450062 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.377733432 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930355876 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347798477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402555678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396799461 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08480603 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973000765 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.384108279 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875910759 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380482916 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392530674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665000665 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.386083738 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389074586 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663263676 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387432432 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384477857 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604029333 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.965574651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133963623 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.381978433 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406752757 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.406836222 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378624321 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443044149 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389306283 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389838538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.806227658 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409451216 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386989561 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392000734 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.38728499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400180942 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.385459106 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387090884 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.387816506 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.370342994 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.380009191 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401817471 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488012755 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951151121 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402720026 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.061978582 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.712782717 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640880306 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381543554 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.377760686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.389453093 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385553481 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383246425 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379837253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383430718 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945002239 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.385762037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.403781878 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38859616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601719593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595461518 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392312635 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607460834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387255325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405903249 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.370074146 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388214963 seconds)
  done (took 968.950198107 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.393354428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.401575567 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.432860281 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402068653 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.405586707 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418634242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.444344655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400491205 seconds)
  done (took 20.599114624 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.389314407 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.400365657 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.381197462 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.395038961 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.398643961 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.850103304 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.396995257 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.393545838 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.397464541 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.385570844 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.387385551 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.015902909 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.3976788 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398548429 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.382376685 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.399698577 seconds)
  done (took 32.677018026 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.327830494 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.517713724 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.225693789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.414320267 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.427799392 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399508514 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.595512847 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.399976666 seconds)
  done (took 26.608938336 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399740666 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402964441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407756853 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401749236 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.404413796 seconds)
  done (took 8.319035271 seconds)
done (took 1230.118461992 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397635917 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396040752 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.396430963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399541737 seconds)
  done (took 6.889714561 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.37755172 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.37451745 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.373853568 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387219931 seconds)
  done (took 9.814159205 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085153727 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.018124345 seconds)
  done (took 5.401264657 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.390773805 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.150500532 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.127606633 seconds)
  done (took 7.971166594 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.689231199 seconds)
  done (took 2.990369986 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.801909707 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760621386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.580237255 seconds)
  done (took 6.44606788 seconds)
done (took 40.815235487 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393006826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.635407794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.665823152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.406880449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.561231064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.670292207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.19289136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397152955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387040988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408625659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385731388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566972153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.106793978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.652768208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.106700806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.639383075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.553617337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402770497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392250638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385895704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.209808827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399308236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396547626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400224285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553590057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534969817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399274282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.641694143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386990129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402302353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.550009322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390448565 seconds)
  done (took 83.47896702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392473684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.385248583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394409484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387740504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389422568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391449175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.388153025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389548426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390316828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.387099493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386335269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.388071646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.389103173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.397502743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392957955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396395378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.389755748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408389676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389859037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.409044836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391172456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400731209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391270311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404117326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.401907682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.391049925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40467496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395835936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389671006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393571213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.390768275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.411107604 seconds)
  done (took 77.915770877 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397125936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.38966015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412087406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.388363444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.391503794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391800158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392776401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392423597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420932297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.4041127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402934873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.389666468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394821382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.39235604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39560939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.390442325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401544751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392262894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411245064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390861462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409088527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390203096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391824888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392414511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.403503378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394732963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392142824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393130729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404663838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391843558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.389606674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389157664 seconds)
  done (took 77.994336042 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.587117926 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.401874002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403168761 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.333762007 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404160399 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403727334 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400775971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602020448 seconds)
  done (took 14.842558421 seconds)
done (took 255.532702305 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396928892 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.397555337 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60303168 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.419464466 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.397640863 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.421198082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.431006486 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.599432112 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.351204777 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.596062784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.399043641 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.418631298 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.394451848 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.41843092 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675921503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.524384757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.316123038 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.390500276 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.733193696 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.428129 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.66733599 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.40101813 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.593851921 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.341421732 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.413395513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.394873121 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.40257288 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.314601907 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.43704705 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.751683804 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.416391846 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.382049228 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.468547479 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467868315 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.535912475 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.52484932 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.414358538 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.462608693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.610409975 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.408554341 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.39600078 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.161444705 seconds)
  done (took 83.587904958 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.404283488 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.512675204 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.408794727 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.405170478 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.40621682 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.501114338 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.486068032 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.404036751 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.402549175 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.407231575 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.409863864 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.410546673 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.404607327 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.409093188 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.407480485 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.404978344 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.40888502 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.408480267 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.407629285 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.442685999 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.512434523 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.408721829 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.396724732 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.408265616 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.49202629 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.507328179 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.406820368 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.397665748 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.441701098 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.4060278 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.408776826 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.443982851 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.402193435 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.408352623 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.516828896 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.49051458 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.408509459 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.402171214 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.541022537 seconds)
  done (took 57.163028642 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411043931 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.65421034 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.832018197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.420866797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410824386 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414254741 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489643371 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.418265396 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412353195 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.417664504 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.566319183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.415764122 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448315797 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.855741914 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4199842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410085306 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407130924 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409398357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.675967147 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42534918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.504477504 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414402909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.487123531 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.426898436 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.429479116 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410090268 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417446059 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.985295326 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.419955309 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.566613073 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.181786753 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.489798604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.962899116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.849709088 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197079245 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419028663 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41492749 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.572485389 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.408943023 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.415964961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.492065228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.417602297 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.83818952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.116347058 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.438299713 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416368402 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.0061531 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.57285485 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.647023872 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42676361 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.865364368 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421184724 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412974133 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415462705 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.656415924 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.416567588 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410857318 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.046354067 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439136465 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.497974222 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41215688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412975791 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682945434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415509358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.677082856 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420021343 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42246058 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433508229 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.843895412 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42007548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126315563 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434866287 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.41745887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.567843088 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.671165438 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051173608 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421220398 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.680280332 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978297207 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.497112678 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424052737 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.986219636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.499732127 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.424917165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415679624 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418970805 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421065105 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46179302 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.488865223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.084138289 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111711374 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.067156631 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.515475986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436419517 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415541091 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.025245967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.438687521 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.41955902 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.837570634 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122119428 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43971647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422686479 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.124750351 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443093593 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.496937334 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428289828 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.853611254 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.422743465 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474791895 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415609038 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429218517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438901836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.494839367 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42816945 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421385651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102113544 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.598960257 seconds)
  done (took 186.597228644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.422237352 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.406927199 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.418063441 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407914749 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409954482 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.420772226 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.408887262 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.411813204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415452836 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412571238 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.417747618 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.410068596 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.41764964 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.424358898 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421713624 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.420586469 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.413159025 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.412670655 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.410906559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.409631294 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.4092027 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.430627228 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.411242754 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.409939082 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.41394456 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.412766914 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.422271179 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.412582368 seconds)
  done (took 64.936363993 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418892006 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.964870528 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.417612918 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.551395567 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441612695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415455864 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.543690957 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482406225 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420051818 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.418834746 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.41566379 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.719568261 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.425457235 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.921077544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612448471 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.544739882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924687799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.433162991 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415883893 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.419585449 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548337343 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433545485 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.713708124 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963491656 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419332601 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.967961501 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.410187617 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418121893 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.422289916 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.968511034 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413628519 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.716631362 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.492012512 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.485661585 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969685659 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92096064 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93604741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.56182038 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428328012 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.420432028 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.417518363 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.409682658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975654308 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.417110101 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422800588 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971540207 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.434788664 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.419992691 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425779994 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42149247 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481253719 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480204768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.72716731 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976193788 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.492771535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432588285 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.547118085 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.800561318 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430756172 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.922872457 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.406965607 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.97906541 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439245172 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.411587315 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424116484 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.431746346 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.566621341 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.555828179 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.930801023 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.434716116 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.936732174 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.588188518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.428517941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420406414 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42647749 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.005497702 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926349585 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.578903441 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.551065956 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.610220414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.413498773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420639145 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.412574057 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.497293293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427860375 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977075036 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.944490059 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447759062 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421826907 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421269566 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.423929544 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.591149191 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985732506 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.497851402 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92645131 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.734500213 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.71718198 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.423006262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.481227554 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.446943276 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.723380279 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.422133362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479805498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.862731727 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.723893314 seconds)
  done (took 168.325601567 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.661129157 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.435898628 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53733011 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.581972984 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.023370486 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.01748063 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.417016953 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540935415 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.537583095 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.683653291 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.427169851 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516906339 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.637611711 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.504569972 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.139702818 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50351534 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.521192539 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.588684968 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.566160274 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.423373755 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094889391 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.718300706 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.605533842 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.443213028 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522150342 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.170028421 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.993670971 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.00454677 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.596490983 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.437784311 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.938720551 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.426543962 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.350943537 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.08118289 seconds)
  done (took 65.978377784 seconds)
done (took 627.894456569 seconds)
SAVING RESULT...
DONE!
