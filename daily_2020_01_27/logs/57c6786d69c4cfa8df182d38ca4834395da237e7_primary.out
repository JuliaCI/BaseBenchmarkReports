cset: moving following pidspec: 13880
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.390629435 seconds)
loading group "string"... done (took 0.583515256 seconds)
loading group "linalg"... done (took 7.232546307 seconds)
loading group "parallel"... done (took 0.159718674 seconds)
loading group "find"... done (took 1.1426689 seconds)
loading group "tuple"... done (took 1.755990684 seconds)
loading group "dates"... done (took 1.234338178 seconds)
loading group "micro"... done (took 0.220782254 seconds)
loading group "io"... done (took 1.016823604 seconds)
loading group "scalar"... done (took 38.196587533 seconds)
loading group "sparse"... done (took 11.889738157 seconds)
loading group "broadcast"... done (took 0.944019539 seconds)
loading group "union"... done (took 12.736774874 seconds)
loading group "simd"... done (took 4.494884641 seconds)
loading group "random"... done (took 9.08054781 seconds)
loading group "problem"... done (took 1.819844949 seconds)
loading group "array"... done (took 20.840609069 seconds)
loading group "misc"... done (took 1.684387549 seconds)
loading group "sort"... done (took 3.33328038 seconds)
loading group "collection"... done (took 17.355383049 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522945063 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126647242 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119751397 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120939684 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149412169 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114764072 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126153901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087446678 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.806190005 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156582222 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119683692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431171443 seconds)
done (took 5.201426205 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177751877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084708729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083940696 seconds)
  done (took 1.308313033 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067045383 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124358103 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068539263 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06796983 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068224456 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06742417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067427222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067517503 seconds)
  done (took 1.672155584 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074910832 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070151808 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067491 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069805132 seconds)
  done (took 1.421214856 seconds)
done (took 5.802970267 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789359171 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207665684 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188977127 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413776471 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132855476 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160198213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63289125 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310675828 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192687787 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082739044 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110314396 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.331523022 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110660361 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647776289 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076143717 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092653422 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140967946 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409447779 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068945025 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083616391 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090151467 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131271103 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089593955 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075919284 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148664582 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068892301 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138392698 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082602626 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067765302 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214597841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173667788 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663286851 seconds)
  done (took 10.305027331 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098376965 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099161676 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071011012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124342231 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097310584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071440337 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072678334 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068847644 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087881275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128962873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090221888 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10276482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067388058 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069647436 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08690756 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205649631 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082708196 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083427458 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072649428 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076496484 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10605755 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079083145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078792006 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07836916 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129926396 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181333424 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100696977 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0982345 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067980378 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080797617 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116027859 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125330087 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067157004 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067616177 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124545776 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095754358 seconds)
  done (took 4.631867071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004532648 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145639372 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091495491 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136343293 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066521353 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110564956 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085876565 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066937251 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08204694 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211618861 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.407003266 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59892734 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112351924 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105258067 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071662332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070180512 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068570641 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501969396 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097268483 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10908118 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083805966 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07130472 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071233372 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355347454 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070042869 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065937766 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069881467 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0586744 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12632312 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068718679 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946896338 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12784085 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067714534 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101765659 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162061851 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092523139 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27483527 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070074007 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066503898 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155350906 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071353968 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067597268 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085346621 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104301446 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113831609 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067269872 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068579344 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165975464 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06677964 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081392687 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.63547321 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155571506 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081193645 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065941801 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255728337 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090094591 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071147864 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066003114 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180933372 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136788066 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070721622 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068445923 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06966136 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071330135 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361444156 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067484926 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.869663222 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070949394 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07786729 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071623122 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07062395 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07407421 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073852008 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089341337 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067461341 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076380597 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067029162 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06729881 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068222278 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085179283 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065371612 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380329896 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06824999 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069735426 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066192819 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090874197 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098136643 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067825785 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066591197 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100438642 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093176691 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065410272 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069241104 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068018128 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108728384 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068211043 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.18741544 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07049081 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114057978 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068359368 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086745824 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069741109 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099607436 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073189562 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099861849 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083288591 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069837968 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.421848743 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066253395 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066943353 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068977049 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066308545 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069672342 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067341351 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08015981 seconds)
  done (took 21.205458089 seconds)
done (took 38.285794563 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237010307 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080049641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075922316 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078572711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075019912 seconds)
  done (took 1.775387172 seconds)
done (took 2.98697863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124661078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101480102 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065879221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098978292 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065468022 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103051846 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102670778 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083552108 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102170558 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066157833 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099562102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0652396 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065563498 seconds)
  done (took 2.378044427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085563653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085784052 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072037899 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085258174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065792838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084221886 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083257233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090471646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08290846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074482236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065164786 seconds)
  done (took 2.081318022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085958362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085360018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070950579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084543037 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064908023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083498933 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083071441 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087536996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083644672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075580342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065390113 seconds)
  done (took 2.072004546 seconds)
done (took 7.731730965 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079764614 seconds)
  done (took 1.2710373 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593207285 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.108592695 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083066713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113032037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191263033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119899074 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27301847 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088270837 seconds)
  done (took 8.946197286 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089251811 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069917582 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084413814 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070513564 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073558649 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073301897 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070810406 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07265986 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070733323 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07058112 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071723537 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069717292 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072944987 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072387434 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070328104 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07260041 seconds)
  done (took 2.443199114 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094271857 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092424394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074378559 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075995725 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073888402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072891815 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075408426 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07414028 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071939655 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073699894 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075835301 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074954119 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072503648 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065898087 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074939557 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076103409 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071788662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075407 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075958459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076486027 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076008524 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065704386 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072868696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075188767 seconds)
  done (took 3.112512716 seconds)
done (took 16.974951744 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116935007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072877306 seconds)
  done (took 1.390448245 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083105134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08492012 seconds)
  done (took 1.376461522 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085624857 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06661967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091231338 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079053572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06680413 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066546308 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089269584 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067310605 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066981448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066928973 seconds)
  done (took 1.956195083 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070010551 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078674692 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071468756 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082536086 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075211121 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065685197 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073161142 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068571671 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078490296 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06461124 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072617771 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084362596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072165526 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085628693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072905905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069399881 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072174018 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068448937 seconds)
  done (took 2.540726996 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067981517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068340088 seconds)
  done (took 1.352736296 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068445363 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064210649 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068124291 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067757967 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064339847 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063468617 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064627994 seconds)
  done (took 1.674252346 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379662185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114539713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315334934 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073152142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083612128 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25988686 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067037928 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072634165 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072656381 seconds)
  done (took 2.697154869 seconds)
done (took 14.205554684 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082139449 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087704036 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098089231 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375320741 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09321902 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067027836 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114437261 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189424626 seconds)
done (took 2.340357838 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214771377 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.634893218 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405247379 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206492767 seconds)
  done (took 2.464908728 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344888509 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089782062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060294463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06898394 seconds)
  done (took 1.789687836 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067869032 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069945451 seconds)
  done (took 1.36592833 seconds)
done (took 7.061750626 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06858637 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087313403 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067537777 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066998572 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065276698 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067296484 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06460474 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064382434 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066808435 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067390922 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067240484 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064849572 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.06803956 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.06770041 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067575624 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064491857 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064781746 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066884119 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064321649 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06431834 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064544768 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066764331 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064944381 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064652239 seconds)
  done (took 2.868712507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087196725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067211542 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072520802 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072851596 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070696919 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072149356 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072197023 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066669638 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072062133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069334544 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070100745 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070787113 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069219052 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070973598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068932174 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070537312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072287224 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066650401 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069070346 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070386438 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071583919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066855584 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069932935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072141573 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070284821 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071530677 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069007728 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066780849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071818215 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070538148 seconds)
  done (took 3.358353106 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071338532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064428284 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065407275 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071434145 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064942748 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065477508 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064735905 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064832327 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065503145 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064212637 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065519045 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063960566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065079715 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065476659 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064908912 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068177213 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080227802 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064417485 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064732448 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065271349 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068471628 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064790757 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064308402 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064441576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064671409 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064073041 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064465259 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063889273 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065394644 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064244475 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067564097 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068187038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065290234 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071782239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068319064 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.176727991 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068852446 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064400839 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065102405 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064389494 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064762116 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064873698 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064351861 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071460793 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064529013 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065799695 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06485085 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066363737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065282615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066800327 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064328885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06458428 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066444937 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065528378 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068569296 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064595812 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065092485 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064277278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06571927 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064025553 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064495495 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064053455 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067277604 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065325651 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080096602 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071648402 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064849863 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066447931 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065167394 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06741806 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066122768 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078434318 seconds)
  done (took 6.131481029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093304563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088525996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066775457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066328919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062950241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065110131 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070662073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064950931 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066578016 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082974416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065013698 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066911119 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066301664 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068595182 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0654477 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066538624 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073530796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062748692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065090657 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068612542 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06561829 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071188591 seconds)
  done (took 2.784696048 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156308697 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071429854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106767374 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076461483 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071160284 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076764601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070700298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071037031 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070978537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068232852 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068134211 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071169389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071664146 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068984601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069187612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068333444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071082531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068475665 seconds)
  done (took 2.636716992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07871951 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067095201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087968019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066270004 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067629063 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069269521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071365831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075462511 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069061406 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067214322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075283952 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069191369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069606318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067123639 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06972969 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067158356 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069329399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06727869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075067894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071070568 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071441317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07499006 seconds)
  done (took 2.810604155 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081993746 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068814439 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082038487 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069150542 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063265006 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065119415 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071625922 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066804143 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071100494 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068778671 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066911143 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065562387 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069852084 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067212862 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06969325 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06656856 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069096881 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066884287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069208077 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062774072 seconds)
  done (took 2.625787884 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088990768 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069519163 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069805279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076403728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068629507 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068589748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075873157 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068422506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068576128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089000069 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068534711 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068962389 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075900073 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073472873 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069303959 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076265302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076097873 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075882211 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068723354 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068935833 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089586751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068804815 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07585342 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068761077 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068617368 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068998808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068909692 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073576878 seconds)
  done (took 3.294348416 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067798898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067249744 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064590155 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065161274 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064538335 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064826033 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064433713 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064804796 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066971226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064437245 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067231997 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066746411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067233277 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067331556 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067449319 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06694329 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067101213 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064407122 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064563025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064631854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066797242 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067140899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067046085 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065043061 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064481598 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067159558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064939643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064439431 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066895789 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064539291 seconds)
  done (took 3.225560183 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077572082 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075240519 seconds)
  done (took 1.402622381 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064613268 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081537717 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064224962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071787229 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071115039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067856561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074662102 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070526129 seconds)
  done (took 1.810525854 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084686164 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078405043 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068777048 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080361945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078182696 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084534065 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136258796 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067958673 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074554813 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065120422 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081190966 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066683756 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074085478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068205986 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073458833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073666059 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064871289 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073231504 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069830297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066008526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068313253 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076479527 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070466152 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063126268 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069170015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089983501 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078672938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067014854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071107451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074740961 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073942426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06165355 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068019632 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068297354 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065206375 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077927969 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082637842 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070869515 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076314679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068332934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077311316 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062379496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0724977 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075071731 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077557451 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067832514 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068296031 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063288449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065504288 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070442959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062319258 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070215014 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062447302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074583863 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071213908 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07843515 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066684467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069538712 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070310504 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07054542 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073645254 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06996112 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070403642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067566812 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077982401 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072022158 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076096703 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062772538 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061345926 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06524247 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077016687 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090724735 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074418026 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068580446 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068059655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065136229 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071675444 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068573004 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073279846 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074363686 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067872714 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073685428 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075406687 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068192285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070555327 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075544672 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065834668 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070132025 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06608925 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084124318 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06631188 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065359922 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065825684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077381525 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07045383 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06728327 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06512648 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074706376 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06087756 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067347598 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067524236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067659776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076957967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070724802 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071018195 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075219283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074161263 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067106012 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069031389 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06288691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067077234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06608788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073694297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060211846 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069843667 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.193976676 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069599765 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077654064 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066628176 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067601942 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076128736 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074152687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067023883 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065176989 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070834418 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067932148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072127484 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076129513 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065964876 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062885626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062175593 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071100157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067089153 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071666261 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072704282 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071267374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061991226 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06656121 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072490431 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076944035 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068029387 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069705386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074242786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068635143 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06803986 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074605973 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070487775 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067910701 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074293735 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068523348 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062515383 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070396985 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070376416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067178148 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071446156 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071205431 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070098056 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068160456 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066294692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075559551 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068215157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066851313 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067980301 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066331329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078587516 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070038085 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06311139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065516308 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076024923 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06583803 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067811726 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066704402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069606286 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06838344 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066298985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06745846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070368316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078179001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071824792 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069586889 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073167163 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079017683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067050372 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06971643 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066754449 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068892899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067845378 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076704123 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072864501 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072102793 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070192419 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064167917 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072552457 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075008762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067050101 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065324822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066520241 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072041076 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073997677 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071384901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067850144 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065921857 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06863521 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070884477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070668978 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067421713 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066712104 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073266927 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065839889 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073928737 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068330615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078118017 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071274946 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061971477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069897755 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065578391 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073392257 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062793436 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065459508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066636043 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067729731 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065913347 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068745399 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060848841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073112743 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073617475 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06759856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066212424 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065999178 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073201258 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068171145 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069989013 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069963038 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072201913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205764603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067154059 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0718727 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079651143 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06818051 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063348874 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073659042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06622322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066320542 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066814873 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066353773 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070932135 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076938333 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074529978 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06253686 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070633965 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066497266 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067746293 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063008977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072853412 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070159409 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068915217 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07582059 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067918936 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068291191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072024108 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067580825 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068937654 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069830224 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071219731 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068947159 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070345442 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066994607 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070250053 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067007035 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065536213 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069387066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067921625 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068276872 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073438627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067838537 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067990432 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069939694 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068154892 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068294178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06789363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067373116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071235903 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069666986 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067686423 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069808941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063139966 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074691215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067045221 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075855685 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068033928 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064450701 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074092211 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069437319 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073248887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068613921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068011433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069585756 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066779007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070830228 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074586122 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065166749 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078601282 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074944652 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067778595 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070678389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068299782 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068751037 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067008608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068575758 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068225355 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068337702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067775105 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072362643 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070262443 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067952059 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069449852 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068726496 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068234902 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069064856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062676973 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067277601 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067213003 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068004193 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077500714 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067901916 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067795117 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067036542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0689982 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066816266 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064510991 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075279168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076159069 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068126352 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074431258 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066731163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068622175 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077645336 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061227528 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065098891 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064599375 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065407933 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074656199 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067245633 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075915619 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06704278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066121791 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063887515 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066939718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065196625 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060945906 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064197903 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069987571 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065479569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066088126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066604322 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.200654857 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06994854 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077533289 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068635594 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069312255 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068608421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065164516 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067306707 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067196147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07099538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06883095 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065524121 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064927389 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067042626 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068786931 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069153379 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070200068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070124265 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074753637 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067890807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070836071 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071547998 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06225851 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071409489 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068017355 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067709586 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067916941 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071491234 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071572182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069096462 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077011433 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068231463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068665467 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068327733 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065687567 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067713386 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067502877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067662043 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067609612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06862433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076056918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065366967 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071053175 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068253317 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068411138 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073815561 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068960575 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069905267 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074257558 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068089605 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069850597 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076291162 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072590098 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071560628 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068744312 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069799909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074387627 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068156673 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074679809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068601047 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068397416 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069279489 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065824858 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068108326 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068142812 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067405207 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074085008 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069082277 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066743953 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067295975 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065949463 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068099201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070784307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075663839 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06997698 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07084871 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062772484 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064792047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068495488 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066327708 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069532941 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070207629 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073783623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070356919 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068348208 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066883515 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076603159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073662338 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07143219 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06608858 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071662932 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068814896 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070269974 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069523593 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068313684 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069138941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071643894 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070053677 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067472234 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074846262 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071351207 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06878545 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068929521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06848508 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067847399 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062067051 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068467286 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069360761 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072369201 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069437113 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067502775 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07759473 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064920257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067187543 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069851963 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065763287 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071335213 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061638188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068262019 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067339881 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066513575 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061565758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065662125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.196872647 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071852886 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067341806 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06335626 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078323247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077596881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072277885 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068028191 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067238962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063708487 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063129917 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06737679 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068706402 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070420145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07831534 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067208065 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067325189 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063129016 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068344162 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070836015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070782825 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065057691 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063274653 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067199745 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070618713 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073736788 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067063903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06781355 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071244957 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070267684 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065449037 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07138825 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06488275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071732419 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080125373 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068560567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069034689 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074899279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076030227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067995217 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06346962 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068767696 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071080229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068631335 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069388561 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068225565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08344993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071089266 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066955914 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066513849 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071481872 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067493097 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076326053 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068674192 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069415354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072662408 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070029006 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07788649 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071214457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075723616 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070801946 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070988343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067295305 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068198038 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066410632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06664304 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06986815 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068155689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071907722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075183943 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066818389 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078361254 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07672883 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069369996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064610906 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067240283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067278657 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062667515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069072317 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066082645 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066186171 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06639845 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067147262 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068850885 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073144397 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069482318 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068865288 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067992618 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062198761 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070495787 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070286355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068668461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065009425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06840735 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068704203 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071658871 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07105954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065568764 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069864699 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069450892 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069409705 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062395522 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074086143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066708763 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069133655 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06686551 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067472508 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068279912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0710568 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072071478 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068000357 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069280786 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070857387 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068665821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063582099 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063902052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071894815 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064466336 seconds)
  done (took 43.346510596 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10539713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064721508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063093084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062819105 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073969734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063743995 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063572058 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064063531 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064042651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065713865 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063554047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062631772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071322585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077971954 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074336428 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067238546 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062599824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063873123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062695665 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064000179 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071129568 seconds)
  done (took 2.779384656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075588852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079148363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076782165 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082917231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071532179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071168847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075915756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071244015 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079493846 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073002168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079272255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071500752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073085592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073752701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073577012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071574262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079240696 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071847535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071322249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076366633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071249579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076235275 seconds)
  done (took 2.965979869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069373179 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067743444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068727876 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06258109 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066819206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063519353 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070850511 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064759621 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070207102 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066304546 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066307864 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065982106 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069153185 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062316831 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066792776 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064689795 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10872033 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070652833 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067074513 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068261394 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062684328 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069526518 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062725356 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063106742 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06666174 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0706793 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067262653 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065380361 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067470849 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066602963 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067269439 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065160416 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068965153 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067869385 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066060895 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066324073 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06693951 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067612654 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062201225 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065053228 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067518508 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062652605 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067684877 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068780315 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06502434 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065223781 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068856321 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067256342 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061975417 seconds)
  done (took 4.621442056 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081059209 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110624954 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068178224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090055559 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08346648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074228186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070859029 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090626701 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064094537 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064896092 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082653025 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079157321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067303526 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07134011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071010091 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066434227 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06798745 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066122278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070311086 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066036254 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07031882 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073226478 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080923279 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079057105 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07026969 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065152145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065828211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071117853 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078805989 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070657188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071216175 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071896092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081737412 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07148968 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066202738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069336635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082666942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066693982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069529301 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064863635 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069228573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07092287 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073736863 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082544767 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06690188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07180565 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067102397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063961315 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078907968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069438032 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074429689 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080741614 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07102582 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067077942 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071234966 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081514684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066360515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064902116 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069912162 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078954193 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064413163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070556754 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079532505 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068528263 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073841766 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080143475 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071833302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070745412 seconds)
  done (took 6.431589624 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079213233 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096570789 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085361849 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084432664 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077532145 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076956145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076932211 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07692345 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076634204 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081446507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076644181 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116366615 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072194012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078891304 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076905182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076832503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07653769 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076750062 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076841234 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076894362 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076688286 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083782011 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077054918 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083747628 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081159026 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072284542 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076339624 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076847316 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084302866 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077014692 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088867097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076998799 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076695376 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084610646 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081239408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07668069 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067010654 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076868296 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07724241 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076895837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072530641 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084596331 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076867826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072654064 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076784935 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076483954 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084783756 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080765695 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079401331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081528411 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077230532 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084410766 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076404688 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076797852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084585049 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086804115 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084291785 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084319686 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077340327 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08411076 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084391965 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087053893 seconds)
  done (took 6.314751315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085286025 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075883958 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083203505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063013636 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065472654 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072802154 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065611936 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065678607 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075210761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075402352 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077600228 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072831332 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075870154 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077337214 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073382185 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075804912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073178494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07321985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075144836 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073234301 seconds)
  done (took 2.826577498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076783186 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083702736 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068399878 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072335898 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070075441 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072580985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070020611 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070548436 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06801169 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070654207 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077294128 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076926347 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068712999 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072424783 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076652894 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072364402 seconds)
  done (took 2.511594184 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086119868 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074183513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081726879 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067247552 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068134369 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063640718 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066952251 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062545358 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06369105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079463152 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066928208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078129169 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067326114 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066682819 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064792266 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072898145 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063621262 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06482256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067220318 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080253156 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071109968 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065724461 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0707626 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067724709 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070014797 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07165648 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066127809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06763444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06438672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06788445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070585863 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070716322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064152017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065234462 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066118356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064343949 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06725111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067397394 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072190283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067269881 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065737895 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069298687 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066973499 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068138758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063954994 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067846436 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063206373 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069759559 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064599482 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069748859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066825076 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069734055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067815903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074240303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070044064 seconds)
  done (took 5.127625542 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081663616 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070815943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064047099 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065661086 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070902953 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068618081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070899338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068546377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069135294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065588533 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068736587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069880287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069168362 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070702657 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068663595 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071403713 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063153102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068611285 seconds)
  done (took 2.602253476 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074662113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068347051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074025455 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067834933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067538409 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069910833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063982555 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066187403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066166943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067432286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067170958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069891065 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066057146 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070141652 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067370159 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067521578 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069940894 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066537648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067342847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063923281 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070114007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066059434 seconds)
  done (took 2.84704882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095682889 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084302965 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143687564 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080394502 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086425009 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07323974 seconds)
  done (took 1.914373425 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094072918 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101527744 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068525388 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071305445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076621937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071449808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071400095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07194554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07964039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077307057 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071710702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079865441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079780895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078867722 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077706562 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077327686 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071521003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071502011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067327008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084816643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071607893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08020895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071536206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071028124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071788607 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078932891 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079858826 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076830723 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071654145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079661482 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076942787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071710747 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079940655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077052306 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071010581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079326469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071696049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084879021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077173762 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078714001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070657453 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077209519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079653184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075902724 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079547496 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071214058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076162719 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071097724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071696954 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086528394 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076924941 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079232366 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079637554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079924914 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079401208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086513898 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076763307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078979351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076824504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077156004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079065057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077345552 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078596761 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077017561 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0770676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078723965 seconds)
  done (took 6.436877684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106702925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069158659 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071517884 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077084868 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079156612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071603675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072008852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071155074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07171704 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068163426 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109557361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071671897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079799945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078695831 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071567131 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071587113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071607576 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078416221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068114996 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086474347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07140538 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078990031 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079285872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079204353 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077354011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07745987 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071895046 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071529654 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07191882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071003965 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075763105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071614142 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078809648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068070001 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078603271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072338815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071483819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07615277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071212507 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077105448 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079642127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084931454 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071012511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072268822 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077199957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071236629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071211804 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067957024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071625718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068342523 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077267963 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076879962 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077384762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078660007 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071286751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071263617 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071650127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071657065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071398979 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077323321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078757505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071127207 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086952659 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071328323 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071360831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078752974 seconds)
  done (took 6.340039197 seconds)
done (took 131.240813421 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190034637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164890139 seconds)
  done (took 1.697204845 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072891 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10053237 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077864127 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129438778 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068556845 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101843261 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100664627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079710485 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067883432 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067260451 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067946526 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069832826 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132653478 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06825766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067537006 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069965432 seconds)
  done (took 2.697534365 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102487371 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163140521 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103290362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066056186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100830675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07412544 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066462988 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076591983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072417943 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066696906 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074262428 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071789367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06624964 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072128883 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072850055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073740068 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066769924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074012962 seconds)
  done (took 2.824607417 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103680893 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093512636 seconds)
  done (took 1.560909299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160601884 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133924583 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203142294 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353132516 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16580028 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14931326 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144833431 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144316285 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117927765 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140561249 seconds)
  done (took 3.072279651 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103134058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155734128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269328371 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118722308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074245562 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095174748 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120454622 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079674847 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081932042 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081377879 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082105606 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077807921 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101158936 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07432184 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075213083 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076998652 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104446596 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074029443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075341894 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076983355 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10197715 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067098583 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075273921 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074451483 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078887194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078864245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067346094 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067018541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077528754 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075712761 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077376388 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09370752 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078466928 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10718937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072207045 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109078936 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077906078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074411863 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075795685 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075263483 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079457764 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079301946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074435862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078129862 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066950968 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078122244 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06736026 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067498086 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079767981 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068533069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07887212 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077680965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107138199 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068368913 seconds)
  done (took 6.061973083 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107463282 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107401684 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073481726 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113125955 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103881537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074282068 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104067942 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097315685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105217538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071782625 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06983704 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07250416 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083312709 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083939482 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116251942 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108270785 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07480856 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072130947 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107307376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106586203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069722342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098385026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092402721 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104300736 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068788273 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071687895 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069661719 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071479163 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077877203 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079323523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071043191 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081446945 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085835785 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079634947 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068225083 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069275857 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069213348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080920308 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080293304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079896646 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078870804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069706137 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069685382 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071347053 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071945001 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069230237 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079986963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083904215 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080409361 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071540804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071813473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06931798 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071062039 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081982713 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079196417 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082341759 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08154677 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070141757 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07011896 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073873379 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082042581 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080362792 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081171836 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070943992 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080417915 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070112453 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082467741 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085818692 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07008124 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071457734 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070038206 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071103047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071150834 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078911477 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079446661 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071219485 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071413555 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070060501 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082052501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079769266 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070115566 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078271868 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068725142 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06947406 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0709254 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071114085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078808257 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080843646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071025533 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069637501 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070073893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069910133 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068142468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077346399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079936147 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079094208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078355481 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070548944 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079203371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078378061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070497909 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079244318 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068784793 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07035209 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202267104 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081473892 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080005191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080777933 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07127973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070351411 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080275547 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083327828 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070322353 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079706771 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082294951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081599486 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06971372 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082418707 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070986395 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081722076 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071474937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081766426 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070133457 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080853621 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070462609 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069926318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071545147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080747956 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074832522 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071021044 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070991198 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072203397 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080574844 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083754371 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072095091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079828645 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079842947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072395284 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079690098 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07005597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080401621 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070953645 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072226434 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068459582 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083190451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070641651 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069807433 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07084431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081517924 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069696005 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081489285 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07933729 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069052676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08337354 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081946014 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079297441 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082310964 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071089516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06993163 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069332881 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070904698 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080453142 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081782881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072013955 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07020166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078659067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080639736 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069160787 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080034579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080037778 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079183345 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069651774 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071074459 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081977225 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081874443 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079717435 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079100349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079574023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070090469 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078651059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079717314 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069689756 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085660655 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069830258 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084233205 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08043136 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078481007 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080454988 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081734424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082005037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081581609 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084338485 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070086921 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069146606 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086397017 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069272592 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070108842 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078833368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070025563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06980745 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082791093 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069018925 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079556147 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068582975 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078350672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067384379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070322158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082911686 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068464275 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203508662 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082477671 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07222213 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079191702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083332571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081223185 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070578865 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072299264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082208999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081077639 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070414393 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070388733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072778326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079996564 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079613691 seconds)
  done (took 18.99173128 seconds)
done (took 38.275050189 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212417811 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155246826 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175573335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120798632 seconds)
  done (took 2.13205562 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118558175 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103522523 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093652538 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06655589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101359548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067502573 seconds)
  done (took 1.950441715 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315323046 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214149769 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190928144 seconds)
  done (took 2.121048755 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203202659 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191115847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424018226 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26579853 seconds)
  done (took 2.590579022 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146396991 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090333999 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069486832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086049714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13604233 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163044956 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102945727 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127813062 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080551606 seconds)
  done (took 2.456696924 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151908595 seconds)
done (took 12.811169484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114705962 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11196005 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.257810104 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227194869 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111811606 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14860083 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.200522718 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11094478 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115009719 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084841655 seconds)
    (11/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.196576359 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080706867 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157384118 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075666813 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105942227 seconds)
    (16/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074129923 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076931526 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 0.133172452 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.230755025 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115761187 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076202116 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.158815272 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.167500937 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145631727 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173071693 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052679547 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091894973 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185615449 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.218806164 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075626853 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121551434 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.232423001 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077046577 seconds)
    (34/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11070364 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076262983 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111921045 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183930424 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074356515 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091234019 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071573364 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175117409 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068473173 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138085449 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08309002 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093944882 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080900574 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088696477 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092795316 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054008352 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074604375 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160932558 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090913264 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123357529 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.229936952 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077976599 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093677414 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075653322 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087987051 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084044415 seconds)
    (60/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122886071 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052868318 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 0.134112326 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230392126 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0695917 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095042318 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078088634 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073642056 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067733114 seconds)
    (69/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092006504 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184362422 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161284568 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113401019 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157162276 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187561063 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070507611 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053474417 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052010657 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103773027 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109492428 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052515511 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084771634 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091641332 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067091316 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073060515 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066863328 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.217144022 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080712891 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052417898 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070404529 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097609297 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064025209 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089010557 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053135561 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069927072 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102058333 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062697474 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052841651 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053080365 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148186397 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21784334 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175672159 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073714948 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068710071 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100206903 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164640852 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.396290806 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089620552 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105862753 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110529986 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073175927 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139644627 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077108351 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073814243 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145042513 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099873468 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19542995 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052078863 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071933792 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072972309 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158502846 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07733811 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051186348 seconds)
    (123/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051790425 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.133824538 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073306559 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119442699 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084512904 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194067378 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063301787 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095302905 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071076758 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07176252 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067990801 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065471002 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063892069 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194740047 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071003795 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079374558 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078271761 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114650302 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087757701 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180325099 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 0.137929829 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.138640321 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064738215 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072158163 seconds)
    (147/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052682167 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053522917 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089387932 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07592524 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073238406 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050933689 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075555897 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064400571 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073354679 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073105957 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086971273 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06880411 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.140975544 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072507358 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050538121 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075579492 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051022186 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065947658 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074373904 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069907258 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064692939 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06669863 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174808314 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15281506 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064412634 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051267533 seconds)
    (173/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050798079 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06362217 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050574616 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093900183 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065642155 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071835399 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151692553 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07372224 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087971645 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06457598 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093739774 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072017827 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073179483 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069696123 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066424243 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182145395 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052699678 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070634598 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098955868 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052762849 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063320584 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.335316221 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169884841 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085883548 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084436193 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191892653 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154534906 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071800781 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055496247 seconds)
    (202/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056121297 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070352235 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079344272 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07840258 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07713248 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078541132 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070540441 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079536648 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053188137 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064346335 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052884202 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141700456 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07000471 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073655306 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079127643 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075622467 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068997099 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068807717 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066270892 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18619726 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111929183 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102271107 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096137379 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078659063 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078724405 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064356729 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142586963 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06637022 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175568008 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053041362 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149527138 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053382813 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068395422 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075299389 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074799772 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067289297 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082249451 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052759365 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128298268 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068430649 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067634583 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067345147 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156263383 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074282503 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070248365 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067622764 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074324033 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067727686 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052913651 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09079066 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09180072 seconds)
    (253/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076317112 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074300319 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053189424 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076584711 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052495583 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068648528 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0753393 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055671474 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063078687 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074099045 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069978339 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178639099 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068834202 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052451597 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088623664 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052919362 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163932841 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052853631 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098560023 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063404817 seconds)
    (273/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065816636 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067896126 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056152794 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092895233 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091982868 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067644827 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075436619 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091145302 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066362661 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068273602 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064250172 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065490217 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052599095 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075082597 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053707449 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052585652 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053176573 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074548224 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052481064 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067398859 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130952497 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093597454 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07350192 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052601125 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067375805 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071061842 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113278556 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053923208 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054283246 seconds)
    (302/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053666768 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05339776 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066969622 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072433152 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067441736 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067085196 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068197661 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052564329 seconds)
  done (took 31.341324341 seconds)
done (took 32.749779487 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095139808 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097258767 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077710411 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097536663 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085260883 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079316696 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07600703 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081655515 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083371912 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08547104 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081149748 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057379899 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077756419 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077211162 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078278438 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094804715 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081804911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076255662 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076168484 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067639811 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07616942 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06822133 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070298724 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056912811 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081208776 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074600831 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074980626 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076710648 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067847786 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068469252 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0717393 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075812197 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067248565 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080931194 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075015049 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075343684 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077643994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079715165 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07019754 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067792933 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076980735 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068347138 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075038141 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076701071 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074459942 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073800326 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075422117 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079991341 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093461836 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069952318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077014352 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078381869 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077953724 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075024807 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071025246 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074850966 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072925841 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093479538 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074947926 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069618212 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076017349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07655631 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073273454 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074741629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075058836 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077089913 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07778523 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073190443 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076350764 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073943111 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066864729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074697439 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070801725 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067103029 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078351676 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079266854 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065768157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073184093 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075074596 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072780377 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066711609 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069542416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0688275 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073894274 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069074797 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055469043 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071587483 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073972227 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066031787 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075241891 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073485118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074770196 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069080468 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077453517 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066166632 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072426602 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067043594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067071523 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068799171 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071479438 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066472806 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068863427 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076416164 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068789774 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073578229 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081430644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067668113 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0740825 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066008055 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066674119 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081410987 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076685443 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067087652 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068975439 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066021358 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074928199 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066298371 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066473045 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067306337 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067683476 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073304344 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066795723 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068594321 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074430219 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080056556 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066592844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07021252 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06886321 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066805421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073115422 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066932396 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200917096 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069571184 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06460553 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070250492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068661683 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075657008 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070083678 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075709947 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069869519 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075716418 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072540467 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073186312 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073350275 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066505871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060275599 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069482831 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0691349 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069285057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067813167 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069469383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066495279 seconds)
done (took 12.883418137 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069849196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142414894 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097711524 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096989029 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087278262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068443525 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077516067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101988368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069381565 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102299018 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0890979 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087242952 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11606807 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066119947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067215946 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071782319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068967599 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082715103 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100669567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088276544 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116926104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066979642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095233773 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090822926 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090199054 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095945479 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070365277 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071963483 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070879242 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103917372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089914889 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071562346 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068005882 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099958643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09610145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085734041 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067888817 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084597717 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068138776 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066948711 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069177001 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100606018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082252287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08253966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071534287 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078363464 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068636158 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08527307 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091864213 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.0810829 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088455115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10323642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07069635 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085675777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066472419 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088242831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078938909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070561598 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068240102 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075801381 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068105439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07078999 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082328455 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082028102 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072350507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086906902 seconds)
  done (took 7.016470937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086930617 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093708329 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085444887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08621395 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06709915 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068374901 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067837063 seconds)
  done (took 2.12291355 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07126227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08956688 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090686514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091297127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083382034 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089488971 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077216022 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068467375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089582805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06927841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089653251 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102464419 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071525894 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075912487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093201635 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068318458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092674528 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06806591 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071257099 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092046785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070434178 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097015114 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071342196 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068357382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082552346 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068490517 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116269004 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072994752 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069748516 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071549851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066492592 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108865193 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082164063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0766627 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068217224 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082726822 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083284379 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066593774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085604228 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077124206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082216191 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068816668 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06910463 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066245423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072619199 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079321998 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069881794 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069128727 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071283946 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089227193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069187662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082349859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071596633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074558979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070028329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074760215 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07914798 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069235885 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089007965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070240889 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085582829 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08491923 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082670177 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084824837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070584839 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082102316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082375968 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071064608 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070315057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072845176 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084921329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066480118 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070351514 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079353445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070319531 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09171137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091530294 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070370212 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081960522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069312566 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069026175 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06890474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091874185 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074475664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068788706 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072785725 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072356548 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067360668 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067811866 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072416204 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066352502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070395014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071303548 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071225861 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071088463 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085737123 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071114104 seconds)
  done (took 9.072313242 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073010846 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070467109 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07113495 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068844198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069140032 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06982104 seconds)
  done (took 2.008292469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096834802 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070125525 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082038783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073815159 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106225305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088467531 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088737217 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079990766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085441905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079890242 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088359452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089167029 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093869639 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073844344 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088264418 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073756289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089225165 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076318908 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080136497 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074340942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0876866 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073935539 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074375236 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083521449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0771956 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073533227 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080194232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080468611 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079844776 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08022533 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073900133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078118056 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072846435 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079848751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088954045 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072577079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073604256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078977747 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07432164 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077076915 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089960176 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074031787 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075944429 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078448665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079730599 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072723973 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078851121 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081452969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088644081 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078472624 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077945851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073075764 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07721198 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078584974 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072255469 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079274573 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078437506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088834236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073721673 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07239587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070468968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077640464 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080415418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077071487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080177242 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078557062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072786145 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073695636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074398376 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073334555 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078370327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070309456 seconds)
  done (took 7.278581642 seconds)
done (took 29.043262761 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541153481 seconds)
  done (took 2.08754359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618669323 seconds)
  done (took 2.192407768 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.474765255 seconds)
  done (took 8.052298238 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403934761 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.528650626 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731558056 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13391942 seconds)
  done (took 3.41540428 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702004265 seconds)
  done (took 2.28627185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219334474 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20504476 seconds)
  done (took 2.015873384 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38004952 seconds)
  done (took 1.950507966 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135369815 seconds)
  done (took 2.707406782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262538659 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177157572 seconds)
  done (took 2.019239425 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481430068 seconds)
  done (took 2.05978265 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.91483587 seconds)
  done (took 6.493964503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215779437 seconds)
  done (took 1.849834603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237489422 seconds)
  done (took 1.818392874 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.735264687 seconds)
  done (took 3.318608834 seconds)
done (took 43.849674024 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085002263 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083487434 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08323002 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079940943 seconds)
  done (took 1.897902025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081825287 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075579856 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078114184 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074667054 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07914828 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074909456 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075773305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077555264 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074888914 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075083453 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074303963 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074709786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076812342 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076133872 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072480844 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077173243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078244816 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074390719 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077114134 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074422117 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072557081 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076887565 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077151951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073409933 seconds)
  done (took 3.406921071 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082052693 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075073674 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076681888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07446229 seconds)
  done (took 1.899352146 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08280497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094931661 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094871198 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080238723 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094813573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08879977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07161861 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071132999 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072284954 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079182128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070450685 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098649073 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090396081 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079520442 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081518386 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068000176 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070770196 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089718102 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079984392 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080308944 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072329999 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079910519 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070475686 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090663401 seconds)
  done (took 3.53867897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089427538 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107576572 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083394004 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091296829 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093141234 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066951344 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089573794 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093380736 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128821344 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067846148 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072401606 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067480155 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075065294 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067273981 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082940885 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109650941 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113745914 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071103665 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098970716 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067157517 seconds)
  done (took 3.33840794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076369204 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071469646 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06725218 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07021065 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078883466 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074557374 seconds)
  done (took 2.038807506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072008313 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070073602 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069035837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06860991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074384478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068552704 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068293978 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069355881 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069373955 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069228527 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068577204 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067950992 seconds)
  done (took 2.428993179 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205661751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07049375 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071524431 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067743736 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072699922 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069079278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08343766 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069908577 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093950813 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06860754 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069154608 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070239583 seconds)
  done (took 2.609604788 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211937109 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077655267 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242174766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153755125 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113584817 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119250764 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114734365 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115548239 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144361888 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103063293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170908806 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170161521 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110321047 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140143186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091943102 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103148967 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157312195 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16675024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108128977 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169820031 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148443392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128947877 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156235655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10432472 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109035468 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124706826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073526472 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082755763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173318188 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135885261 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146947911 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113497683 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094401095 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178566824 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174670564 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144220493 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15041769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08658126 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107059066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136550072 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203089659 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091366726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165078347 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251031697 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084643323 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135729851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121248753 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121532127 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108128225 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091849376 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148366527 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185715236 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139130449 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090105994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126950147 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116049362 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118012823 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115594945 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18575004 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164859113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130628462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073232257 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1108626 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155975238 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135477037 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110337942 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128313691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093657893 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13770976 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158146765 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12289681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146451634 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119214664 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09092091 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120667514 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143510788 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130243294 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16437756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127625578 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075415732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126285684 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103900868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082996002 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148620541 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077341801 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179256364 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101541459 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110879203 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127345366 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110870177 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111082323 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161959823 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147300405 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105543289 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.209672902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108092645 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123550823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14962738 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089379771 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109878439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119738665 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079848893 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13954476 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077601968 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125638594 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079013098 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126310215 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13577612 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078939069 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125319073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106635846 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102422106 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135533063 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16298138 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090651244 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084164883 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171768992 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125068719 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106894718 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1487861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15992764 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102973874 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103525583 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1525076 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182724342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091838111 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165213185 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108892579 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085341938 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090151492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125741452 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114291064 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126284231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084013329 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120688803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171842222 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077264685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09787523 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137035363 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081027456 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082818685 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10742725 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107238016 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097427104 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101781438 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104792942 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138183929 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125485527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107403129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12625849 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245823566 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17468441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090370751 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104652086 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106151893 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073528182 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137216879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15945637 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08174395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166313927 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124192715 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118851642 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120353801 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085366263 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1428465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080817874 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072625916 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147167082 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111501761 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111789392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152509227 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11879237 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128578627 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120614943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136121322 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134348904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132297516 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108006102 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090455031 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11314231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129577071 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076088891 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093643979 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082525589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106849387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098436932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085573657 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14383457 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126532028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112161515 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113643676 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098934411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150030718 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078556091 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13140365 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120701797 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098214145 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154695775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154906394 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133473622 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101286694 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139434368 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073011391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07596685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089933595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123675668 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228987307 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086212416 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118279385 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151041026 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130562769 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140102743 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125819172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123744806 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157708732 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072152918 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120988975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150562415 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124557069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106608263 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093410842 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101884883 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145936324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109745904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185716884 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117642383 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125491577 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154792555 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10361376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081654134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105232391 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138877167 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106109336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146424247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101176049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090506633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111160281 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076489913 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10105475 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129652903 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121047393 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135979523 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117776788 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135519081 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079828103 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118506129 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124334388 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124952452 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066033033 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121655472 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16409494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096353987 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11886479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154673106 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080467217 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136440644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176895375 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291334132 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088962565 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112306656 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123429545 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13159482 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121973837 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143521285 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109529216 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13825913 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111599026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087762946 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089776845 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100977882 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108424673 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097606122 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108636913 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116219057 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097713236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135579244 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10595655 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112253234 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119236362 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100967121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094206102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099752715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179915844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122943375 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172766568 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102001583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146874885 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167225501 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076807182 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080961299 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080152608 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142324145 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086461532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132763039 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109378573 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119933693 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12866601 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145292018 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097806429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070678295 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11018855 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135374174 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126535323 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100791226 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106486822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16639228 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103359491 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081064137 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115354425 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117777412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104774264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173217245 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063349874 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107605177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077798891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226102186 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131635541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155178643 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082891974 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105381448 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121022253 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114950197 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13053623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102990941 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110427122 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128771406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152588322 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130868449 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091798669 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114285887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129616991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160504153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107360752 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098561717 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175693772 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154558032 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162360629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090638084 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116150671 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114916559 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10944946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141106999 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085303678 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166164776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083730352 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138239418 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105375853 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091200967 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131463764 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110522499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090374892 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15043791 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120140074 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08489015 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079626333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120284312 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122270318 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108429367 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077268693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141169239 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075200323 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133423267 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161468618 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082313598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106448181 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096934372 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081022146 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25632882 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10532025 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089904278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10092292 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176024508 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088364946 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153880244 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136492493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115378271 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13720912 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104186896 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642248006 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081097369 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154842579 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118425637 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178094204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102493018 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120153258 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111610396 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124571526 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147717558 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106593794 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18260953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135003669 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117806373 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082785118 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104787913 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106582185 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089510706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11002443 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115408606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117653483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094652636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117716798 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126804804 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084247264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097962296 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158285139 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118957344 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146745249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143718958 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087782837 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119702449 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140770406 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082553154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12259147 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153879855 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107979296 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101198273 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082462889 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101817122 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160843144 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.219614467 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163833782 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123774931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111879892 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115519944 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116287066 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135060823 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109281161 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124989039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095201861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111041504 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115876861 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083985517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079426873 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107800638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114258329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099952929 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099728516 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100530256 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155857351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074090143 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101831669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117525574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14742622 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178223368 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090541666 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085187836 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122736684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116184118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114687541 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123509601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081216198 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083818475 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081532772 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080016582 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110883944 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114622858 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116822568 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112258925 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165796034 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084888484 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234316594 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098212678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107328846 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071969935 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08076077 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098515425 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100410052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109571159 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112405177 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162124941 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098080815 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092559377 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093087627 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076075593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084844392 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129811365 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111104703 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246552044 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065964452 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111177695 seconds)
  done (took 60.285147714 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111624825 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083993945 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095929908 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145919973 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125156497 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204698284 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155834242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191175937 seconds)
  done (took 2.816336436 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070952102 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097627378 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106005515 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085295078 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06936484 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071160162 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234753158 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084122978 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068742644 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101346165 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080785415 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071434081 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432701355 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067919371 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070302947 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06453307 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069161235 seconds)
  done (took 3.537841596 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394429473 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615880401 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355671072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074661935 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.459162891 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088472615 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.132399814 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132219022 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075397757 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527436971 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411044777 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126501462 seconds)
  done (took 18.097761514 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079038385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071647751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085981114 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086436408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074457204 seconds)
  done (took 2.094112369 seconds)
done (took 109.626610876 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085572 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610513948 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054907494 seconds)
  done (took 2.395189615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086144997 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088271953 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08757238 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085474096 seconds)
  done (took 2.054281724 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077669632 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078271254 seconds)
  done (took 1.855182751 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237082083 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166406034 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098292341 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08634422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.0824208 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081981013 seconds)
  done (took 1.958200428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075590078 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076909501 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07494705 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079039192 seconds)
  done (took 2.009108718 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08044613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054012119 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056640695 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059940832 seconds)
  done (took 1.952403346 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090774023 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081169244 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080575979 seconds)
  done (took 1.955062838 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10622415 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088168886 seconds)
  done (took 1.896095395 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085302313 seconds)
  done (took 1.787495644 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099017117 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103000051 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134582545 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113637314 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142222592 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11173504 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086754713 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087581346 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078119886 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088784026 seconds)
  done (took 2.747141819 seconds)
done (took 22.894804853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082416467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.459991143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362579411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092775473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671211842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35859667 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034773108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094656658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116870558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069108973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086304388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650672818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021651655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.416502674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.010601173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320389293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650706458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070156156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069688884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070096647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017149479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069541973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069927288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070480149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649877651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374327983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0705863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321201615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070307374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072053403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357693816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070683322 seconds)
  done (took 16.611299833 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074033459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12247943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074510497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086406632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073329981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071485822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073731706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070552512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123104358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069611665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087255363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069469728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073493236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087620667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089954004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070332954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070498293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070873662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071131903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070609646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089613045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070066124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070449949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070893835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070272779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082543111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07075646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070860751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070748676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07254633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073368656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070884856 seconds)
  done (took 4.204313829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118600042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125894298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075171498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105667687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113004152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07232826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14579401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095693507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129242717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07006819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087557915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070341827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105090126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070716673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090399212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070519836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071505698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070553251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070238402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070882922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090242049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069839429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070389333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071280626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070425861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083946303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070652584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070737537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070441798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07211497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074236995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0706858 seconds)
  done (took 4.440173486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077244156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076946721 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085847281 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085994296 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072038897 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073883375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075287774 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071692103 seconds)
  done (took 2.347165533 seconds)
done (took 29.31322869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083044229 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071059173 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075621696 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084728214 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075443943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081425569 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06953421 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077967638 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074729507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075286946 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077180542 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069902119 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073502012 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069367615 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07567452 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069501709 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081342564 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073896502 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08141299 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082639567 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072041702 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075572168 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077070603 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080877719 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080748804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080613489 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078879171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075493667 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070979279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072302079 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078943705 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085916532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070070366 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08111034 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068958288 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069060871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07351899 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069555223 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080991792 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07867659 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071547847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078142387 seconds)
  done (took 4.900668953 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093049326 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09607263 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087549666 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063562877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06862297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066847517 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091568115 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061683377 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060775926 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090757311 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05708758 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061660499 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065038278 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055334319 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062102567 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05855704 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063574285 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057114871 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062126449 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061773741 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093625822 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055391062 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079810658 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065391117 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057759498 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063470269 seconds)
  done (took 3.531467882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080469885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08814267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092085703 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134188152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107678359 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081686039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080883044 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097573744 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091118266 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068652663 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072905509 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095128626 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092519405 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076123766 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069655608 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088624544 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085926457 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071254047 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075631009 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096810414 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089187488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088227756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098949791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085864787 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068633531 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071662967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073067132 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083789814 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074236747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079176597 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073073784 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072966626 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071885643 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081078606 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072903001 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071061126 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09441497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079502824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081196737 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070245629 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077650717 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070760758 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.0943179 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128418365 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069217626 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075794395 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073355089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079297164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069749345 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090811884 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08119934 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069124169 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072645189 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06850174 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069933783 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082967057 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071931288 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071821157 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079259942 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075556628 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094955936 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074359605 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085795561 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068983349 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078080414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068736983 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070501867 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068884317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098830961 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071753415 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11361015 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070716314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07043175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078660576 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077579854 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075850143 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070407482 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086088298 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080516445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073037686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078774739 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073509278 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072925583 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094359838 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072134269 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071568404 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070904362 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075861164 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07253277 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072762365 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083564397 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068986512 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072256223 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086829981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069396465 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071376478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075396591 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073903328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069086626 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080931011 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074226096 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070713387 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079547169 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06998381 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072679495 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083031133 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076119628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069241411 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074022161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075423435 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070381335 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071815772 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072232539 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071433083 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078280409 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076406439 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074633966 seconds)
  done (took 10.981030329 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170752419 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160456569 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072756251 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155248187 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078832277 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081883519 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.166190893 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097721337 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07019772 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070598569 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071081167 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113756297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109381744 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119067021 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08105754 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070003678 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086842251 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11780993 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155478907 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149635814 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087643489 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079645671 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072524382 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071058898 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073115327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081038559 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087984054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079654925 seconds)
  done (took 4.598476181 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084235213 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108077597 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076359532 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09401491 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092904432 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069712923 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072605361 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071581545 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083945128 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080848982 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069593275 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075699797 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076462222 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073795124 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070945194 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076849109 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077050523 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07152398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073278599 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076065582 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081072893 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094827349 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073982904 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069592347 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074869004 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06965932 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065776602 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086495904 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071225673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09817476 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067896304 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075613307 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084705291 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071322782 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069907671 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069908468 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07007911 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069998665 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07158352 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068442652 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068552101 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059335091 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06915344 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081243134 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076951703 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05839759 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074625609 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075516286 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075590751 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067422043 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072773646 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072280876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073157178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077848525 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074166138 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075118384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071804474 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076375091 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079463118 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06984757 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067042758 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068109322 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074473807 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067530317 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078675879 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074886506 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068470284 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069804951 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071775677 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076618283 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069607208 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074099749 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067689497 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071539497 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074386081 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07193985 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071276544 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068430118 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069571232 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070420106 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057198526 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069839671 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055107329 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073400534 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068045443 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068377092 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06977073 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074792484 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081702673 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071315783 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075696698 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070648965 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069039199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072892169 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061898464 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072729749 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085425662 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084526008 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069814591 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067770512 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083619525 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074221126 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068848504 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057836691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075449532 seconds)
  done (took 9.497695508 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094884386 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072402548 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087729568 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093168206 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089727573 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077232322 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080096102 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071810112 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085687048 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076256232 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078910799 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070527216 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080664442 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079647059 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072219369 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080019332 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074632201 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08738831 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085224275 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070447043 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078629845 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082581904 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092828928 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084291792 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082898489 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084994234 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093472766 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080187164 seconds)
  done (took 4.051739389 seconds)
done (took 39.282903982 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.812526745 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.989450059 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.815611331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.181312821 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.890111285 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.046795276 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.97264735 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.812707752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.004237535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.844236884 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.020073075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.950594895 seconds)
done (took 66.086083715 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.886910215 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.953200114 seconds)
    (2/2) benchmarking "String"...
    done (took 2.067720515 seconds)
  done (took 5.761671989 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.035318018 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.370779083 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.055976952 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.808298915 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.814324046 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.127334851 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.638991579 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312106651 seconds)
  done (took 30.868672306 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.98253857 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.031531537 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.501239698 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.533621031 seconds)
  done (took 15.84041228 seconds)
done (took 64.216729861 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.813362376 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.821417195 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.807224782 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.792581763 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.867252424 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.824656358 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.209762304 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.821219559 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.807951076 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.799354798 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.810075077 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.240762467 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.826019483 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.226060623 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.811775663 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.806643482 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.887167612 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.301834575 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.96497627 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.823091984 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.826484764 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.849829042 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.807107509 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.817213815 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.853423583 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.806205058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214827422 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.81672938 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.438757702 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.81105988 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.842048307 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.36620935 seconds)
  done (took 205.454096424 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809656786 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.939292438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.971959457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.845960091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.453614277 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.986537256 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.933984619 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.482216156 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.805828177 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.830944132 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.006638888 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.807544836 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.035639803 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.832090805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.838934187 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.816076611 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.043304758 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.024121717 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.837253193 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.944794014 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.819782313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.877598834 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.850806643 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.982180412 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.83464796 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.905519795 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.83245874 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.821456292 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.000599125 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.019926825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.811530492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.824205659 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.940227618 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.681660238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.82809213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.810690112 seconds)
  done (took 171.829289071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.343039531 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.810802439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.807710794 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809546142 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.822168193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.81123856 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.813340785 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.979659909 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.937743518 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.424669156 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.455797715 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.858813371 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629138889 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.806910006 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876326609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.822419716 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.80864897 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.826552761 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.830674483 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.804022325 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809949453 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.932668666 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.822842946 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.047118026 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.815470973 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.809077865 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81107301 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.177781415 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803752718 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813300039 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.067467777 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.805360715 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.806045275 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.667313517 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.363521419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.884841224 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804749953 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818212183 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.805010482 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.027660053 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805536072 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.810892529 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.809596395 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942077383 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.806571997 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.931677275 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808567014 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303984391 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.80512622 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.813801448 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.472592077 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.415961452 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.806608192 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.811834449 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.809861832 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.805863838 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.813363797 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.818054555 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.48963829 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.888103584 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.807665252 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.816085502 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810905018 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.806693826 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.387410118 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.808911616 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.817242158 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.864915968 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.944800864 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931012595 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.812666779 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876268771 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.904524443 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.808444386 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.811305906 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.808805055 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.806008692 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.892991893 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.804542702 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.947560809 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.809308547 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822431202 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.815115521 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.860671713 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.883278002 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.811662483 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675612911 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.815941314 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.810187463 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09481766 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.811202008 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.812119841 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875419831 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.806774918 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.80908236 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809715134 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.955913776 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929003485 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546475962 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.814149296 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.528129415 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.818658975 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.973161535 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.80878163 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.97320555 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.812712342 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.896460137 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.81296801 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.81172686 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.811666691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.844878002 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.812779401 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.870328472 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.814628413 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.184705623 seconds)
  done (took 406.372299176 seconds)
done (took 787.790767215 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.490157908 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.439774256 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.563680386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.476489062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.443478136 seconds)
  done (took 14.157411545 seconds)
done (took 15.902106182 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902335632 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908177576 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837301246 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90029041 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835104409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906130606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88803374 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.836152617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869618716 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.838171373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870185153 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.835500398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.821862157 seconds)
  done (took 25.99491183 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.044482027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.044703902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.888306197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.0600057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860263389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.047301739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.986422799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.968619385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.970733088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.833585209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.827870357 seconds)
  done (took 23.280345911 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.057598375 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.054072054 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893219363 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.055358244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87001778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.057901679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.998589638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.970774528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.97442508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.827914543 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.826850969 seconds)
  done (took 23.333414476 seconds)
done (took 74.355685629 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.824877368 seconds)
  done (took 3.567754457 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.854378858 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.002111315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.828235221 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824466597 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.825337516 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.823094824 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.821370816 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.821905117 seconds)
  done (took 16.548964891 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.818315381 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.818632311 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.823352204 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.818154414 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.818927733 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.819425623 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.820384402 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.822075574 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.820137305 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.816429549 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.821034378 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.815674484 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821474369 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.822136523 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.817146399 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.820289331 seconds)
  done (took 30.863636183 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.819814526 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.822973208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.815997979 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.820793948 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.818972886 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.82017785 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.822874954 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.817313999 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.818824099 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.820966515 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.818287136 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.823711892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.818392715 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.824535039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.818786799 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.822651158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.821603254 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.816382098 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.824795468 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.821023911 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.825626963 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.821685459 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.817643583 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.818215767 seconds)
  done (took 45.443712506 seconds)
done (took 98.172765441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.764074794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.229308106 seconds)
  done (took 8.739043341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.821305068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.825300092 seconds)
  done (took 5.431807107 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.823245269 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.823482805 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.821388113 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.818934215 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.822407484 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.823258028 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.824445571 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.821618128 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.821165666 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.821434491 seconds)
  done (took 19.968234294 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.824029138 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.823938468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.819330242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.822863421 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.82211947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.819737661 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.822164178 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.821482206 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.820767191 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.819254508 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.822747771 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.821075857 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.82288159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.819829429 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.821119987 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.82021246 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818910428 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.819852252 seconds)
  done (took 34.531237161 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.824134024 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.822492629 seconds)
  done (took 5.394784918 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.820054112 seconds)
    (2/7) benchmarking "second"...
    done (took 1.819327623 seconds)
    (3/7) benchmarking "month"...
    done (took 1.818529227 seconds)
    (4/7) benchmarking "year"...
    done (took 1.820037417 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818985898 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.820883543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.821675426 seconds)
  done (took 14.487958518 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.822952622 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.983436769 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.050190291 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.465113801 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.825529474 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.825680927 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.794193909 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.825671479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.828226634 seconds)
  done (took 20.168959712 seconds)
done (took 110.470527739 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656188608 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.818293335 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.12299619 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.862463172 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.875250669 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.163119649 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820507682 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.11396946 seconds)
done (took 43.18094099 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.834375703 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.394617016 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.419599453 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.353470188 seconds)
  done (took 12.916322858 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.803341084 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.345601137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.856245655 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.397954198 seconds)
  done (took 20.171218784 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.184705595 seconds)
    (2/2) benchmarking "read"...
    done (took 2.160604567 seconds)
  done (took 6.100192 seconds)
done (took 47.775333013 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826543915 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.826300849 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.824335612 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.826849192 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.822186803 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.821012103 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.824983546 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.822506558 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.825238243 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.825025207 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.825197254 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.821944171 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.822771927 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.825878677 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823605861 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820717144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820564898 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824500878 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.822364492 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823052166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821264519 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822088709 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.820985695 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.823046736 seconds)
  done (took 45.51281941 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.825023372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.822554629 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.821932469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.822464521 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.82077911 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.827031837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.824122974 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.821519575 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.82650323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.823181041 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820538762 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.820929154 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.825883531 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.82284393 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827019484 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.821597291 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.822554702 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822367073 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824932884 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.822826366 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.824735038 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822473665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823123576 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824361505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.825806648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822302968 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.825466207 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.82514109 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830693161 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.821629289 seconds)
  done (took 56.462694776 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.82983752 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.83401512 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.825286935 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.825651175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.825538702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.824192247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.825608174 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.829356136 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.824417453 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.823810896 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.825481012 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.824265232 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.824120276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.824688466 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.825743163 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.82708588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.825867063 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.825434953 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.82530626 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.829047044 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.827776521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.825785834 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.827786189 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.828117299 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.826834241 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.825803602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.825314281 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.825746229 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.829795365 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.827628026 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.828631222 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.834027962 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.831084943 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.82938743 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.828379392 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.826528255 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.83345887 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.838366532 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.829739015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.82637272 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.830747075 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.82910801 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.827649646 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.826298027 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.828096035 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.828198009 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.82663736 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.83047706 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.831582794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.826461353 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.828860777 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.826513677 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.827605424 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.829822137 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.827786993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.829165969 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.829199621 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.827192607 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.827301389 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.829646865 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.830259163 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.830069116 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.827451309 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.830254422 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.828877843 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.830999122 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.827447575 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.827869814 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.829811194 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.829402916 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.829248201 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.832941246 seconds)
  done (took 133.378412183 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.827378241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829386197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828028914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.824645928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825513242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.829408952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8256471 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829344408 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828075276 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830492876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832322753 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828693849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831020376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82717828 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834618343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825148159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.830151093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827887359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.828580719 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828891155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828304877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.826699898 seconds)
  done (took 41.98511595 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830926445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.830681196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.827217601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828945678 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828402517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829800678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827592504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829913682 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830232958 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829835817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826005588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828918639 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82779038 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825796465 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829963266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827453912 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828586933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82962558 seconds)
  done (took 34.672522671 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.829432054 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.828094319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.831339196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829238503 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.826836651 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.8328461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833121742 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.833271277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.833090321 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.828708458 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.832299765 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832518747 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.831072748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832032242 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832641774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.831825195 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.833655642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835336862 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831771811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827663476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.829380191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833058225 seconds)
  done (took 42.045446872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832695791 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834256037 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829300689 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831341431 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.83450705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831570047 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.833894174 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.829405601 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.833498858 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.832963713 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832986947 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831641398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.828754045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831340445 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.833378327 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831866694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837811717 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833589369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833360219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.828843769 seconds)
  done (took 38.405709252 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833840305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835864059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835839015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834959583 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835263633 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.834906063 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836325132 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838215665 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83358921 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83568067 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835093229 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836833337 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835733335 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838732751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833914432 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840434161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836982862 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833992063 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832337923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836528712 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83481833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834950824 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834848837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83855082 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836652958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838254732 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838348749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835967679 seconds)
  done (took 53.167112056 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834335093 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835959928 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.831957796 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.83252591 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.83496054 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.834251056 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.833614732 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.832886704 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.836550899 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.831803838 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.836270813 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.838502925 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836858476 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.838263301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839329744 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.837985499 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834711642 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.832737706 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836771057 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833797647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.836838598 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83920067 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.835874571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832622646 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833117487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.836405762 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835291608 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.83323321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834879778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833452673 seconds)
  done (took 56.818278914 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.854011407 seconds)
    (2/2) benchmarking "in"...
    done (took 1.853891772 seconds)
  done (took 5.473121809 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.837337255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834762702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.837275837 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.832460988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.833064849 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83738284 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836445705 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832533843 seconds)
  done (took 16.441834883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.836780343 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.836950127 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.836518842 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.836918659 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.838340239 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.837282295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843072506 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.836646323 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.837599842 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.837926382 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.845402526 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.847631823 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.840133567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837444729 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.837778816 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838830821 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.837733742 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.838059254 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.839336238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.837917068 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.838123688 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.841128933 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839856273 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.834491844 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.839454463 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.848634594 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.843097124 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.837720796 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837318404 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.842299697 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.838425239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.835105735 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.840446728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.839222891 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.838528972 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.838609338 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.845291978 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.838199453 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.844704694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839503929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.837738858 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.836659706 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.83957143 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.838819036 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841703993 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.837597798 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.838512312 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.834845222 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.83830808 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.841627415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.846228681 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837384834 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.835632646 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841308819 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.839684678 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843649606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.840982494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.840583419 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.851461489 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.847802378 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.852985626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.84846558 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839589554 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.840995665 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849483669 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.86681822 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846063164 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.837142343 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.836205407 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.839788996 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.849160492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853071145 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.851509747 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.840469776 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.840324862 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.839668847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841213154 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.839538087 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.845961413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.843524141 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.840392315 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.841038918 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849613888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866025011 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.838819897 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.842028675 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.842357585 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.840118707 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.840341827 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.850774107 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.842580338 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.840795417 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.838805993 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.839797232 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.842522968 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.842130336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.839045013 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.839667902 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.839305738 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.840811783 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.842133795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843416362 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.850772617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841914051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841366892 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.84674866 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.84070509 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839644521 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.848404501 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.841116364 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841912986 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.842127283 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.847624742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839018066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843890563 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.853702189 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.843230287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.843413308 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.844083272 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.843922822 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850778936 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.872154879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.84226077 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.841935016 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.847891998 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.856885967 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.845523269 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.844988959 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.843278092 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.839538385 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.839509233 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.844104375 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.842391898 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.843985342 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.845410059 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.844436756 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.840592505 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.841724937 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.843674097 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.844036039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.84416686 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.843364493 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.843785286 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.844746051 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.844293642 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.844350971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.848816735 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.842203036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.845413796 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.844200171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.840642895 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.842968848 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.846892927 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.844725506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.844890075 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.844788154 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.843963975 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.844075345 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.844286757 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.843072841 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843506918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.844299119 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848053657 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.845333508 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.848982495 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.843253942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.840656463 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.843449586 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.844210128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.844524498 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.844495093 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.843771552 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.847762834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.855931641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.845190659 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.845662224 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.847570751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.844751093 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846497806 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.845871538 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.849975061 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.856856952 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.845959083 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.851783545 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.847165538 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847404082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.847268725 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846992595 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.845835608 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.84705156 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.85016414 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.856535982 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.859947116 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.857195388 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.846849508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.8530421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.848768692 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.851721134 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.84951535 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.847709124 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.846944407 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.84755953 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846099677 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.84833738 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.847188854 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.84727952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.845142317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.846043914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.846393491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.847573388 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846706342 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.84765129 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.847326481 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.844432925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.846466133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.84762095 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.845980385 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.844943568 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.845462112 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.846894969 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.845685373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.84856799 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.853124704 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.844275945 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846698751 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848812143 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.846670257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.848565438 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.847525153 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851017369 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.847221529 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854004844 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.849462778 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.850668224 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855847896 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.848882383 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.847007847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.850841757 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.848434792 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.844384259 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.851575304 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.858215002 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.848616289 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.849046262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.849583227 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848609115 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850670292 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.854203564 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.846082631 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.846940937 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.848859844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.850317933 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.846372025 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.848512325 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.849603957 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.849272993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849919496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.849068256 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.849101335 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849661839 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.850691435 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.850507675 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.851316039 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852469123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.859870067 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.85386485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850745748 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.850334757 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.850328462 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.853887624 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.849572185 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.851226821 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.849767341 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862962014 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.861989534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855204012 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.851566447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.850238086 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854297975 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.852706248 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.854975241 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.851060595 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852184404 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.851594428 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.850122849 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.84899151 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85094978 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.852391694 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852216401 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.851893175 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.856256129 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.850548145 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.849474511 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.853520746 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.85302634 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.851210099 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.84941406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.851435619 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.853220127 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.854275617 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.850913313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.850952714 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.858642045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.851918106 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.853719717 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.852590215 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.851986825 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.852183933 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.85362509 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.852924261 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.85446408 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.862263926 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.855065258 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.862282676 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.853390811 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862612739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.853913262 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.856692282 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.863180273 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.848733934 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.850467814 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.853064347 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.853319311 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858978813 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.853793947 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.854552037 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.860054304 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.853722313 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.85438261 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.853947099 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.854857063 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854492601 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.853748818 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.861285374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.856744503 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.860325777 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858270838 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.852145071 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.85653624 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.857175262 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.855249215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.859598349 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.855667105 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.855382546 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.855437865 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.855515429 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.854065966 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.855835225 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.855037197 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.853616612 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.854489122 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860317172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.855767618 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860854345 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.856720989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.861744876 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.855681525 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.861975561 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.85659381 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.85535629 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.855005268 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.85456711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.855821224 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.85284996 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.855949246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.855203913 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.855876523 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.85873029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.855387651 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.857563509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.853604821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.855460664 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.855578536 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864574267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883993349 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.856779188 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860460336 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.852761797 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.856943097 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.863440802 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.857393762 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.855407011 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.858428016 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868248049 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.866619723 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.85680987 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.85800994 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856519561 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858878331 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.856893187 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.859072863 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.859208479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.856985743 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.858083664 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.857494452 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859583756 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.856469866 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.857299753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.859330775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.858699829 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.868956102 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.85823312 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.858866964 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857634904 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.857641049 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.856664809 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.858737207 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.85901532 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.857150269 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.858127172 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.859557396 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866901754 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.867219384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.859126117 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.856522352 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.858906052 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.857784215 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.858128001 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.859132329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.859395332 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859217646 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.859713872 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.858454799 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.858859708 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.856102372 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.858262487 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.859992865 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.857209252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.859415563 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867590165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85968076 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.855992029 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.857199241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.858421098 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.856685081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.85836165 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.865364111 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863210411 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.872919518 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.870004216 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.864928069 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.858426599 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.861764315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.868754481 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.857383723 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.860482013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.8605438 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.860722471 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.861713134 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.864110307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860356886 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.865052958 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.859647856 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.860559272 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.867758705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.861537032 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86108434 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.861173854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.865642185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.859424932 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.857676876 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.859125735 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.858471596 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866255755 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.861154001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86125568 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.862100046 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.857936272 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.862135808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.866049435 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.860296072 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.861977478 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.860214164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.860901122 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861763224 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.861975717 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.857823538 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.860546348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.861436853 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.866022042 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.871025638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.859001542 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863943255 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.861637307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.863522943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.863283617 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.862717968 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.858934716 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.858160098 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.859770817 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862905046 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.862168081 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.863641375 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.861166558 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.862111164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.863844419 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86252639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866933005 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.874937693 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.873168311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.859913249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.863627297 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.865114739 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.866659164 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.864168257 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.86437511 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863175715 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.864281951 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.864213878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.864485419 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.863304119 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.865995535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.881098339 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.863426534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863053063 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.86390858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.86700874 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.863521103 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.861062465 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.864157677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.866018287 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.865085498 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.874450471 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.864147756 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869909985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861746684 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.864855613 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.869969795 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.865661935 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.874258179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.866567102 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865179881 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.866106495 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.869122829 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.882841361 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.864247374 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873112159 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897063368 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.864333113 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.865261726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.866105557 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863058482 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.867307386 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.864968679 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.86556781 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.865435117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864781653 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.865501426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.866004724 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.871868803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.866940553 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.865842896 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.865152769 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.865314444 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.866803442 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.861452785 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.866988439 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.864336984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.870241851 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.86725944 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.866819197 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.867351235 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881556714 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878681376 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.867644919 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.86737185 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.864117828 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.869565254 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.868849753 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.879498807 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.874993742 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.866161461 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.868567294 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.869570986 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.86735943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.86400804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.866650846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.866846383 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865235055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.865766635 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.880385261 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882739872 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.874303481 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.865852803 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.867187403 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.865921807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867359144 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.86778427 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869252738 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.869015297 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.870133641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875243524 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.867987993 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.867411777 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.869882886 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.876867664 seconds)
  done (took 1106.703392055 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866177306 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86406593 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86495992 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.865006495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865859128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864747306 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864749367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864595967 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866965707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865823836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.867230802 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869625535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864819728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.865929911 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865263445 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865522945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865970523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.866103534 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.866514628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864344146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.86511766 seconds)
  done (took 40.972213032 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.870488661 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.866708408 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864792022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866251187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865359858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.867130099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.864562251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867668572 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868715731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863935293 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.868350451 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869025333 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.86444432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.865407002 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866945374 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867053998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.870916824 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866807406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.868093038 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866129502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866314301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.866080112 seconds)
  done (took 42.863338607 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.868165437 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.875138199 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.869917142 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.867661646 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.87415976 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.871315859 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.875706094 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.871039903 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.872230014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.879856952 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.877307126 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.88006898 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.88565842 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.885726427 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.87957725 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.877419032 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.020710966 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.875139749 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877575503 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.87627559 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.873440452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.877058876 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.872555332 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.871235425 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.873002336 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.876336614 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.874622034 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.873860098 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.875796569 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.875137499 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.880088845 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.875889236 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.871691827 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.873663274 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.873300123 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.87368866 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.879144244 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.872572913 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.871044232 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.868004179 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.881680388 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.896314041 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.87402548 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.879610783 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.871142309 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.873393412 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.876710711 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.88339329 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.868707981 seconds)
  done (took 93.845482752 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868650653 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.872415925 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.871609384 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.871705656 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.870851463 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.870699718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.872005253 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.872077915 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.870841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8672003 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.871680539 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.867760293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.866867341 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.868790152 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.866534906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.868829421 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868756236 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.867033196 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.864401012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869901411 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.870077079 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.872199204 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.871195026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.868912596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.872734203 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.867327516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.870512719 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.871926266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.867530999 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.871176426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.866362051 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.869105265 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.872523185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.867384458 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.872863031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.868855395 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.868023958 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.865476676 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867766805 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.867832328 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.864369355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864292118 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.866476493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.863706155 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868117351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.868959965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.862335386 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.862921688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.859240489 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.869905865 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.868963019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.864243799 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.868170172 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.866951345 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.868703942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.869593146 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.864140164 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.868100792 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.870250579 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.867382495 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.863965976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.865505007 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.866260258 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.869215429 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.868232881 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.869442183 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.871860804 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862130382 seconds)
  done (took 128.840839675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870284346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.868542808 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870505688 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873422397 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864941203 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.872233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.872821498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.868869804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.873012924 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871143888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872207813 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.869560039 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.871594293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.869412894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869914975 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872163982 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.868712113 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865634944 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871314564 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870420361 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.868837457 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.868350332 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.868844759 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.870472928 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868398364 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.857571321 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855681787 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855202939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857639745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856227801 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856376888 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.857305212 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856920094 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.858561491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.861183666 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.860294579 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858483676 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858198491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.858120442 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.859029494 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.857429287 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856028736 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855625003 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.855048854 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855880581 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857306505 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856956565 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.854726965 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.85499742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856296976 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.857284878 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855816043 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856816208 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.857221728 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856355596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.856500745 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856968969 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856215163 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856867263 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856726581 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858309217 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.857111706 seconds)
  done (took 117.252799734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855109705 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856125813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.854129632 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.854754351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857975055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853462248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.855642851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.857042812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.856612375 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.859782263 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855084477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854150995 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85344748 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857050002 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852580583 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856276755 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852678241 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851528564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853839936 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851192304 seconds)
  done (took 38.879301636 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.850923795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854167687 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.850877603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850465288 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853748948 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854068659 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.851577763 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851272686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849599822 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851640515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853249063 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851549962 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849019002 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849686439 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.851309683 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85099965 seconds)
  done (took 31.404892446 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.848314726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.850299671 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.851130796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.852451399 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.851067811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.846076679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.849041679 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.847136046 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.846807944 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851863395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.846898787 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.846894036 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.847594463 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.847315541 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844669521 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849932664 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.844136936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.843882761 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84668709 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.847969443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.847562867 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.843274365 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.846426502 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.846455284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.843776302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.843567627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.844236019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.84397675 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.844180681 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.846778005 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843404284 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.848191984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.842683764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.843309805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.845717917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.842012166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.846061165 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.844994819 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.844189743 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.844595293 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844459646 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.84187114 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.84618391 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.844113488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.841968302 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.843823404 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.840922396 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.843720571 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.841236801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.841320512 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.842608901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.844805491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.844200134 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.846737251 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.841530669 seconds)
  done (took 103.28239186 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84198045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842304047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.842921085 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841592023 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841625804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.839631887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843285619 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838740998 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843286092 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.840993528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841030484 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841526218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839941076 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844467066 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839784046 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842603343 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.838556538 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839950926 seconds)
  done (took 34.911857956 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840168587 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84018742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.84236854 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83926689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.839484726 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845343315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840137195 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.841108321 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84148347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.840857693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842667917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.842335275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840360635 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.841037311 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.838451192 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837958967 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.841521128 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84088923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.838014749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838060059 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.842330185 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841184315 seconds)
  done (took 42.263912467 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.839238964 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.838612443 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.856779627 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.863554246 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.86414203 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875510605 seconds)
  done (took 12.903436834 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836921729 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840152473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840507969 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840472717 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841761318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837253757 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838221326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837974679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842466587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83889623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837313182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841395149 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839363729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838513007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840706632 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840382406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83814839 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838494509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842372299 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841766762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839012889 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841169346 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838908416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838434793 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845000132 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839013825 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840663534 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839419442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837919474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842453212 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842172236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837870512 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841156376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839424368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840646189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842352281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838388872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840797712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840431979 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838684992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843408573 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841354955 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840655559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837540572 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840514635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839535561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843977155 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837376651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838291299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839721395 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839881726 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840393116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840760176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839997624 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840336374 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840712891 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839434862 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836986768 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840659803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837563665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837803633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84031421 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842117753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838143211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841053438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8374752 seconds)
  done (took 123.200926591 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840170319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837932654 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83731203 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838767746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838584737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838097023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839638639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837764717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83894181 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838776338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84225448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840192875 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83834222 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838543649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838625627 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838820353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837215966 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842638807 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838361554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840539517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837593431 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837608969 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841563084 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837438128 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837684237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839835245 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837750476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838156979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840268296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837737998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838633279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8379828 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837698085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838564318 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838594943 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838194305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838446854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838477284 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838815958 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840215316 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838735556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840364555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837925059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838841225 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841352556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838544276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838405862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838563336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83936841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844109467 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839608456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839157997 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83930622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839054968 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839020471 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839995864 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839292626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839638308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838535357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841926528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842705214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839375343 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841552613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838695217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840041096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839196667 seconds)
  done (took 123.154554239 seconds)
done (took 2566.597033893 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.887248138 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876354316 seconds)
  done (took 15.53050622 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.012969607 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965970816 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.849075654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.879383675 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.847503003 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.867925864 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.871348979 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.846735167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.851238043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.849701269 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.849159176 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.034727779 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.851321703 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.848440183 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.848439491 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.942046745 seconds)
  done (took 52.174687587 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.853107607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.853205516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.864646381 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.856121857 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.854978009 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.869816845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888809817 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.856329724 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.915553061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866739328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.974329311 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.864188946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.852642151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.922085268 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.86542791 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.871023608 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.948370727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.929300257 seconds)
  done (took 35.683274467 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.932995975 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854917377 seconds)
  done (took 10.572826438 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.872428395 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.876648815 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84950121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.854675231 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.859725693 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.850923249 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.894893627 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851404385 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.849448749 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.874632819 seconds)
  done (took 70.415594872 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.85871709 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.855613025 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854645181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852868129 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.844646692 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.848946257 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.857487444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850129807 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523063224 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890000751 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861134074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.859062667 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854222114 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857382545 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.857189259 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.877749864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9766691 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.851742492 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.851770614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.863177825 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855504347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.923561238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.868154866 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.854821137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.884803346 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529797998 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.862443299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.859263379 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.974028074 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.851289213 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.855694056 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.855447324 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.855940553 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233290788 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.131839751 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.853385686 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869719031 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.86486014 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852190416 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982153445 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.855488671 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.861189265 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.795711639 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.109906499 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.970372102 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.903193502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.207328442 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.873762567 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857213954 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.886722861 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.862834664 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.85732853 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.870055154 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.373498598 seconds)
  done (took 131.833126339 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.85338947 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.114413555 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008039787 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.850709284 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144451377 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059596767 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850726492 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906789549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853332392 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082640295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0709368 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959861701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.850899855 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.849569227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850287078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848669536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015612449 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925604661 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852763425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.850541554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887298526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097812475 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981490721 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.852567416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.873948681 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066749268 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.976276866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960377048 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.339692292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.850041258 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918008091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853070047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855452898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849175779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010026594 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9499339 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940137251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85410257 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850508011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.850930135 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.531378675 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051789109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.950217242 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998520264 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107829782 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058536049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.640865983 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85076119 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592889444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.017806665 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087244371 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085137566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.977724259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.853814495 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.12378262 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.850569493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851789248 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092097631 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096145495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955534095 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85437424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85262744 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851638812 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100442243 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856195651 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948206751 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856476112 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853416938 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.950112439 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955627465 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.100194779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067740404 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888245655 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.154675327 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.324937598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104332861 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.922774476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087004394 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85412787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85160649 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943755068 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.702682578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058053883 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109141483 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.112089586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893347252 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.577691517 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.85404159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.082697588 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.079000958 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.107474001 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100072378 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.007072628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175560628 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854199895 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.853240146 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.10226907 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993108686 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85625462 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217814288 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092443588 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.431100362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887746904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167173098 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988156386 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857539309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.499321926 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8589241 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082966089 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.897648683 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.858209532 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854684831 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.076971402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.837464531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857689346 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.571936103 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.920782319 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855474451 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091894764 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856365543 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124761218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85864228 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096774985 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.107763583 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891226468 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.029349263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.100352119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.855743425 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116708663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104563398 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976726213 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133109463 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.781124609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.857025849 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14849865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856755993 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.855036338 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030585793 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859949588 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083913253 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.860593132 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146781622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88171987 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015912867 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859940253 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116757007 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.894191726 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909954749 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85886831 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991150229 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858792466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729853802 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012287542 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857826439 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853393314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.395693631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.855853056 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014153578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.092496313 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882439748 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933109379 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.530007916 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856116172 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946319393 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.887403598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.204617022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.856937182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.076651198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.859551251 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.392984657 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.855831422 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102120946 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.093068206 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859909177 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856662973 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.762260471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.858365208 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85841474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.020727688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.672690854 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857674499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064415614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861549973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990259572 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860939004 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940445901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213567738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858139368 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.860869557 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.859054639 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.857822181 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858781749 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069568704 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890348155 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.401625684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003975432 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130925592 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.17863924 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113338016 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906055971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865333333 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106398335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.861416698 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925311696 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.860057339 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883787802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094949845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862067845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072083453 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142079383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.797954519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911370737 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.860027378 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86302903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.777393064 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.014587367 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950965901 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860508344 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.860709427 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979185637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987672267 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076411105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.860819357 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.09248598 seconds)
  done (took 900.629426166 seconds)
done (took 1218.608514599 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.860002247 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.861706409 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.847364233 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861583828 seconds)
  done (took 29.224220174 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.869574356 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.865423286 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.869588985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.866024437 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.876547667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.866266311 seconds)
  done (took 13.009146367 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.888353268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.865423702 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861004511 seconds)
  done (took 21.406917729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.937650639 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.253132467 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.987081178 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.290189617 seconds)
  done (took 10.261078261 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870642053 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.869417638 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.871809044 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870732039 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.871989504 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.871568917 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.869619234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874058126 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.873780979 seconds)
  done (took 18.6368832 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.337704668 seconds)
done (took 98.66684147 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.386035762 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984226718 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.106561431 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.32541003 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.121953122 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.016699429 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.934729651 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.865101557 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.752832517 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.023662996 seconds)
    (11/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.054150549 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.908771115 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.881181883 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.888097306 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.484112631 seconds)
    (16/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.947505355 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.88792733 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 5.609037327 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.397041399 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866526922 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.061762616 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.027352937 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019658902 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.972404705 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.95693482 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.145312807 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.757668838 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.207690102 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852268299 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.974072229 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983889072 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.343802915 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.997693996 seconds)
    (34/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.037820819 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.896376353 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.939024319 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.167852442 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.981283358 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.8441965 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.937160452 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.887826998 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.868497078 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.065185618 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.53439395 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573669198 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.874163337 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.909813923 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.035336043 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.831224613 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135754844 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867873746 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887038423 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.866467348 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.392468895 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.871312051 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.894523501 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.982283048 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.126082067 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.702673418 seconds)
    (60/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.998733923 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.994988792 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 5.572897509 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.854182542 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.017376078 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.515278439 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.892538594 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.991452126 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.543953464 seconds)
    (69/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.950809836 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185263363 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.474203664 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.151970301 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.083210547 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869758954 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.932644881 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.852927488 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.180210949 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.007213007 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.975578852 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.175112266 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.707970502 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.245530914 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207648683 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.03943019 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.569421421 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.309768005 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.186224763 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.03682011 seconds)
    (89/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.997561702 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.930586548 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.997918135 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.169744675 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367754992 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.859972575 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.102869803 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.123135274 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.216283819 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233156598 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.133258415 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.968723014 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.474584801 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.894756744 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.930785578 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.198365847 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.060566129 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.87082564 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.200361428 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.064190504 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.073139763 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.080929577 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.869072698 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.170094828 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.896356509 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.86701366 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012481762 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.449808585 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.033948537 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.900501657 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.084737388 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965590743 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.881793325 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.038804603 seconds)
    (123/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.004140662 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.320843772 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890906466 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.856074888 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.22582157 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.85304433 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.031758556 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.874040837 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.089869465 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.122154248 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934290511 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.208431559 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.40834035 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.458266534 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.002463222 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.561585849 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.438019737 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.956516919 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.92785099 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.704163351 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 4.859322512 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.092712813 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.209916218 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.897162587 seconds)
    (147/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.411542855 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.856801791 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.313522976 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.274754073 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.885282734 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.226792612 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.873354325 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.315453065 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89115033 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.869583208 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.32234571 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.857989491 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.790728335 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.202480407 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.053172 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.974423792 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.162020623 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.871958981 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.95418677 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.447960017 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.875613861 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.335607692 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.874030922 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111686627 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.131295812 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.027010192 seconds)
    (173/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.978158453 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.957477635 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.91881689 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.975085961 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015539116 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.90342878 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.156412643 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.910325624 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.816739438 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785616826 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.871257 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.903268335 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.970440514 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.888347306 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.044964958 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.940903424 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.861642815 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.047963604 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222099822 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.341301611 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936354717 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008779388 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.067398216 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.391106202 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.967733774 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206878857 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.875457182 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.001034778 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.261488146 seconds)
    (202/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414471732 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.116588937 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.874528749 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.047386667 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.116463854 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.878098229 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.754297649 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.058595118 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.521116352 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143409426 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.789968659 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.878245546 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.874492133 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.314526353 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.906918853 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.892971857 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.963414603 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.954309539 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.919417652 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.879668857 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.864104881 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.273675273 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.700281062 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.004356969 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.00889536 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.144205603 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.8818665 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.965131233 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.974925625 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.077795964 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881237903 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.864989319 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.987030918 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.012369066 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.26326193 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.264048654 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.782962559 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.071342085 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.912497263 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.882867642 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.736468798 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.046779072 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.962621605 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.969113193 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.001399591 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.169328642 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.908532631 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.173920185 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077218622 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836314204 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.086494698 seconds)
    (253/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.24995026 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.905711911 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.96913395 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.937968624 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.144980343 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.888890268 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.871086926 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.161822075 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.161621302 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.912865862 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.016688989 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.877692877 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.966783016 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.070686271 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.898261369 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.078686059 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.344861214 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.176466905 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.872660591 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.445338455 seconds)
    (273/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.868851105 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.355169852 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.866765313 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.7733756 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.002034205 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209416802 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.965470333 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.90938451 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.963018363 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.88088371 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.788693919 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.026710186 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.305515913 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.614354736 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.342839148 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.197471266 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.328287548 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.909029917 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980774826 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.558350633 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.976084093 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.254816709 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.919085579 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.983609538 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.270149911 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.907271431 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184800498 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.210282002 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.86561661 seconds)
    (302/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.116127862 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.869327898 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.313202476 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.906455505 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.882546912 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.210060197 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.991178753 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23569063 seconds)
  done (took 1010.363948566 seconds)
done (took 1012.221246594 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.917093517 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910989649 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.891105516 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.917373485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008288836 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.925853819 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902982112 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.895112394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.940397627 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.942166646 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.893097686 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.922217996 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895350609 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.893841074 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890126033 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912105627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201563733 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.92047715 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.910013442 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.90132686 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.913747822 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.894871134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.942093835 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.921123966 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.896181301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.895643054 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.898022337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.91446582 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.005134161 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.89780996 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.894752125 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.907150908 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.200558314 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.914745189 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.886571444 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.919040176 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.905016119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.901131986 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.897786005 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.92646009 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295742465 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.928014468 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895412615 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.893700718 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.893651591 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.899502721 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89880743 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.899430887 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906216676 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910864454 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.290296865 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.944313253 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.899058891 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.893582871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.904589138 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896875414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.89862547 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91227924 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917017474 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912339526 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.193150324 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.923384756 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.897163992 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.912826429 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.902992092 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.326127452 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923083627 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.901257261 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293738518 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.932508037 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.327975577 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.941163426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.897178562 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.910142354 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927418876 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.204475649 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.912895395 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.895108718 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.907029601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.895506691 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.904738271 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909965454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.902501076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.896051137 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910895563 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.926262551 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.910122378 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.897715155 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.906687121 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.91618004 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.902252801 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.90916534 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.901444487 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.891525437 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906524184 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.901146752 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.903037471 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.903788925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.902665268 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.909583655 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297167636 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947301532 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.89435964 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.894678154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89754465 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.913301725 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292826283 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.934591746 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.920156044 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.944985205 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.89916413 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.196530717 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.925886385 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915843259 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906847925 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.899733962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.895299997 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.195787976 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319618314 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.946806563 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.899194269 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.898883139 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921603474 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.902967695 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.893939737 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.648403601 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.923583218 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914369054 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.021176354 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.908299392 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.932363491 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.898445114 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.902227896 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.931910578 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916470105 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.932604496 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.902751179 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921406467 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.917051776 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.896572556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.910710763 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.912283908 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.90114637 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.909846459 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.897186269 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.932469305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914557466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914298363 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.920914429 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.022447558 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.896014469 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.198189126 seconds)
done (took 298.429276374 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.972183481 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.897157228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.998556591 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.899029124 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977485579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.980762301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.892944034 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.895635477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.895444615 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270657884 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.894858311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894774708 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900571327 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.895936384 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.987267506 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901477641 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.895333307 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.234136721 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90096664 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.97546535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.893039588 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.89757952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.897804206 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.26926402 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.900527898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.897238949 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969192461 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.898581885 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.236397962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.895322007 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899131135 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.23985603 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.994432116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.920966921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.911158304 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.911895266 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98307565 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.899260505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978124959 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.977857432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.998680692 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.941822697 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900743904 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.893088595 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.899510922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.902147571 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.898737563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.930866285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.895983544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.895584011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233958934 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.913293714 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897748984 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.898332275 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.897578061 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.937243638 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.898280275 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.901919659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.99050433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.901435134 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.962846367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.273520598 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.273702673 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.904929898 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.896871788 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.900690957 seconds)
  done (took 186.293773912 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.967983582 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.976441214 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.968911205 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.901019295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.950435919 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.968128889 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.905250514 seconds)
  done (took 15.461453923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.907588646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901785686 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.952215396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952100213 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.902787013 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.048788706 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902071406 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913251829 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.901133145 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.95330278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901251935 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.901860416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.907414796 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.902505623 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.952092586 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.913523258 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.023426176 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.904917072 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.904136278 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049746861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899939862 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.910544387 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.957317901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916195413 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.904527164 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.908039015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.491453348 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905322957 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901012328 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.903406228 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902055228 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.947172266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902885621 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.897293155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904027945 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.018190123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.905387621 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.903899893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.905532964 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.899333192 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.9029639 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.904355114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.908020104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.903544927 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.903642673 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928430864 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.906720393 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.913635766 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.904134656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908489444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.954734624 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90425201 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.908439547 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.9005061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.957999269 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910483452 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90623629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.90036212 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906495866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.904192195 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.054497323 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.950510414 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.905584621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955359749 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.908450669 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907098482 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908310679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.907145547 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.004153952 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.906504049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.955168919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.902688691 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067411073 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.934894039 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911061908 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.90852859 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.909118866 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909524434 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.902323346 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.911875487 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.903233803 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.915693161 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.913868644 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908567082 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902299163 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.021591584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.01604399 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.906768364 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.92177712 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.917776452 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.904830646 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.964479241 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.906696012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.904290081 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959651046 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.021953489 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.96283357 seconds)
  done (took 209.314873469 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.910905984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.912240227 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.905569602 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926085285 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.90576256 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.907229812 seconds)
  done (took 13.296898188 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.906780712 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.908472722 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.908142332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.904328476 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.908961477 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.905957833 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.908499461 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908097767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.910875024 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.90707086 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906922836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.905244352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.908567234 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.906185416 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.905871075 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903822206 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.906833861 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.902472044 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.906148211 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906608148 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.055579377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.9069701 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907416564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.906792316 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.912219805 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.905729934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914312102 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.906622435 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.908126146 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.915949008 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.911442705 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.908414365 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90664556 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.915763365 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.911109035 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.908584454 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911103135 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.908460808 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.90369271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.908816308 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.907642813 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907301741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.907164901 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.909153556 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.909502467 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.911684679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.912574122 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.91471777 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.908978232 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.907170465 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908584012 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.907452392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.909649359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.909074693 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.910557357 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913978527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.912726379 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.909563837 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.909545588 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.911113718 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.91002726 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.909515651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910358265 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.914041274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.918241115 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.911755123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.909089379 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912542123 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908517035 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.910575871 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909949944 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.906363531 seconds)
  done (took 140.427715851 seconds)
done (took 566.626212553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.118647366 seconds)
  done (took 8.946923897 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.937179676 seconds)
  done (took 8.807150631 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.117670584 seconds)
  done (took 9.953400746 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.926139493 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.915192591 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.907872111 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.909385545 seconds)
  done (took 29.508903881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.0124485 seconds)
  done (took 8.843114364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.924617823 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.899388643 seconds)
  done (took 15.687449665 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.051022703 seconds)
  done (took 8.880803089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.017298934 seconds)
  done (took 8.868808932 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.911211406 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.932078189 seconds)
  done (took 15.686053189 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887955622 seconds)
  done (took 8.718643443 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.587859531 seconds)
  done (took 11.519486865 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.92424367 seconds)
  done (took 8.860741487 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.91678659 seconds)
  done (took 8.748379175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.957033616 seconds)
  done (took 9.787232501 seconds)
done (took 164.645750672 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.920984404 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.902145463 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.903111748 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.898913665 seconds)
  done (took 29.454262785 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.941715588 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.941697269 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.944703969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.953956216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.946788507 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.943804627 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.935838218 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.93607165 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.95373055 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.946794775 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.944955074 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.944761287 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.944678348 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.936550315 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.947095544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.946392674 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.955086116 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.948223217 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.936309743 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.950218985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.916309439 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.955635359 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.946973458 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.911974975 seconds)
  done (took 48.462472661 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.111408737 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.982781022 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.064816412 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.965643239 seconds)
  done (took 9.956746371 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.96163187 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.964166112 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.976601619 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.015909559 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.038917367 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.972926887 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.941392622 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.932937231 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.919171213 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.964565428 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.040233468 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.960795399 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.048821158 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.910267962 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.098290439 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.910424854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.911569224 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.963172339 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.016224364 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.028624382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.914860066 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.962889583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.966720937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961039219 seconds)
  done (took 49.216150961 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.910631105 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.917772732 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.917682789 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.91082122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.910922272 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.911790086 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.916807607 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.912018608 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.93472454 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.91382698 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.911088239 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.912807834 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.912137353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.911046506 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.9109787 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.925987978 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.924284635 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.912412541 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.914500239 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.918602044 seconds)
  done (took 40.14443706 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.904389408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.761006999 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.256857537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.160773173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.905139522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.907736973 seconds)
  done (took 31.730117683 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.925085473 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.915338787 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.912250685 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.967681754 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.046574611 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.916943135 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912296676 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.92314189 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.955245085 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973299394 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.930566466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.94386351 seconds)
  done (took 25.158084766 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.9087474 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.915227345 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.906674104 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930381789 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.922657602 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.917953031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.920498928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.906087676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.923832935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.928832334 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919025502 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.927180049 seconds)
  done (took 44.865727124 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996084805 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.799987375 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.973136985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632536169 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382311244 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118995073 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438555123 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250821675 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.913503393 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181641567 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979751922 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156950394 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168904277 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950388578 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909280212 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.416464917 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21425058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150389167 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934385552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659836577 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034313452 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35953982 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.696582291 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041665177 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128312634 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045166339 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.173662278 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866682679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048388781 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94685771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923202165 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911684013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184199729 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289695773 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008878407 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923063725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56785503 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.633063082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907746848 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.663984417 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904693329 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.048067349 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91969208 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912416866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844275858 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35939311 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258449249 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.920711287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.624296596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913174238 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920724286 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000438342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916248412 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.729395311 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873361474 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194449996 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.914767294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921047016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479889474 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009534659 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475376726 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.856341776 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.109257545 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686626278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39326407 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.069623371 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.915245257 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915378069 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847190781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676874768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045165199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060007791 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.931459618 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568712544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227193291 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.997179997 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00117314 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215494224 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631011511 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.857304867 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141399028 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874954407 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850826596 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.800211566 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847665746 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189454659 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955149713 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.561215309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953635478 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250342278 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932628912 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932958601 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923774043 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139877904 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.798611651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9126587 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.717525893 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213996594 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936445357 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251465143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853037108 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.917168234 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169787638 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129165546 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071071169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.411631778 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080661031 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914795757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.999845174 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.764618051 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930197314 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.201390202 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97732466 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017353148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049288865 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.871113702 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223308631 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941019493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.085468728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.959937884 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18781762 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.250091462 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206114624 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980056929 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925288928 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917331287 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.671062168 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.544793514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.185200693 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.916251847 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348920184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929149067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.917965005 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852760469 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513262762 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957075541 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.032607975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14674763 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.7989856 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195430663 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853478976 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068036652 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037224205 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.137714117 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.57992802 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.009426988 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176889432 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343792747 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.092131668 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934811001 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938969692 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006597132 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939587417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.275526414 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179512494 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.920134576 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922006224 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.691357518 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999487766 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920875068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.922843035 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72085287 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211968526 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944766643 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919382652 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.811309507 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.932805608 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985157162 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925878131 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934810704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456070504 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690873772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930503001 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.556313556 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157899995 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931701038 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.676927572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108921198 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.999984765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200114136 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986051528 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.854811842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.63330289 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.620628015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921048063 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855420735 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920142003 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930437031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936531961 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.303150668 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214828463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967971275 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.740982236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.038823427 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936239935 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92963936 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920464427 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.445408143 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.028717219 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492166202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93090306 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061240513 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.935625368 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856268289 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.924617535 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934418534 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922683189 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.879742141 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97654026 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.67828193 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380913247 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177612726 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.61811259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938627149 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.698967824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.055082176 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.939423394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742541726 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945372311 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.932466933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990404025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.934304078 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.696691488 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.70654048 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488158419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243230584 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247578842 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372358272 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.24431155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305987301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266162908 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160052246 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453575634 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989019969 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266987573 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868601915 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007654723 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587455581 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279716484 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94033553 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154071904 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328204687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.799129085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091356637 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135025139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957540483 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.65985352 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947011202 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.132679007 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064039416 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.775432479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145881286 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258655098 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763200505 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.040071318 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.92243301 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.631676935 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005422787 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.63579372 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287884253 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376958542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.992245406 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429006619 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937939152 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37074351 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288723327 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.170973478 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.020840888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864075844 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936886378 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939475588 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.924850413 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.902083334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.830090983 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.207042948 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935528561 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160604989 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.126828949 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205711874 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.836076492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.93093982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928238687 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235434679 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.547143193 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157461315 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.193388658 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.490103131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931810775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859133496 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860054122 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620179641 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930488251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899980904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16003247 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.119987027 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880898595 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.249355812 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228824572 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179980092 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.944765274 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.206973981 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205391388 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665596277 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956275831 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.02743708 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.758849603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.054313824 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.195078864 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16311185 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728637444 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157585929 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.987473912 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.747131552 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.926214467 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142628783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19641084 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.973516208 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183130472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.651771683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.935022633 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302758207 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984946913 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134167784 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101501224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.123002336 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937065219 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012083591 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942586295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.941909724 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941222291 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975152325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018635561 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.070244337 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.942799882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018725522 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029896273 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.512563959 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.935564141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215717558 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299630521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267128526 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991427345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929119462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935486934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861147027 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062606839 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375745323 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204130381 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058356616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.224902678 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952330348 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.741429291 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.144102738 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232638232 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204298191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.825328353 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890010065 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029056804 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.19609648 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94417712 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.141311434 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170149024 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25415384 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400798302 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.994932233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361706123 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204963771 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302447916 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932844896 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522155941 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.934832505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695740485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.970209756 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037850905 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218860745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943266437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319361725 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952171492 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.1318952 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.446526277 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746583075 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299812548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.920086824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995187932 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216676035 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329618695 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249823964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006800637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943701683 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.654525463 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066825396 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.872349546 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.243992767 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9312221 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144803769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643236293 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946122564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225384876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248727831 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.93052435 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.905381598 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993483388 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.942954575 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160917269 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201589503 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187703417 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942396669 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937376289 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.751879861 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221947861 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995708501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868179855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936306358 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03643596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182433684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95365527 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.6233505 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645630608 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248336321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.851428791 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955249311 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272727306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375688992 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278264133 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.478723632 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179255288 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.492977404 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.712324907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296251188 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.936865023 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268562576 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306358029 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.938938086 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370557367 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034119302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.216909907 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256608744 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.952163583 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812609387 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.98361993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159941663 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604509758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879616048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934658617 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.997519486 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93361141 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063156805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949844893 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.936342953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740765858 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.74883452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431552186 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943454545 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.931869018 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.782715509 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467379982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033805675 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080973494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94543177 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.658806563 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231787473 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191085583 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381034223 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.998659858 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.941165881 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938120006 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866836702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.136306936 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.318410734 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245603721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.216945599 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.041196467 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942606749 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.158018997 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149359968 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.979531429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104470438 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245309628 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038302677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.712309621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.622813328 seconds)
  done (took 1713.97390176 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936727002 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.95041945 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.941594958 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.977689524 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954227984 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013960196 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.973736439 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985852305 seconds)
  done (took 57.60146789 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.936388465 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.158001239 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.946920936 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.93952306 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.973343908 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.937778266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.138196822 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93958242 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.957681203 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.944980286 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.936098061 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.949879296 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.261233741 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.955754618 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.933745092 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.265038213 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.953555572 seconds)
  done (took 75.99947517 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.935184171 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.289366687 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.967538876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.950940703 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.891631076 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.945128629 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.979447663 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.963082174 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.933032807 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.168937807 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.271810954 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.94329227 seconds)
  done (took 91.100121182 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.93920099 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.932429681 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.932721406 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.931243267 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.931542918 seconds)
  done (took 11.528798023 seconds)
done (took 2231.114867466 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.208695098 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.149767637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.155168652 seconds)
  done (took 6.157157794 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.076248917 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.121632132 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241420118 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.248294447 seconds)
  done (took 10.54501874 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.218929563 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.298056315 seconds)
  done (took 6.368830136 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300782102 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.954387457 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.327095647 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.927868046 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.926588287 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.923727807 seconds)
  done (took 22.637332207 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.927618769 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.93165659 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.929006102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.93379155 seconds)
  done (took 9.573751305 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908946675 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.655221278 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.907024739 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.920476084 seconds)
  done (took 21.242899786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.675371048 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.358382988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671774743 seconds)
  done (took 9.556020797 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.392977926 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784119174 seconds)
  done (took 9.027584876 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.205234442 seconds)
  done (took 4.073038319 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.973205235 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.2156842 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.490226594 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.467883908 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547832211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.795222365 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.27125564 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.178727381 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.384646085 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.404721786 seconds)
  done (took 25.598618474 seconds)
done (took 140.42261944 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.319647628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.325057625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.149513866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.284271203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.175524686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144433093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.356481721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.268210902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.784742605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.779216419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.326113496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.170391061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.298198242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.307671281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.304782912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.182489599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.172510501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.33523977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.016883392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.217942001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.361544893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.912240734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.172745073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.954831691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182666695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.097452231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.514390789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.196265492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.207738075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.568716968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.120822834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.423314365 seconds)
  done (took 174.499751523 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.734335781 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955723784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.967230908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937146421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.466793867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955852392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.951702315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.934605312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.349294565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.255999285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.952774475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.400168877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957647738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931522951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.961593584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930534922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.486404745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.806430894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.952016706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953132385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955351188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.243238813 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947059045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.291489201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.425473737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947870817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.916352542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945731874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946876539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94756818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944976998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.921967634 seconds)
  done (took 211.168238061 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894041538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92422413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927914617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.92391263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.9285558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933667905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922589718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92087683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.532664728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.57024407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.940277333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.92473467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934887118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923343746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936730767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917879525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.944409859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.942168456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93705178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935448526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936083096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.696659417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.94415528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.725357541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934629419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.932963236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.918191427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93318057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935474711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.934751008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929402137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.908257075 seconds)
  done (took 222.422096614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.115321805 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.916244436 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.916511429 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.845545664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.917214115 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.916276623 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.864058441 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.107438547 seconds)
  done (took 19.461483705 seconds)
done (took 629.42678433 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.371345746 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22743014 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.091846121 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.940304276 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.171340761 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.9719437 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.935823305 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.004745601 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.674623088 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.006898374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633561349 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.959476981 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.724791055 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.966796099 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.063750391 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.997459595 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.492447116 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.583540982 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.120377971 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.990617401 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.113138062 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90707656 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.024338364 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.691655312 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746469764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.956186249 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148946281 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.498182861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.946525027 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.102554022 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.712758783 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.347407745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.952380954 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.934389222 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.992899175 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.971428231 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316598947 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.950479722 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.05936301 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.713274837 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001510435 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.555907562 seconds)
  done (took 105.41051515 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.907117994 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.905323598 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.905513085 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.906465811 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.905863748 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.90642282 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.906420875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.905104797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.906373232 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.904770852 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.904869557 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.906531774 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.905137692 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.90630736 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.904669533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.905458045 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.906847667 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.907515848 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.905025786 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.90479705 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.906600718 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.90533225 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.921366384 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.906186276 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.906212687 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.906649732 seconds)
  done (took 51.41980053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.920670279 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.087306774 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.180684827 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.939413401 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.91936819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.923161281 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938637476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.925258539 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.922335802 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.922487801 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.015751084 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.927366892 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.940665657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182015604 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.939461701 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.922412633 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.921984714 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.921390301 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.097012732 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93814812 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.941724564 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.925776787 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.94085303 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.93670192 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.923852709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.922212983 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.92505306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.396449707 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.930437316 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.014433343 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.964255664 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944957023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350643901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.192655083 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.979038527 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929443737 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.922887241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019285731 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.926548579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.922299218 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941277768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.926746925 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181899748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.413678733 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.937069762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.923702676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406991583 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.025708434 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.962007697 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933455424 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184203079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.940343843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.924024249 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.922033772 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.958925295 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931748421 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.92230156 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250854415 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.936046792 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.94294089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.927904157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.92411889 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0981846 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.932236037 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088244035 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.932073896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.930121799 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.923848723 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184151191 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9413109 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.421365658 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.937963172 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.924111798 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.015263444 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093129357 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.435030579 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.936047081 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100379067 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.370894384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.949277569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.930870976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.384973364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.952158029 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.931372027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.927993093 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.927751305 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.92689189 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.971992468 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.942267462 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.342348695 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.431064564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268731249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.950744345 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.938940088 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.923922938 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.25090158 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.933729486 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.926396013 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.178495238 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.434146278 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.939902848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.934226474 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.404271507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.941383564 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.943657673 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.933078036 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1923438 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.943533017 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.970958293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.926370343 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.932183975 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.928517426 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.945149608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.933415103 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.926712718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.396758099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037952281 seconds)
  done (took 238.677286758 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.921389884 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.922872458 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.922164472 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.922588136 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.919616695 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.926061076 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.931852551 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.919014022 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.927203487 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.918786563 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.919469567 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.919096995 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.921822598 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.927714001 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.035530514 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.927662051 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.580495463 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.918252833 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.920628756 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.928225447 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.567725211 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.926601377 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.9214218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.92148533 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.923613665 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.918971655 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.930309764 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.031672546 seconds)
  done (took 169.223939259 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.929254272 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.045225969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.949646941 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.956566519 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.937404602 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.926086587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.951008583 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.943038403 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.932238582 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.925171423 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.926369055 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.990037225 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.938411978 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029292606 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.959990337 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.959243193 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.033101558 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.936700706 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.927437141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.926381262 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.957112424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.922555287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.989975256 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055455526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.94668763 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.047986518 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.935534481 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.931088009 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.928866845 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.047321186 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.945340692 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.989087338 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.957094593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.944959921 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048889891 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048528311 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.036756533 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.958747452 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.933136104 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.927709546 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.927883615 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.917247506 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051156259 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.948159271 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.929510973 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.038178959 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.949853508 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.931566346 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.938788961 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.928474913 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.942358682 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.946475186 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.995840375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.063156924 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.96421457 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.954224659 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.95390153 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.210513207 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.940042507 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034473638 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927483285 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.05203704 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.95210591 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.918941982 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.929953527 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.935354865 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.960044946 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.962402729 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.03739531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.938740373 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.032469617 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.965566355 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.937589379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.929723659 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.932261036 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050722882 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052437034 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.967366546 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.965945804 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961966522 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.924821812 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.932163088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.919722693 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.948881931 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.933658644 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.048454391 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052072794 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.938811795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.933219868 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.933223812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.933038936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.956905098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058800033 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.968330514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.028635128 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.000512877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.009175811 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.947693934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.943879453 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.934800814 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.995504562 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.947982684 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.942438762 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.256741424 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.003634131 seconds)
  done (took 208.996773031 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.389797576 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.986233446 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.989146881 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.240597574 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.359171241 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.79678234 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.978679095 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.982466884 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.003714477 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.169564866 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.055214219 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.001729523 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.968984214 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.954703161 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98037862 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.999926077 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.990053927 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326231794 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.104098269 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.070943412 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.963751985 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245819416 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.305059793 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.379347001 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.017307337 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.318552814 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.660047914 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1238605 seconds)
  done (took 63.223292346 seconds)
done (took 838.787650755 seconds)
SAVING RESULT...
DONE!
