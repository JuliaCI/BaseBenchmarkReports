cset: moving following pidspec: 6624
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396547322 seconds)
loading group "string"... done (took 0.585285705 seconds)
loading group "linalg"... done (took 7.280128778 seconds)
loading group "parallel"... done (took 0.163791551 seconds)
loading group "find"... done (took 1.165346786 seconds)
loading group "tuple"... done (took 1.800944044 seconds)
loading group "dates"... done (took 1.252950414 seconds)
loading group "micro"... done (took 0.222113859 seconds)
loading group "io"... done (took 1.023598231 seconds)
loading group "scalar"... done (took 38.997406121 seconds)
loading group "sparse"... done (took 12.749288923 seconds)
loading group "broadcast"... done (took 1.027747324 seconds)
loading group "union"... done (took 13.03709408 seconds)
loading group "simd"... done (took 4.911582762 seconds)
loading group "random"... done (took 9.952518736 seconds)
loading group "problem"... done (took 1.850982017 seconds)
loading group "array"... done (took 21.24034715 seconds)
loading group "misc"... done (took 1.694785699 seconds)
loading group "sort"... done (took 3.48082966 seconds)
loading group "collection"... done (took 17.374684645 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524993277 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126943452 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120314969 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121706595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153099664 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115363141 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127605328 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087791201 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876397762 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15628956 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119255128 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431204869 seconds)
done (took 5.338376273 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177822588 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084504762 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084237589 seconds)
  done (took 1.361124753 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067361825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125330393 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068722708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068896361 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068670202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067911148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068285928 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068131236 seconds)
  done (took 1.72720814 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074830554 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071151038 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067675465 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069654421 seconds)
  done (took 1.476409574 seconds)
done (took 6.013111175 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.793181975 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206055637 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18994711 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.421765656 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133256615 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165109858 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644820561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316710779 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193400085 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082662674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110791457 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.332909995 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110758805 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642793694 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075942375 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091983948 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138339002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442327499 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068698731 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083789857 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089939135 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12972967 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089810085 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075703462 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147485946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069183632 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138172305 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0815416 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067897402 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214921032 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173581173 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658012303 seconds)
  done (took 10.411586171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097349435 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098315871 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069915352 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123649421 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098054104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071655621 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072168884 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069014973 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088470505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128181549 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089749882 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102246981 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066967383 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070294022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086609372 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206142742 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082114792 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083580814 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072191001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07732786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106236429 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079606714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078673236 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079145323 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129888867 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182012705 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097310442 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098319753 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067911857 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08072339 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115684353 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125339197 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067299083 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067245361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124813622 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095892086 seconds)
  done (took 4.686938069 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.013668926 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145600087 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092990536 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136987481 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067483278 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113017728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067134131 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082248365 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210800189 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.480194413 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598135253 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112285159 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113353453 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105439585 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071834376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069590413 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066221878 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068679131 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.50434464 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096773626 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108336923 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083330319 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072179426 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070546084 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355923457 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071209912 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06597645 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069997891 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059101532 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128724274 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071620816 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960631956 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129057455 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06829709 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102569803 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169215128 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.228225613 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149279175 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070944288 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067574481 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15698104 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072584652 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067943086 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085895336 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105186585 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116769745 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067697426 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068841782 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171080553 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068727795 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084840474 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.646573723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154799555 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081349933 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068422145 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264087755 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092706275 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072976806 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068486635 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205925281 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134371186 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070414319 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069465114 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070285619 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070878346 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360849262 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067065306 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.18698993 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069422099 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079178945 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070656888 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070552856 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074484372 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073832965 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089616073 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067905998 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076283173 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067331777 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067342241 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06789079 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085067367 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.383664049 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068293383 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069355498 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066347508 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090265777 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097333168 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068195302 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066989938 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101082227 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069741604 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067433321 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108981896 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068064966 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085024666 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172124745 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114805859 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070551295 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095387529 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0700305 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067566783 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101675684 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072550927 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10223727 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082396443 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069379599 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.426784439 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067103458 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066450074 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066149552 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066399669 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06951837 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069526021 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070099308 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081483269 seconds)
  done (took 21.800479877 seconds)
done (took 39.104108204 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238439593 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083933781 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082261141 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076496979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075586078 seconds)
  done (took 1.839605551 seconds)
done (took 3.10386444 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124819269 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102336291 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065870171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099245027 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06604176 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10372192 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103173231 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083341172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102556154 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06597057 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09947977 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066029725 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066862583 seconds)
  done (took 2.437200996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085307585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086399212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071145691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085181424 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064407953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084501414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083525907 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090270847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082925049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074363296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065075146 seconds)
  done (took 2.132447016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083501188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086255786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071933907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084721265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064483295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083555528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084680345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089054848 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083577671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078089146 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066457896 seconds)
  done (took 2.13340282 seconds)
done (took 7.95909905 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080065927 seconds)
  done (took 1.329148475 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.5993955 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.102862501 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083056149 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112754807 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19118798 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119849978 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272722442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088718146 seconds)
  done (took 9.001328959 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104929882 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072178239 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073016362 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069835635 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069718277 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069911367 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069428267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072869045 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072693974 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070909102 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07307628 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071181259 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073051418 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072583973 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070932586 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071035869 seconds)
  done (took 2.494230534 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094812953 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092929867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074900413 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075748721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07361889 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072919408 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07520064 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074446329 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072052392 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07345077 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075735862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074942095 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072368267 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066668379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076434098 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076820243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072741379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075132033 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076785882 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076020695 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075860814 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065504385 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072922492 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075026421 seconds)
  done (took 3.165917333 seconds)
done (took 17.248447053 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11662934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072957107 seconds)
  done (took 1.444250257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082517078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084109037 seconds)
  done (took 1.430821762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08412173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067014973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091523786 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079440565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067064412 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067594098 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08939457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067598374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067164441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067242131 seconds)
  done (took 2.012220549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070062617 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078797417 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07198396 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082490728 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074818209 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065704946 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072949012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068867062 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078520907 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064105032 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072914945 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085237777 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072488451 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086486204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073470228 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069582903 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072503717 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068668191 seconds)
  done (took 2.598714149 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067178887 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068521905 seconds)
  done (took 1.404815943 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067852351 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06450982 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068473231 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068344592 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064889023 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064541661 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06478579 seconds)
  done (took 1.729058505 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377993644 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114729488 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319039716 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074809606 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084479776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264495376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068364602 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0725674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074410922 seconds)
  done (took 2.761384071 seconds)
done (took 14.652965741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081669339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08775304 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098337243 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37750821 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093159754 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067290124 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114299072 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194633199 seconds)
done (took 2.397049776 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215075493 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637462786 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406630219 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20641955 seconds)
  done (took 2.521852796 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347747065 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089884426 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062327276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071327969 seconds)
  done (took 1.85145778 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067184138 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071069143 seconds)
  done (took 1.416821769 seconds)
done (took 7.283144172 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067689879 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085575477 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067843925 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068116924 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.0649771 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067942802 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065353068 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065040666 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067481665 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067819555 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070223572 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067450223 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067362701 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067154057 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06520578 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064873831 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067649713 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065421986 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066046079 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066475374 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067113568 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067582684 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064938135 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066271928 seconds)
  done (took 2.93617592 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086940488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067449201 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073546189 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072534849 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070656386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073190777 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072801271 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067304696 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072648664 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069725846 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070471732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070296996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069595993 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070535331 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070232132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071006834 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072963879 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067410967 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069767572 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070708082 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072766614 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068056763 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072812093 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074588467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072670481 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074268671 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069627428 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067473769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072427962 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070506125 seconds)
  done (took 3.430496754 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071287437 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064841668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066153619 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072050828 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064391166 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065927861 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06456185 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065690694 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0654199 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064919996 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066218622 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064879921 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064811938 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065653792 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06523336 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068645458 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080445725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064908934 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066840083 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067788394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070001453 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066579453 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066726833 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067040634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066504528 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066812644 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06718785 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066532533 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067150439 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065400219 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06835331 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068392886 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064814364 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07196295 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068417957 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.178607306 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069169592 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064569796 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065741603 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064122204 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064192526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064893813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064912661 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071519351 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064426226 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066602143 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064997945 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065751512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06565292 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068897591 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0666792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067806041 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068570908 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067801421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071141849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066183615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067266054 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066882539 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067832365 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067300285 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066023271 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06668494 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069805598 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067063211 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081204065 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07182452 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06507983 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06643534 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065641942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067362377 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066662851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079120375 seconds)
  done (took 6.257530077 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091486754 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088962492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067001013 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066534516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063658052 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065039322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070671983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06583984 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066701304 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083389191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065342333 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06661252 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066327252 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068916852 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066196349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067795198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075514712 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065392822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06771591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071112795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068180875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073084336 seconds)
  done (took 2.850498489 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154718764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071584229 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106844708 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077204806 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071319455 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076943303 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071033202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070781615 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071308551 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068792813 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069018048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071653245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072626824 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070669891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070710412 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070215101 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073420385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071046323 seconds)
  done (took 2.704056229 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077841271 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067834867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08860503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068013812 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067736635 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070082407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071892852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075429588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069468334 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067574531 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075508498 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069941011 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070182587 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067132846 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069671768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067717668 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069942406 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067021183 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0748097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071513401 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071153123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075141877 seconds)
  done (took 2.86852034 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080528219 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068871508 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082663821 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070020954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062998388 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065639218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071223246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066859042 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071953206 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069618728 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067483654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065527608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070010696 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066973146 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070013414 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066745879 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068908223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069137098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070562766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064558233 seconds)
  done (took 2.686012008 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08686786 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069511614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069456943 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076210999 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069528623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068555146 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076561993 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069266343 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069159037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089677607 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068911787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069212445 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07666455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073491618 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068961095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076317961 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076934112 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076616759 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068789229 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069348285 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089399483 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069087072 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076551039 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068788727 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068939435 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069822019 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069340341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073517457 seconds)
  done (took 3.352029295 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06816807 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068177589 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064587648 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064887307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064738674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06506548 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065199716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064980269 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068713395 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064903021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067403601 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067366549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067086252 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066902752 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066943246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06732598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068473373 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066657951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066506907 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066871403 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069497299 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069390528 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068991098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066802067 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066456596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069206446 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066429451 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0667257 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069742104 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066561084 seconds)
  done (took 3.311430261 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078019933 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074695918 seconds)
  done (took 1.45510534 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064015725 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081371238 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065215407 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071779923 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071713548 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06768894 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0744702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070378131 seconds)
  done (took 1.864477889 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083188948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078792755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068640675 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081267469 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078470319 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08635664 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137552289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068100438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075159806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065322471 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081650042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066784367 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074046171 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067949157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073567755 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073610527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065098212 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073267271 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070048594 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065912625 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068313013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076706369 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070500866 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063455685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069260855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091198219 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078758944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06745784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070993277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075233636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073602642 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061293466 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067518433 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0689175 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065556688 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077239206 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08248098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071082548 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075986596 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068515727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077332374 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063269271 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073277131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075109956 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077662321 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067710061 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068189778 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063223332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065944626 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070446171 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064091761 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072047988 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062530248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074889404 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07141994 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078451643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06649062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06901434 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070913356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070962326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0746079 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069595903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070613059 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067717327 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077644402 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072604887 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076097051 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062844095 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061573616 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065526956 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077433014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090732849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07390704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068115925 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068539543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065449816 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071592434 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068665517 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073396028 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074055855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068117262 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072982487 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075054844 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068773844 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07063103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075545904 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066350224 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070712137 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065410651 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08453652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067009655 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065754806 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065707424 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078486224 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071351758 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067557631 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065936116 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075246536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06183612 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067930607 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068646917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068697609 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078284663 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071697215 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071968698 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075832683 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074908197 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069482954 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071902358 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064373519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068747057 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066651514 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074789767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060929974 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069424389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.19537651 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069897918 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077767111 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06655851 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067232155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075155992 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074864009 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066605322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065472263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071832261 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068414267 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071369599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076084194 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066927877 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062451146 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06244888 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071591029 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067826796 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07195397 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072953912 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07108768 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061986706 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065694886 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072907677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07732055 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068260641 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069301858 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074138565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070027581 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066921594 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074741148 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070264512 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067929464 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074820948 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069100902 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063391655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070993375 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070602575 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067709059 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071998977 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071749138 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070330277 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068549522 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06754873 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077694673 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070456681 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06975572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070496224 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069154359 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079717609 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070596109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062536315 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065232579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076177981 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06545277 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067164374 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067544805 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070508575 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068548771 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066185024 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06658215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070385182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079135206 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071212856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069614624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073774305 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079278259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067514555 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06992499 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067312051 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068904062 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06749558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076439328 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073434945 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072548857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070217152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064653278 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073000732 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075220495 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066899224 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065654746 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06668474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071683063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073922431 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071661224 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068209047 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065944146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068408499 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070738028 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070320325 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067639512 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067129022 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073395205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066486701 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074708029 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068491928 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077992244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071882461 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062955539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070589865 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066652581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074356679 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062856938 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066031878 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066859877 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068607221 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066581089 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070440482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061386438 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074184581 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074800995 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067493739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066608443 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066538423 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074126058 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068716662 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070233836 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070117123 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072451316 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.208398581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068778721 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071879875 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079314034 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068259724 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062211264 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074663255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066187383 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066395363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067638079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066445727 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071504149 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076126921 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074880853 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061616192 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070741378 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066628448 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067032731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06379813 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073066763 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070934632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068899941 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074608388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06857605 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068110771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071836117 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067875322 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068802682 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068878447 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071244786 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068593245 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069644993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067564539 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071475385 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067082818 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065976572 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070179837 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068892555 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068652722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073347101 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06758114 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068373818 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070570183 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068045054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069336286 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07003886 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06941496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072708549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069835468 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069203103 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071020148 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063047046 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075385633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067759414 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07501043 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068275728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065060123 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074201015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07024568 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073793862 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068866077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068291858 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069206623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067163752 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070685836 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07451573 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065653223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078856898 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075345228 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068679926 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070949906 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069094299 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069469111 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067760544 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069436886 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06944193 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068367158 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067396996 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072498791 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070543651 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068388523 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069356104 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068385075 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068160046 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068774095 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062134808 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066896103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067431304 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067886981 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077628006 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068171359 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068322845 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068705278 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070961479 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069629431 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066937755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077854678 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07712987 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068402653 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074830776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067370398 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06942601 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078396593 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062123128 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065978771 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065718036 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065845298 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074803979 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069260101 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076776203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067763631 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066814202 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064653359 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068239358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066204735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061683605 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065163271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070696401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065917533 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065977943 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067336189 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.201987758 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070012284 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077623436 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068384444 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069622826 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068694236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067058435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069319756 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069490095 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071998724 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069467584 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065508628 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065442171 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06825327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0691496 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069729868 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070750913 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069657008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074779655 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068515071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070788846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071296655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062847183 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070748103 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068664067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066692557 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067594231 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071651465 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071257056 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068894185 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076998093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06797377 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0688547 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068985399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065472049 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067825439 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06719948 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068113531 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066684836 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068734044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075477778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065681963 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070384251 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067587174 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068286206 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074784412 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069613406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071680706 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074845482 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069164955 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069750058 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076541192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071608662 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072505391 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069196076 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069602689 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073712843 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066671111 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074569483 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068115049 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068601399 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068909351 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065573188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068085728 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06807972 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066855175 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074377856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069856171 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066620838 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067114367 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065055083 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068549533 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071542915 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076006894 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07271759 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073413761 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065120927 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066084037 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069477834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066626113 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069177406 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070612642 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073146445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070057706 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068414043 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06724018 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076831505 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073616815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07164925 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065584456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071635119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068328111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069928252 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068337002 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06798842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069285139 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071908109 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070393361 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067229913 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075228422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071326461 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069260199 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069354435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068721231 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067999216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06305336 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06826949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070299159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072842135 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070031815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06769237 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077766247 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065524572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067332982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070484368 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066841344 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071679798 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062169936 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069289865 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067962506 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067619762 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061870263 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066541357 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.197286629 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07146021 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067501786 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062555973 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079023784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077641103 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071297656 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067237189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06697959 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062568794 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063076791 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067840979 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068403473 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069947134 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078230505 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067328126 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067226786 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062978573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067185595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071232961 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071384678 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064771726 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063783346 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067204629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071001464 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073252657 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066814892 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067466375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070981786 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070452665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065944441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071780242 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064778196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071318241 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08051606 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069095663 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068921568 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074466545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076392606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06904753 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062507068 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068187261 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070611152 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068768227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069567509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068841844 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082690047 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071158457 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066583767 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065956797 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070717813 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067230515 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075333897 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068912385 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068562734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072728753 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069640935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076753395 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07064139 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074895472 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070432907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070943692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067095075 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068447745 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066239995 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067006441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068220375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068122907 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071864487 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07453543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066821799 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078394823 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076243011 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069681869 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064632105 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06741358 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06709378 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062433947 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06881902 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065927563 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066009553 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065847482 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06696323 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069076207 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07346839 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068837128 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068161643 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067614928 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061976704 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070368832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070545682 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068994734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065909038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069391183 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070693418 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074770144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072811842 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06683228 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07016024 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069496856 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068898768 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062942035 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074378517 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0668344 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069818773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067014012 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068074515 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068748096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07119332 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072558022 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068512407 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069547512 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071329699 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069215323 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064952958 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064508588 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072516203 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06519103 seconds)
  done (took 43.573358569 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101972255 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063593348 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06389016 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063143035 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074421492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063731353 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062935938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063769256 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063933157 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066216242 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062694077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062814079 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071361114 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078090922 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074195044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067251279 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062982887 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064050556 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062894602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064138897 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07134193 seconds)
  done (took 2.822218779 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074634789 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078834928 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076291074 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082837887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07242526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071632576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076136575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071356709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079313163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07333302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079186803 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071727585 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073631368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073795065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073981911 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07271446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079425422 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071798941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071317118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076179127 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07109608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075818147 seconds)
  done (took 3.011718279 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067829523 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067004229 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069403644 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062764839 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066145818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063158387 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069999718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064881985 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070466773 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066460038 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066897007 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066095401 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069188399 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06171256 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067180236 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06490212 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108132483 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070103443 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067386744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067705004 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062641341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0687827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062374159 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062581064 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066066515 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070572755 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067667484 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065186781 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066871878 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066188363 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067101661 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064441237 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06860319 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067639109 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066390507 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06610764 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06619919 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067106764 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062162235 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065405209 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067650039 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062697087 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067349146 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06866795 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065008827 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064707669 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068954704 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067289438 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062122323 seconds)
  done (took 4.658467402 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079869802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110438046 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068722086 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090406998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085980142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075090191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072515208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090923978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06486535 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065856274 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082165914 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080174863 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066320252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07298735 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075259694 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067585952 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069307708 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067763653 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072501671 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067988441 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071180062 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07336435 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080200496 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078718758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070498795 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065399706 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065545198 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070644918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078447837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070490749 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070810428 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072301444 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081465049 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068591728 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06569886 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068402595 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082136077 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066716639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069536911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064509817 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068597558 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070595132 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073669457 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082606183 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066679474 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071436224 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066616733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063972848 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078862802 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068376382 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074147691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080378316 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070271472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067050283 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070645714 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080871492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066084311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064493785 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069898565 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078725007 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064580641 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070350579 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07953669 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068067879 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073945817 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080112702 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072319729 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070254699 seconds)
  done (took 6.483565457 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077146497 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096124742 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084170084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084231995 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076765696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076779937 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076039639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076479632 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076485779 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08070874 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076475841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115742011 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071901239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07836307 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076838214 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076588482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076329439 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0770355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07669641 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076266108 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076602114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084201848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075990294 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083843429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079979155 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071837358 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075987047 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077229976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084349109 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076932669 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088839692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076358093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076509066 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084092045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080168098 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077189909 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066440441 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07703418 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07677413 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07705378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071818714 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084177283 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076348791 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071530743 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076332241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075963714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083713029 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080272023 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078869684 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081356286 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076897568 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084240366 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076512737 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076642059 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083999291 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086271527 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083626648 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083944558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076775926 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083633322 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084179219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08676554 seconds)
  done (took 6.32725264 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083131009 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074863223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082813966 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06236441 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065378638 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072520323 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065147224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064926532 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075091317 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074926207 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076868843 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072459697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075134439 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077048979 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073154932 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075455027 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072240922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07277861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074374231 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071985616 seconds)
  done (took 2.854240019 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074919239 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083539972 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067737404 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071821675 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070060136 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072737235 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069613315 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070693169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06779881 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070462115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076549726 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076433988 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068563203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072745062 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076729407 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072339226 seconds)
  done (took 2.544985503 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084547194 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075070465 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080810012 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067274191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067750311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063632792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066451847 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062337618 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063197777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079004153 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0667604 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07703735 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067096016 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065632758 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06333706 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073210819 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065853606 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066420461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06916764 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082315504 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072896367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067238563 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07193059 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06705214 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069346718 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071050371 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066010321 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067302312 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063993474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066744404 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069812724 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070091752 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063701076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064968319 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065725994 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064304238 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067287304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067237797 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072401019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066583933 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065409572 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068900108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066710895 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068539047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063662341 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069394278 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06510802 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070432633 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06712893 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072777925 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06855847 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072057222 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06878046 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073725172 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069811881 seconds)
  done (took 5.177136498 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080909507 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070835689 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062478369 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065373362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072039515 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070287198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073165158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070656802 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070622985 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066756532 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070967289 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072272411 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070436572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072729635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07039408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072632267 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064803835 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070235422 seconds)
  done (took 2.662086147 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072545866 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066869667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074512328 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067636136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067779836 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070192389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064714659 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06752518 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067149576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066886233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067449605 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069281994 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065688067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069291492 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06684007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067578694 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068942256 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067572735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069116434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064935288 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071060646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067453031 seconds)
  done (took 2.889910703 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095341289 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084770517 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141633164 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079896023 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085832092 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072698111 seconds)
  done (took 1.950778466 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091818133 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10127728 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067578424 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070432659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076925589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070758121 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071078171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070690013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0795514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077245715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070862406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080098519 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079018594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078881685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076565826 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076891121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071145602 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071141534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067448035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084570181 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070930548 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079165562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071146318 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070632111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071257016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078851015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079302421 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077197431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07113843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079580058 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076664316 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071456203 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079736301 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076518718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07045409 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079241398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07124111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084422564 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07681376 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078860746 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070283317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076608708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079307646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075620022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079654232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071025786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075893638 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071453524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071125146 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086377192 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07701835 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078621779 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079248193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079504224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079199669 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086527157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077148301 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07834357 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076776948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076610245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07955657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076615274 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078243021 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077032922 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077043183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078852548 seconds)
  done (took 6.45725731 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10549423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068501511 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071126979 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076244254 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078935131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071308045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070930643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071371322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070950035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067887814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109452377 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071755948 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078684686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079584889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073013184 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071812805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071729857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078374062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067836617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086680987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071053637 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078984472 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078588618 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078322263 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076454926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076216734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071093303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071199728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070760428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071067543 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07527715 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071779824 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078972489 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067511721 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078518753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071504137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070806203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076114108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070808938 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076558093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079053077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08427416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071155916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070947071 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076777621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071137168 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071006317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067825935 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070868326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067840778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07645141 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076786101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076853775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078645296 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071499843 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07133069 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072238864 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071408439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07123267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076931455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078218139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070860437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086313803 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071237308 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071227431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079096454 seconds)
  done (took 6.363377718 seconds)
done (took 132.769365016 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188083004 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167128808 seconds)
  done (took 1.743939441 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06983863 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099902269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077416394 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130150216 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067266856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101600058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100701435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079039011 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067719572 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067372993 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067231085 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069519693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132369657 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06726148 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066848103 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069374028 seconds)
  done (took 2.735683798 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100070948 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163589666 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104552494 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066403823 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100599519 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074080424 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065766685 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076568191 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072296197 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066608318 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073874665 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071561181 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065657132 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071630116 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071836287 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073759512 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066158088 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073573611 seconds)
  done (took 2.863068383 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099444922 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092099697 seconds)
  done (took 1.595229434 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157390192 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134570194 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203655266 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352921046 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164585617 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149655756 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150579819 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143959168 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118608294 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140091144 seconds)
  done (took 3.113498009 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10052746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155032891 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269456563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118606733 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074325749 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09498703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120401784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079442838 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082168728 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081126638 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081274886 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077788913 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101161025 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074014771 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07590969 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077552297 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104575585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073718602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07601864 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076798692 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102026287 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067483469 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074739379 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074283376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078378474 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078751512 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06684484 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066780679 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076694234 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075256645 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077137278 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093219901 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078056274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106973808 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071966279 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108117739 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077719254 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074975415 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075914454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074788743 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079347722 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079231148 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073801465 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077547769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067051468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07843955 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067409038 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066885392 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078472367 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068156557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07886416 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077705262 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107371764 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06798388 seconds)
  done (took 6.085135225 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104540232 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107203259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073020148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11387044 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103597096 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073393092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103779373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097353728 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104921982 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070836463 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069478889 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071611355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083201159 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084606662 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116392876 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107522925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074937374 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072410895 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107360799 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106273836 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069348938 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098154227 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092198305 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104697164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069018094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071357146 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068908879 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071169254 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077767247 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079397938 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07111835 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081385647 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085831425 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079216618 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068540644 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070059138 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069637959 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080858288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080707028 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079889306 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078428661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068971054 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069503783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070692034 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071125354 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069471551 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079435879 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083115152 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07947908 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070670718 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071279833 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069641723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071160105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081305515 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078922995 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081742838 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081533089 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069711694 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069625311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073818135 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082477313 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080580557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080566877 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070960204 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080240141 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06987092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081872995 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086108449 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069931532 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071213845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070071416 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070590639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071171042 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078722377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079123858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071051111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070716656 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069594139 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081436031 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079429106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069405386 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078201143 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068833016 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069868 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071118257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07127216 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078393736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080819753 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071179155 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069540872 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070473567 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069938252 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068708226 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077909671 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081555045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080073843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079683199 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07133809 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078796874 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078402681 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070627806 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078953337 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068907243 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070267978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201265407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080627124 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079634248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080208639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071695536 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06950378 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079909381 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082584488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070456094 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079577587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081712076 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080008389 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069712001 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082584775 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070653742 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081934261 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070642066 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08064014 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070199182 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082052227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069842265 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0704504 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070208428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081405928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07376256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070085799 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071348489 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071103566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080454412 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084078824 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071894681 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079662117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080248847 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072409289 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080979596 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070744686 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080444856 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072040079 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071171724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067861959 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083141127 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069866993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06951576 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071034699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081917973 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069756446 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081580152 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079734797 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069882014 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082641876 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081853383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07887062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081114451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071595294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070866167 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069277268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071151308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078605996 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079801366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072148709 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069844417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078619176 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080501782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069304584 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07894461 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079153502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079195783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069608558 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070918214 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082071303 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081571359 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079566606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07953289 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079517788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069922495 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078681555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079555889 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070043442 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086322801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069596256 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084190642 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080003478 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077611997 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079641512 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081438865 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08159564 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082082827 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084576737 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070009185 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069862717 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080673631 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06973627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07071811 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078936859 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071379909 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0708291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083877502 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069573347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079903023 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068732568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078372696 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067451 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070516232 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083032654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068627933 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203129188 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08264481 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071936353 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079102915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082569672 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079170928 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070506705 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072342999 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081102787 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080766833 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070283523 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070870285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072028348 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079936851 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079694009 seconds)
  done (took 19.002953232 seconds)
done (took 38.555118724 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209585874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154411168 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174655596 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119799151 seconds)
  done (took 2.164945456 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117319035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10268973 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093280003 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066153812 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100029692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065975322 seconds)
  done (took 1.980150304 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314972819 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211892262 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189718381 seconds)
  done (took 2.148603805 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202259498 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190498663 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417802777 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263401598 seconds)
  done (took 2.622242755 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144762569 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090436378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068995246 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084897029 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134483756 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161566339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101719304 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126791309 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079870866 seconds)
  done (took 2.483880807 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150302416 seconds)
done (took 12.991858217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128005577 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.225662228 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091466649 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.250619674 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.211273299 seconds)
    (6/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208664458 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076121407 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.196004271 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094399502 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083817014 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144955775 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116265354 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079724693 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115149126 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.141532198 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075452303 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203889983 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088723087 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084696058 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113304159 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.207211049 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076741318 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112348102 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 0.131643991 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219509998 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091842431 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078283841 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.233753101 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083517987 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090356543 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072976721 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117876377 seconds)
    (33/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09287497 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.175375035 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156596896 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175104552 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07320169 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075838357 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08432642 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053207838 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160621337 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066324849 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053653123 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214354297 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063903426 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075316492 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178727056 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074668895 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093669942 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.205532635 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081708023 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0522779 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078650012 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143187336 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068844606 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085236755 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075419512 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067241806 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090116556 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078603339 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071053594 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.181666834 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149772643 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095966573 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077930179 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094275518 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07767784 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052316855 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077138444 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097197669 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111424384 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075441018 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.068012587 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207048131 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167230932 seconds)
    (76/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100519627 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090589246 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194974029 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092953746 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138871142 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091936055 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120685705 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124472062 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052565547 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095073268 seconds)
    (86/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.259523086 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076528909 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105942958 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194954077 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072230037 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075043344 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080051363 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052137744 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052061127 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075127638 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210397525 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157286023 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074327446 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112135685 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.157205805 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09234459 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077729 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155477218 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07340086 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.385485514 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147117796 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083683267 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066938451 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143928229 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071883059 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065931003 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110174503 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090577223 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 0.138236983 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075477626 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08669193 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066391037 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052129493 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072596616 seconds)
    (120/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070482464 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102257161 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073947568 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053558563 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099831399 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070420117 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.153041964 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197732522 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077238108 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075740826 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073185866 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052208951 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067183676 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064020585 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138672949 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052356156 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066621366 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074057638 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073275159 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078914718 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09006207 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2052255 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070254057 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073012906 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074849668 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192792625 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066412369 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154505966 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148245992 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053329047 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0529676 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077399707 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068957846 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125195547 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097251241 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094609348 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101392264 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066867508 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067287756 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092185544 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081952524 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163499585 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066593172 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114172084 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142308394 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074607915 seconds)
    (166/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052728702 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187589887 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055286113 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081174958 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052369114 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088587631 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074400239 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074020536 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091771957 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112276442 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067767196 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101582224 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157064391 seconds)
    (179/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080678375 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075804323 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089071867 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052872763 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067088038 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053100659 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077463894 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088579846 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067330882 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127236297 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053700398 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06653884 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.270819057 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066385822 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053734942 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068076956 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182978807 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073931117 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075513584 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078959007 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068809768 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053817331 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053293601 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053411214 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054846535 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075812395 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075150639 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080720434 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075298302 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066840655 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052399091 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077400057 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067671682 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073585287 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067178018 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072045483 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065573451 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07491993 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075396012 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052284754 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078710113 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066625017 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065208757 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066576834 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06732504 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157731524 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114346514 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140032099 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052194652 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053447394 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055212154 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052442592 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067355189 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070359698 seconds)
    (233/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102062334 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05169578 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068189806 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052103943 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052283696 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054330877 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185428566 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069586651 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076625948 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051902786 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066652306 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110439286 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053417495 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052571988 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07408477 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068751124 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052091951 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183090301 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053247783 seconds)
    (252/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074886842 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053018005 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089488529 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118467424 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052934196 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073464522 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15636931 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177621055 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051653901 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091845051 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052109877 seconds)
    (263/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061949077 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082657994 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156001047 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069063581 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066677899 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071113385 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052431057 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074357975 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065195954 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06783975 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066401665 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074483418 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089373305 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052609866 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064985781 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06639165 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063285319 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08962092 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067178539 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053016118 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064988211 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062489327 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067530897 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068586705 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074080516 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06666669 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053430669 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052517347 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061985852 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052017818 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072541315 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080048713 seconds)
    (295/309) benchmarking ("sort", Int8, false)...
    done (took 0.143122561 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089842879 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062163997 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066818233 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092552553 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186502787 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072587799 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052415201 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130572262 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073419581 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 0.132798017 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072007029 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075058874 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053672712 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053795642 seconds)
  done (took 31.392805902 seconds)
done (took 32.841273196 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085214533 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093753267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075877795 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094141721 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082620324 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077196994 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073346724 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079329831 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082020472 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083139719 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078988611 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055320815 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075352544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075789495 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075866593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092882636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080214042 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074400859 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074553222 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065566654 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07451741 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066292394 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067933557 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055199424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079018363 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07295941 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073831337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075402376 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066773433 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066685968 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070162877 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07441342 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066515814 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079138358 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073052566 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074254921 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076164471 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077633218 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068811364 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066682232 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075933781 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066588675 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074520186 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075064545 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072775269 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0721229 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07437418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07862134 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092110805 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069612806 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075907158 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076552189 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077088081 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07399758 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070784222 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074667187 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072061518 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093001764 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074816 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068576299 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075840833 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075500432 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072668669 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07406073 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074242381 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076370135 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076845445 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072942974 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07592958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073008823 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066175693 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074163802 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070541463 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067492851 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077163517 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078323395 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065735856 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072477725 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073891871 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072705946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065800998 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068813507 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068199848 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073516658 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068017817 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055432243 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070297874 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072880876 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065241516 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074352172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072856792 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074050052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069068136 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076788394 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06542169 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072408967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066763867 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066610343 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068540876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070641472 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066249655 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067920496 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076099822 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068340818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073277035 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08025356 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066747486 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073636288 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0655406 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066149732 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081054708 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075744168 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066649022 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068979974 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065271294 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074145331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065394983 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066421307 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066144082 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066144065 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072573955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066112636 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067657445 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073593066 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079669463 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065241508 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06887012 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0673071 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065216312 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071689748 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065716395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.202320009 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068681653 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063970498 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069504962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067686005 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074920555 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068295446 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074716534 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06836926 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075481317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071421847 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072896749 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072815127 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066003654 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059775197 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068589729 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068434617 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067827112 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066367866 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068594029 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066441951 seconds)
done (took 12.674219069 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067484656 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141100348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098223966 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096109651 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086658658 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068141859 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07699956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100930685 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068866257 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102346258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088124302 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086695692 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115235092 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065737 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067027539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070615012 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067817428 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082089413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100843341 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0881635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116458823 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066516766 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093674252 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090227705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089810162 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105068192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070253055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070238296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070180798 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093929692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089113522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07077743 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067334318 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099814244 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095397485 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084939687 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067462916 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084604343 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067563021 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066742617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068121422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100294151 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081953806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081935204 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071153154 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077416894 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068453455 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084906419 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090850879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080244558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08687662 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102460685 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070596741 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085448829 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066137048 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087311002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078654802 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069436192 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067313611 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074517078 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067463147 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07002317 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081943524 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081409066 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07158834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086549209 seconds)
  done (took 6.954536321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084534223 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092836894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084551181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085140566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067473633 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066926176 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06733325 seconds)
  done (took 2.085569318 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067317166 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088771516 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090183646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089780218 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08252505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088480151 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076754726 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067248073 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08894509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068798779 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088370707 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101452677 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071329194 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074850734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091872118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067065734 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091404546 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06706198 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070375764 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091228496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070087783 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096577048 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07089667 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068199148 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082203961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067622285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11452657 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072171237 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069700549 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070347956 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065426822 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108485832 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081610511 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075182318 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067677255 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082055492 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081904008 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065776525 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084382955 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07675098 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081833935 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068120334 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069139978 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065718503 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072181686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078304118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068968108 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068212283 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070906793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088078232 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069212834 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082313395 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071041643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072816292 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06915364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074431655 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078494252 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069177094 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087602419 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069368887 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085369544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084173317 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081445315 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083549592 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069971218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081492852 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081769875 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070394413 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070135791 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07134512 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084423678 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065943691 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069545641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078475315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069785548 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090920751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091234519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06957442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081086251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068399194 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068091225 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067979578 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09126737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072998293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067658127 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072072783 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071162899 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066885555 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066955599 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071874722 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066228013 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069304352 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070696001 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070633514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070704033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084959249 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070529173 seconds)
  done (took 8.965457803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070106724 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069735834 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070818927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069666531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069129566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069757775 seconds)
  done (took 1.978587119 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094660139 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070020856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081589983 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072720548 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105506009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087566729 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08806513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079257593 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08509696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07988448 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087561833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089143201 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093173773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073982041 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087441784 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072795082 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087941471 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076186637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079272893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07349328 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08702854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073228835 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073534954 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083143908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076658755 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072869437 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078971807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080605882 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079312592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079253413 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073336036 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076546603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071578047 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079287868 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088394869 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072535291 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073064151 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078097573 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072749989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076856415 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088571755 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073383395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075317459 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07787618 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079665572 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072033305 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077841077 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080110371 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087781557 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077553873 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078007482 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072151892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076457626 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078029097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071799213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078921461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077971231 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088523228 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072908335 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07213492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070132405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077685436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078580159 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07673396 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079627827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077701979 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071998238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074044986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073542442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072924565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077572994 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070489138 seconds)
  done (took 7.207089928 seconds)
done (took 28.715993131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536102993 seconds)
  done (took 2.060905074 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612694897 seconds)
  done (took 2.161397377 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.845866663 seconds)
  done (took 8.394999403 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417197126 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.537807836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.733052837 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133763691 seconds)
  done (took 3.412011999 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702929968 seconds)
  done (took 2.258149567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217537248 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.205406125 seconds)
  done (took 1.98763064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38020842 seconds)
  done (took 1.929344107 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135396462 seconds)
  done (took 2.687994568 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26075152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177109415 seconds)
  done (took 1.994246595 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477454041 seconds)
  done (took 2.030179191 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.89328295 seconds)
  done (took 6.446194405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215246113 seconds)
  done (took 1.816901336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237336016 seconds)
  done (took 1.795054785 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727009842 seconds)
  done (took 3.281390832 seconds)
done (took 43.811400045 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081525063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082587756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081928291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079525012 seconds)
  done (took 1.867612327 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078068414 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073942438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078509704 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074386697 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078081496 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074498478 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076029442 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076826258 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073884237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074169728 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074269667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073995085 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076095021 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075327715 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07296767 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076227734 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077352083 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074222229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077189346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074039895 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071892609 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076121399 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076370775 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073220152 seconds)
  done (took 3.364647061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079118434 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073822813 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076062101 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073258581 seconds)
  done (took 1.866047343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079277868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093773287 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094171665 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080010557 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093948548 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087577008 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07080753 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071286892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072059027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078880122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069172696 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097264694 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089593279 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079091619 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081258387 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067712051 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069495831 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08919477 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079467084 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079597173 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072332025 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078752938 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070284 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089852511 seconds)
  done (took 3.494814967 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088106233 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106266953 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083031502 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090532274 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09230083 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066747158 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089132952 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093489854 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127948721 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066587753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071920732 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067402559 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074894635 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06645501 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082767916 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109343886 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113561694 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070118102 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098368117 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066954746 seconds)
  done (took 3.294156833 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073713547 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071668919 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066685304 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06990327 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079318744 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074547736 seconds)
  done (took 2.009935869 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069625716 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06916467 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068962823 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068144526 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073706566 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068978079 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067206833 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069696174 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068863468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06849218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068038789 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067365234 seconds)
  done (took 2.396789419 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202459741 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069880426 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070365868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067559417 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071998978 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067477668 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082968532 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069685331 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093131023 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067988233 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068262001 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06990436 seconds)
  done (took 2.570195455 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209380752 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077491048 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241028946 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152609817 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112438346 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117078379 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113914171 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114828512 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143490707 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102004124 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17016644 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16931741 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109388345 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13882682 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090765453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102004455 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156511548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165263005 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107085941 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168146571 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147564421 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128373851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153299979 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103235676 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108176091 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123948983 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07308813 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081862616 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172211892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134957432 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146023482 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112705752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093801696 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177879723 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173309972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142453536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149292395 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086648838 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106107337 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135047589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199831157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090262551 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163213831 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252224505 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082799567 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135808128 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119853631 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120904775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106086267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091032449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146315591 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183871681 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13841881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089822392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126204635 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114788128 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11621518 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115597921 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184489876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162507576 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129774477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071948971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110179876 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155022219 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133068215 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110083025 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126412764 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092770078 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135922311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156201614 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122393306 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147328808 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118194213 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090519247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119308536 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1424412 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128845302 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162255387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125748705 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07456816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125619987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103415882 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081963895 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147238658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077003967 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1783415 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10081694 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110449391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126634039 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110191778 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110288653 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16068383 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146216163 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103680697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.211084855 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108606917 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123484709 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148059654 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088218772 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109701667 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119392326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079078757 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137433471 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076742485 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124782682 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078295034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125602276 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13363494 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078558613 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123830918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105231631 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10142622 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134491059 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161527336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089823574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083257355 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170433565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123635389 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104066149 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145866706 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157510932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102177089 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102168139 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151217224 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181054335 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090788587 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164410968 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107887465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085066506 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089156521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124127918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11262062 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12426588 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082723863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119091764 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170351653 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075815657 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096782147 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135656103 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080024033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082238623 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107396227 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10584754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096603168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100478214 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103694471 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136769128 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124829753 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105889372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123755964 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245954595 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171077773 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089152277 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104302374 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105405481 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07103758 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136199298 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158008854 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080306407 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165330603 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123544146 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118050976 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118840994 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085133658 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142011202 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080751211 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071392914 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145133217 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111011951 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111423487 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153472103 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117271726 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128409975 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121313116 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134678489 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131941218 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130816341 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106423365 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088366597 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112119043 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128205161 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074061759 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091967789 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081124811 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106040974 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097357146 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083681128 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142378842 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125474336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11055062 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112492651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097824291 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14848897 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077580634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130150658 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119495837 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096894766 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153785555 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153162513 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132630867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100156618 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138365487 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071426687 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074968994 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089264371 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121724357 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230306041 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0846119 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118317415 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149033485 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130056128 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137790276 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125368205 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122959923 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156373022 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07096749 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117978547 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14763207 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122688373 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105914423 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091555594 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100541027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143435494 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109603618 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183421309 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116685443 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124041453 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152859676 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102294777 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080575226 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103324859 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136848195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105448579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144872176 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099701708 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089677184 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109488066 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075386229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100347721 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127958266 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119355958 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134454018 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116130924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133608755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078473846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116725888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122990295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122684998 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065047028 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121168405 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162870705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095260781 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118359573 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154297745 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079903334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13497878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175626429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293041948 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087276813 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11099472 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122533949 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12945011 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120172302 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142307777 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108254247 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137005991 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112013542 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086112594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089853032 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098987692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106280402 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096093772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107424397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115768844 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096958178 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13313558 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104938478 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1110483 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117173969 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099307582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091704645 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098104832 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176853195 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120454576 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17239681 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101368682 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144602063 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164378798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075969063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079932892 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079207661 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141289989 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085196373 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131105937 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107928553 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118893561 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127080268 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144232872 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096719386 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069868951 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109503405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134415334 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125427698 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099940891 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104843554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165178542 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102255344 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080288035 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114491981 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116422794 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103931462 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172884161 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062812201 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105887477 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223738594 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083242764 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130056574 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154614554 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081302411 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105642923 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118826407 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113644989 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129143168 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102222737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111214266 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127817922 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151161988 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129819535 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091644909 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112965766 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12887638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158142666 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107168323 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097307344 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173636626 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153124236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160568862 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088387153 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115066658 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114070454 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108590143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139642895 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084428319 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164419141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083387323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137086239 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104388113 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09006071 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130118487 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10914381 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08907434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149079017 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119495443 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08402515 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078868659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118955826 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121215915 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107204134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07624155 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14038623 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074274258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13234254 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160106913 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081518852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105476445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096121509 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080142142 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259763302 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104783858 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088856944 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100066717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173308978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087577176 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1515688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134863453 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113327029 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135616084 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102737038 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640479642 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079109249 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153601574 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118263657 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175174701 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100800167 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117417335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11005386 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124704467 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146978702 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104665903 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178949587 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133299863 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117150771 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080621088 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102612603 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106064344 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088906413 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108255151 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113458801 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117286093 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093950569 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116828718 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125937719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083041751 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0974375 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15717911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117793044 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145526291 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142332007 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087166001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118024988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139894793 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081454679 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121899007 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152308051 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106758177 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100094386 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081449204 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101360539 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311068995 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075349818 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163253079 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123378562 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109841153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114303933 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114622797 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132637189 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107615103 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122365432 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094656338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109752543 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114146651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08297505 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078784032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107866122 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113588117 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099211068 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098284878 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099182569 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153236811 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073762046 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10031597 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116587963 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145466225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175671654 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088799689 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084105325 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120632641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114931133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113631203 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122391991 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079775271 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082671552 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081323365 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079162112 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110363262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11444427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116057465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111062791 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164784062 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084652612 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230909492 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096496462 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106390564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070947999 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079254737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09771149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099706397 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108512326 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111273214 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161031589 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096749012 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09128503 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092562409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07491291 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083396915 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128083989 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109064728 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267034837 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101475027 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064820809 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110129714 seconds)
  done (took 59.707491154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109022414 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084046766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095801462 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145506681 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123809101 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203178076 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154649515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189445752 seconds)
  done (took 2.778541736 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06893531 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096506575 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104376403 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084404151 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067959447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07066545 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232741694 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082642434 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067874886 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099672879 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079949965 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070806223 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427869885 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067556458 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069498042 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062941247 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068810863 seconds)
  done (took 3.491833318 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388849419 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611811653 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351506473 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073272711 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.513390086 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085386587 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.174389699 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129257651 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074321025 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525993763 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.40848149 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128048679 seconds)
  done (took 18.139824502 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076406264 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07129506 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085316924 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084786366 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073827033 seconds)
  done (took 2.066878682 seconds)
done (took 108.640461991 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083409269 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60600914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054554402 seconds)
  done (took 2.364087343 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08443415 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08708944 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086029931 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084391165 seconds)
  done (took 2.022617221 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076042892 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077635005 seconds)
  done (took 1.828628592 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234161748 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164339617 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096722458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084920795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07991906 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081341475 seconds)
  done (took 1.923651023 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07325124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076385557 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074537169 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077776625 seconds)
  done (took 1.97462676 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07799211 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053545863 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056275384 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05939835 seconds)
  done (took 1.920581671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089452861 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080474515 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079672628 seconds)
  done (took 1.923296311 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103316678 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086499181 seconds)
  done (took 1.864922598 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083149795 seconds)
  done (took 1.761612428 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0959404 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102345458 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133435548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112472805 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14075728 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11058283 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085986907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086789945 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077692757 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087532597 seconds)
  done (took 2.710771344 seconds)
done (took 22.551107845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080082702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.464005046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361637111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091176091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669205381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357436447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022673593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093820331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116296856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068726748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085676825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650741547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011753942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419435679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997840563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323874071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651210744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069482208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068932881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069232839 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007605192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068740783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068939234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069663296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650436652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373562906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069701215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324561535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069244947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071182788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356325248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069734424 seconds)
  done (took 16.53803546 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071005903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120766281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073948587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085397593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070938517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071644877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072736954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069714921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121441762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068382881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086332992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069093979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073155761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08676782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088727873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069613295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070010973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069431005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0696355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069849332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088200525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068755248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069469767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070219377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069534659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081684709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069776198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06933728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069653697 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071492258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072072793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070080701 seconds)
  done (took 4.139360583 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116697595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125364563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075734653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10521978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111793008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071139754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144345872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095001257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128191505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069141665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086311108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068984054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103644844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070220853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089377895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069460064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070217373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069444844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069604087 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070184563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088782599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069016417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069306043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069930888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069523809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084167835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069758766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069517542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069878528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070995185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072372939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069951879 seconds)
  done (took 4.374460942 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073627836 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075993261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083970892 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085184346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070500975 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073074656 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074273332 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070652755 seconds)
  done (took 2.301030188 seconds)
done (took 29.038886792 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079881724 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070818037 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073958743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083412589 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07412322 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080270964 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068871239 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076809799 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073939963 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074293479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076336299 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068697578 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072830791 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06828207 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07522603 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068829636 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080589779 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072984497 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080224757 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080425041 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071013444 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073869584 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075525982 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079987715 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08087488 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079508909 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078348069 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073605974 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069769872 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07145751 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077674783 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085160315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069689545 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080146737 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06849584 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068294196 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072875182 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069284779 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080313274 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077251305 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070597907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07753722 seconds)
  done (took 4.826072942 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089045728 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093794886 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086644693 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063113397 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068159144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066626799 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090859742 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06143719 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060329851 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089560071 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057118761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060701303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064219347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054491796 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062031776 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057597845 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063319307 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056658121 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061310634 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060910476 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092334671 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055048136 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078574343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064825115 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056786302 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062815681 seconds)
  done (took 3.483329699 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075777576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085930817 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091660863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1320631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107215289 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080585365 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079706328 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096478578 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090325017 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068274469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072105393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094336021 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090673927 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074873171 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068334783 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087352891 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085084148 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070516687 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074401573 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095177804 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087794089 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086924938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096986812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084624977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067753471 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071530979 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072378527 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082227227 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073311395 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077892395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072288755 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07261779 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070987862 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080758046 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072193879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070153277 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093346408 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078685552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079656112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070091001 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07670339 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070013403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093274931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126163592 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068140439 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074864088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072007333 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078153883 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068575709 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089131115 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080895152 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068704098 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072296551 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068121565 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068960109 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082432144 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071196665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071034305 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077966948 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074830518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093297076 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073622626 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084622414 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068265876 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076829818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067652368 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069421964 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067599163 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096983633 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070661187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112030655 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069982048 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069714342 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077747366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076517038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075866241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069175802 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085141689 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079311669 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072148744 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077924831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072240148 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071894142 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092977011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071512373 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07047034 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069400202 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074917197 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0715054 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071579296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081760845 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068396915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071452084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086230056 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068907421 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069843212 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074431242 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073347507 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068360073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080245132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073311855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070307248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078549158 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068982601 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072277624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082407268 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075843919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067744816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073031245 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074540267 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069845382 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070631162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071899375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070979252 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077282406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075495489 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073173181 seconds)
  done (took 10.833670387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166036994 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15965445 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071222511 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149279927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077916891 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080481694 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152507549 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096188597 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069313812 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069781515 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069939196 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112207523 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10744442 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117766412 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080343551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06902829 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086393327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116231391 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154865385 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148153604 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085889379 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078444044 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071240346 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07050743 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071537159 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079671152 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087292324 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079119626 seconds)
  done (took 4.512021254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081837107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106769079 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076273197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092763636 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09175295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069166856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072422568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071497041 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082942577 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079988514 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06894811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074860179 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07619772 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072567012 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070319335 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076440579 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076158044 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070486269 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072601107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074767243 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079465133 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093410223 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07308376 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068306896 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074453801 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068508709 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065039523 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086018134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069730884 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096653429 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066870008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074725492 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083883047 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069965141 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069022765 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069177741 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069311707 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068708861 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070829634 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067872594 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06774503 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058379834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068131138 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080399621 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0767297 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057938233 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073753227 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075039141 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074700598 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066831546 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072226379 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072017162 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072253349 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076499206 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073338579 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074390596 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070006746 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075725559 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078488465 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068507086 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066142065 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067641083 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073531194 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066560187 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077599778 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07388302 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067608146 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069346697 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070918676 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075832497 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069103978 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073975987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066892028 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070944726 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073547928 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071363054 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070575745 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067698862 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068925884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069830238 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056551277 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069085161 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054504598 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072107684 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067576372 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067600825 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068922217 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073915478 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081213326 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070152936 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07531432 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07056493 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06815695 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072329487 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0615043 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07189356 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084652852 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083999697 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068904345 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066873059 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0828214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073735491 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067936936 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057222564 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074173805 seconds)
  done (took 9.37512286 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091918185 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07147595 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087008626 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093295944 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089289169 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07615734 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079263463 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07098738 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084812994 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075645929 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078491054 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069409728 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079308288 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078950933 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071340611 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079251056 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07369284 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086868991 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084439405 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069415541 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077571973 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081827538 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091460606 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083676055 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082633387 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083831196 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09181645 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078978768 seconds)
  done (took 4.003785681 seconds)
done (took 38.72416655 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.781765596 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.022246506 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.77240086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.162106431 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.85455543 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.083577791 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.813944364 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.764637591 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.98225796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.803230173 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.972838605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884167038 seconds)
done (took 65.603488024 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.800220845 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.906420707 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009531257 seconds)
  done (took 5.623908528 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.970399398 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323023044 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012889564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.76516028 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.772557707 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.082751403 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576129621 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293453488 seconds)
  done (took 30.532977969 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.911934061 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.993146498 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.461020218 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490711385 seconds)
  done (took 15.614366838 seconds)
done (took 63.332839737 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779373291 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.774074612 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.780086842 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751903043 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.829754962 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.776434184 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.916203803 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.002235239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.766883272 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.754809834 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.769615388 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.200088761 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.774443511 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.92204635 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.770889157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.777876443 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.803103293 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.228083512 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.927584776 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786317985 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.781785588 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.791541271 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.771760098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.775146324 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.79275008 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.769007909 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.162032917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768366039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.576318326 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.773228105 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.814295922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.157049429 seconds)
  done (took 204.731253943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767352462 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.672854073 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.752597374 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.777171853 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.165134263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.949045335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.888419096 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.208448925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.774042185 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.785908079 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.978124532 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.768082205 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.993384209 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.764798867 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.79921773 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.854899867 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.871066003 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.985025809 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.803716989 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.949158782 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.791509053 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.803422082 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742061572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.933947991 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.802682898 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.779460341 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.791347118 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800864039 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.961408187 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.856206784 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81505887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.797056039 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.979189385 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.644886496 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.793691136 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.78788657 seconds)
  done (took 169.29845872 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.183280813 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.771164514 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770539675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770366703 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.776832082 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.771082832 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891383301 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898128506 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.364914053 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.436171606 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823111331 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577916026 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.771900727 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.771726731 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83815905 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.785289447 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.771998923 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.772415592 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.786910228 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.798882013 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774558971 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772258335 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896120108 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.783864429 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.814204654 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782200038 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.771812116 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776910473 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.142756364 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.772347146 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777104562 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.013608918 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.773284325 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.772006187 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620070771 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.998798166 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.857219846 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7740107 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778839181 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.773477419 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.990772972 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.774294069 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.773260118 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.775558354 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908641386 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.775463617 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.894767866 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77635156 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252902104 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.775162664 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773289435 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.471488721 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.372096604 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.774991246 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.772447584 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.775620358 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.772996549 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773042508 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.779408956 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.483272471 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.84842865 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.775948707 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.777881003 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779425429 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.773715049 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.965612006 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775996426 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.778422889 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.831714526 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.020356329 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895943734 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.777639231 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839688364 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867301894 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.77469836 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.773421019 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.772783986 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.773825748 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.854417564 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.77318254 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.899141265 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781644815 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.776115246 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.82756485 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.843694163 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.774633128 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613547391 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.779052097 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.775031311 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.045503396 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839538633 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.774920788 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.775308712 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.775466399 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.903006204 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89820053 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500953473 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.777851479 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.65514267 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.777767637 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.775362125 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.918439144 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777391023 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.916880232 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.779294194 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.857043068 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78080939 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.776518825 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.774922008 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.775150291 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.775968763 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809171039 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.777621657 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.835491272 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.148206424 seconds)
  done (took 402.446698085 seconds)
done (took 780.421494782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.472760062 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.425008773 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537647743 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.446194887 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.421111819 seconds)
  done (took 14.017416846 seconds)
done (took 15.733429431 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.864430478 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.871227993 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801627352 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867376194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79840603 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868127228 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.852598531 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804897321 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835655309 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.803169619 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837850223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803391161 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788844362 seconds)
  done (took 25.512659371 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.003455107 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008395153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848955849 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006421277 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824384593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003311734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.939592247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.92538206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933032972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794655638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790862815 seconds)
  done (took 22.795586557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010822767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.016168832 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854814568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024208664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829309879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.017200187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940792731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930218257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932141483 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792893536 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791056233 seconds)
  done (took 22.855971234 seconds)
done (took 72.879514672 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.787851848 seconds)
  done (took 3.505085626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.814533154 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.967088054 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.794964163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790838125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787862857 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.788677635 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.791356583 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.787597277 seconds)
  done (took 16.240963028 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.78742868 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787500068 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.785690442 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784340774 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784376125 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784485771 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.783863132 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.787734705 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.78823924 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.783823089 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.786245706 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.784809239 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.786796037 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78698837 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.783762188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.786090506 seconds)
  done (took 30.290714821 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786709865 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785750693 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.784755717 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.785599845 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.784078824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.786183103 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.78620575 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.784580386 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78485622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783783863 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786732361 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.784801318 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.786008332 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.784843719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.785330857 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.786123404 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785163462 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.785369546 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790092762 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.785803536 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.785813682 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.784864852 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.786322844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.786865435 seconds)
  done (took 44.578177401 seconds)
done (took 96.33213751 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.70031478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.408535617 seconds)
  done (took 8.828229261 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.789431171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.788900736 seconds)
  done (took 5.340220612 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.789341842 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.79008554 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.789420162 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.789368415 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.789226747 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.790979177 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.789824895 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.791033841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.789006055 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.78946889 seconds)
  done (took 19.617733876 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.790035733 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.790655708 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.787119736 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.789348567 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790041581 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.785805492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.789347602 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.79015951 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.790006247 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.788510543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.789648908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.788071553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.790854102 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.787370392 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.790540592 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.787515533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.788114656 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.788499739 seconds)
  done (took 33.921991722 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.790743977 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791826896 seconds)
  done (took 5.304857701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.787011881 seconds)
    (2/7) benchmarking "second"...
    done (took 1.787364106 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790426889 seconds)
    (4/7) benchmarking "year"...
    done (took 1.787845356 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.787703649 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788284966 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.787986378 seconds)
  done (took 14.238027042 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.791582608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.948797802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021872552 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.440716958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.793069951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.794299073 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.748052665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.794687746 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.796123046 seconds)
  done (took 19.851454058 seconds)
done (took 108.823702403 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.634609638 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.7866287 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.081750654 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.846489201 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.839670602 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.127290613 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.807656916 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.089813567 seconds)
done (took 42.937760201 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.858723753 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.322264652 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.361724893 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.19725782 seconds)
  done (took 12.604380263 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.771094323 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.329482559 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.829464231 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.364937338 seconds)
  done (took 20.038122881 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156113313 seconds)
    (2/2) benchmarking "read"...
    done (took 2.140822737 seconds)
  done (took 6.025125655 seconds)
done (took 47.25153621 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793380973 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.790089234 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.791790666 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.793228796 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.789035414 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.792322757 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.789376278 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.790235668 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.792550361 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.793036221 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.792562051 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.793339346 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.793903837 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793630481 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791843013 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790541066 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794763558 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790323266 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790759668 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791689627 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790895729 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794183985 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79116088 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.79215141 seconds)
  done (took 44.730884758 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.793523797 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791527532 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.794380658 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.794019239 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.791327504 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.794042621 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.793871377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.791983679 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.79501743 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.793996417 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792490294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.792789565 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.795303309 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.792720217 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794687644 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.792729317 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.794099269 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791567705 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794483257 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.792324406 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.79519897 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791832621 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.792258275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794410645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.791855464 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792831113 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.794481526 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.792862053 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795164243 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.791772876 seconds)
  done (took 55.525280591 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800144738 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.803768081 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.794854686 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.795862869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.795759222 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.796311751 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.796512223 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.795890773 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.796186884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.796304792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.79633375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.795390599 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.795998955 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.795207777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.796091055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796071091 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.79590387 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.796549398 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.795679269 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.796629971 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.796717451 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.797204972 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.797289655 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797125651 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.79655363 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.796793534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.79653993 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.796055924 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.79660801 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.796381963 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.796028752 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.79714521 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.797845862 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.797189698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.796748129 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.795776337 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.801246461 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.805048965 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794807387 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.795998898 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.795374529 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.794611388 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.796117622 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.796825062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.795964552 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.796811303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796276542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.797165714 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.797158475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.795697962 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797111414 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.796909228 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.795793685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.796634063 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.797433162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.796050952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.796044958 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.797053461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.796622532 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796566425 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.79604707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.79614256 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.796425861 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796241743 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.797226868 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795557818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.797090876 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.796446521 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795175843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.795676217 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.796949084 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.797521367 seconds)
  done (took 131.090137904 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.796348889 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794230754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793547082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795031509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79069243 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793613895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.79187739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793519823 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791176255 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794235995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793429228 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791488078 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791458435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794314842 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793512752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.789497133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792013454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789535606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.792286986 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793235027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794034348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788892429 seconds)
  done (took 41.166273197 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7912702 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791707331 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.789333572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789039983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786074529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788728331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787766585 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788277146 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7890526 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785081161 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786320185 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787945422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785967217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786532834 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78587284 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786462988 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788087952 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78626577 seconds)
  done (took 33.901956351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78707029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.786473481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.789806891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786669707 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786760069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789164006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786550286 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789675156 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.789213632 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.788035051 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.789308039 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790865128 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.789644284 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786494433 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788727183 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786291078 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.789992622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786735748 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789881949 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786920743 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78736625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789712056 seconds)
  done (took 41.060640521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789806668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788889115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787623354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.788109899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787785206 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79029514 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.789559347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78750331 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.790118334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.790424718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787613847 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.792979032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.787648083 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787883452 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.788691637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787385635 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79138652 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788615919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790720917 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787882929 seconds)
  done (took 37.500983789 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79301555 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792946961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791739711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791906197 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793179208 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792972678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792824823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793891404 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791505543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792751166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791742401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792437851 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793176303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.791414284 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792051809 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791871169 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79231669 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791881362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793647393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792348294 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793184403 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792556493 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793598285 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794605233 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793276383 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793365889 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792750273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79422434 seconds)
  done (took 51.918933132 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793051305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791132861 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.788303461 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.788930795 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.789210636 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.789739323 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.79134874 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788929364 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79226893 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79023284 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.79268536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.791126243 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787254523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.787502228 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788206979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787612429 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787655166 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782718912 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780212032 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780078238 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.782510707 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784045314 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785117003 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781462492 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781721857 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.783734218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781198498 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782539538 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787250659 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781835718 seconds)
  done (took 55.322422207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802856516 seconds)
    (2/2) benchmarking "in"...
    done (took 1.803283721 seconds)
  done (took 5.320231763 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781370346 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783591725 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.782563327 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781159415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781061433 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.78376759 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783351669 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780777587 seconds)
  done (took 15.972619453 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.782814615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.784009565 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.785077148 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783584915 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784691273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.783190338 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788027375 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784114278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.785440184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.784671608 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.790896979 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.791113391 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.785801912 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78464549 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.783013567 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785687314 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.784251778 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.785063751 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785087753 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.78457826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785807181 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786247315 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785583294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.780793906 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.786306873 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.792669067 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.787694904 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.784730337 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783457963 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788678163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.784172024 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.782188231 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.78598409 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.785193542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784575362 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786440626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793659779 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784188927 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.78973692 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785195937 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784725832 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783036233 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.785050243 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.785095403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785284215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.785617464 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.784128269 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781174086 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.783241336 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78671285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.788598554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783282495 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.782366783 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787051275 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.784413361 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788518559 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.78445083 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785508976 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.792228021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.791587362 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795110104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789933229 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785127184 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.783941045 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793446414 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.804862065 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787649791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.779465906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.779061506 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.784445889 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.788864387 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794032576 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.791095495 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.784394462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783508858 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.782565045 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78094003 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781297994 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787075735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783929452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.783614707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782117368 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791156761 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801867827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.780409425 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782756535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.782853198 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.782433879 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781161235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789886487 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.782261119 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.781202479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781185862 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780172359 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782138822 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.782330867 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.781109271 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781806143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.778145863 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.781693853 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782019771 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783486783 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790637416 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783885985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782236753 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.787352972 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.78170123 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781076583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.787205913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.782085171 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782528533 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.78153452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.786783682 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778690242 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785195876 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.789448873 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.783369108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.783537176 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.782680922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.782713397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79202876 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80527424 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.781384024 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.780725644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.786267064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793420196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782049087 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784019917 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.78094627 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779046025 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.778462788 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.784294446 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781106302 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781058771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782388453 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782692579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.77936244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781444044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.781765775 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782030555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.780962301 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.780950554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.782641824 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783517143 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.78223088 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783565993 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.786312171 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.780393838 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.782627011 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.780985037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.777490994 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780558708 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.781584418 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.782863415 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.780742786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781797108 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.779398737 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781392344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779693246 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.781153398 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780418249 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.77987001 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782662692 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.781875394 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.784720764 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.779041179 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.776548552 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.779760042 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.7803195 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.780055197 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782517799 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.779225727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.782302335 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.787746012 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.780975641 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.780851961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78302391 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780292147 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780885313 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781506487 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.782108338 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.788260649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.780386297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.785552459 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.780934689 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781146226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.780717577 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.780747688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.779229265 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780387638 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.782551567 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.787243073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794403471 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786890942 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.781075667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.784228926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.781266746 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.784326088 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.784340557 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.780805745 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.781055085 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780669511 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779087009 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781957958 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.782364018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.781270325 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.780624032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.7802849 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.781105948 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.783276746 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780572029 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.780401064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781584677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.778058893 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78112036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.782620631 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.779231281 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.77852057 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.77979023 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.779642217 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.781709719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.784053735 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.785757929 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.778068297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78135522 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781579471 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.781952549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.779556111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.780340508 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782169362 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.780007938 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786136288 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.782087103 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.782156065 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787793869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.780581382 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.780552929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.784970418 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.782722618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.778133944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.783268879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.786567899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782293275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.783907631 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.78241795 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.781776913 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7811727 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.786486763 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.778888733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.780787415 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.780857857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.783571897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.778195861 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.782477251 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.782923277 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.782454331 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783256276 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781997683 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.780246094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782227862 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.784141293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.784656108 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.784411647 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786220785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.791427679 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789634805 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.783359327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.784886733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.786241794 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.786617583 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.782489243 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.783090436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.781451518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792276099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.78781067 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78677292 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.784094261 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.781769626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786225519 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.782640326 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.784471405 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781682776 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783505072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.782114436 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.782790221 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.779350107 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782830628 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.782596732 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785844047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784160729 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786238705 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.784495724 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.781569798 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.785849612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783793916 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.783237428 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.783154083 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.783504673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.785857554 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787339029 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782639509 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.782640576 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788919496 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782234265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.78535674 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.783792038 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.783812434 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.783446362 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.785003739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.784789859 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.786756957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.790229074 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.785277338 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790653626 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.784434961 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791238062 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.785644522 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786607406 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.790999233 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.782273062 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78301274 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.785213522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.784946309 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791267881 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.785381676 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783896013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.788013663 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786799929 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.785434609 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.784090627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.785412908 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785307684 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.786150262 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792502172 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.785596259 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.787586256 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786827185 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.781941922 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.786185633 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.785247271 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.783624386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78879393 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.786481225 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785523886 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.785068406 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.785027087 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.785178241 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.786843611 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.786836675 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.784821741 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.786110402 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792611992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786201712 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790837143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786726376 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.794601439 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787744968 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792524044 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.787359434 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.785998962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.788372012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.786947222 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.78918875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.786134581 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.787666487 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.788168973 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.788239731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79029093 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.787856646 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.788533485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.78711626 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.787376166 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.787657108 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794466253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806467768 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.787299209 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790112064 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.784715024 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787241455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.791688956 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.788247929 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.786346493 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.789049077 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796478635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793499688 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.786420814 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.78783972 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787363955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789192606 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.789809308 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.789022297 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789222228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.787406651 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.78844859 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.790225869 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791633699 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.788013658 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.788948389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788749651 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.790417963 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.797468726 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.789241847 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789289311 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789346492 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.788483016 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.78891042 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.788746393 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.78988889 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78949405 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788787421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.789692043 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794949182 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.793198415 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.791853586 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.78875343 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.789916647 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.789316817 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.79089109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790063578 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.790447522 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791300283 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.789188096 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.7918989 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.789928326 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.788904516 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.789139501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.790265727 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790645485 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792694561 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.794930141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789355991 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.786600614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.789128218 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790602492 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.788947251 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.790148406 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796623855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792097218 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.797639988 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796844895 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794267726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790815441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792676108 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.796181593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.790802826 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79113976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.791531794 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.791676619 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.790425045 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.793021112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792284054 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.796952374 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.791227301 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.7919654 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79739814 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.793793373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79372288 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.793620691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.793455133 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.792636271 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788127288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.7921203 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79049529 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797837414 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.79248966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793238107 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79276372 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.791844806 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.791521113 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794811428 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791230838 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.792651717 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.790443155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79237447 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793459779 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792722806 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.789719499 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791974977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.792712252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.794781069 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79747935 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.788872379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79324501 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.793374248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.793300393 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79448736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793660235 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.789097578 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.789185497 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.792898402 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794117295 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.793752656 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.795708957 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792164458 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.792880052 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.795151683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796392341 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797317404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.802599904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.802333383 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.79414924 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.795602928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.794790535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.796389266 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792998748 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792993591 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792056518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.793285022 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.794145571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794201549 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.79352264 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795951011 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80935292 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.797100926 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796839756 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.794911554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798687633 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.795271636 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79111536 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.795803816 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.796581446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.79609833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.801932024 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795760482 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80111715 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795539 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.796073225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.796734745 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.798824913 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.80171281 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.798213695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79544947 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.795063425 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.799144947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.80957738 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794645363 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802721167 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81894346 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.79481388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.797834472 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.796617766 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795089551 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.795765544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.796985236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795934479 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.796756911 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79492646 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.795837171 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.795459495 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800266462 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.798603318 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.795781786 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.796342873 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.795365087 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.796736927 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.792813433 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.798775601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.795800046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.796709882 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.79729681 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.797254441 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.79726529 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806822131 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.804439706 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.796886998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.79850318 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.793905421 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.800017308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.798643403 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80530202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.801540118 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.796784507 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.797092889 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.798590805 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798109336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794752114 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.79719545 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.796512484 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797913079 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.793830955 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.807593792 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804769814 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.800794043 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796497938 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79885536 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.796873701 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797986625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798909819 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798404326 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.80052062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796968899 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801913227 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.797692715 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.797494384 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.800696109 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.803094159 seconds)
  done (took 1067.436263142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794979408 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794723903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.794942938 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795500612 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795616708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794699861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794989474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794891417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.7959861 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795854318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795384981 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79643722 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.794853014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796817727 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795830676 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795639941 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79550733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795432833 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796202584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79587325 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797888045 seconds)
  done (took 39.435747821 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.798694569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796116657 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796303929 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79845764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796054036 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798501954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797417046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799064506 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79901713 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797145095 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.799877079 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799534475 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.796348941 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.797940137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79641629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801683569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800897764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797261786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80024304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797546699 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801341827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.798089526 seconds)
  done (took 41.292296406 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.802459972 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.801502035 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800909842 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.798186563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.800622409 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.797557402 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.801497701 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.801273406 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.800438093 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800973084 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799275331 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.801653389 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.804975628 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.803075786 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.804194259 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.801286386 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949197682 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.802005086 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801234752 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801784982 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.799006714 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.80578702 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.797148734 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.797889753 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.799295383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.804015734 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801595795 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.802149526 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.801651915 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.803386491 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.805402962 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801242699 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.801535358 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.803689799 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.801143772 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.801788802 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.805066911 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.802892224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.799059581 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.801965517 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.809941703 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.817804567 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.804161345 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.808394769 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.802776574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.803017749 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.804524483 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.809985113 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.800042676 seconds)
  done (took 90.202498925 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803251735 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.802173806 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799761994 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.803530248 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.803832759 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.802614902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.803492603 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802252255 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.800769415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.798557995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803619201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.799415912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798555436 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801927341 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.802312429 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.799480144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800044682 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799236506 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.799220758 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800826188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.801627876 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.802902558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.802513419 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.799796366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801957995 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.800521684 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.800717536 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.80173784 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800817697 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.800852742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.80260185 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803132158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.803801273 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.802743977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801235673 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.803770566 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.805165391 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.801005319 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804196769 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.801151942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.805112499 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.804844317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.805485968 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.804020364 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802550953 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.802128461 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.801220266 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.801982884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.801377767 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.804828089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805008795 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.801360222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804852013 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.802474866 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803891099 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.80507446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.802432719 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.80018023 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.806667357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802881411 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.801536375 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805219839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.803183438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.804728487 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.804690854 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.802523553 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.802392219 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804799103 seconds)
  done (took 124.299213135 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806671668 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.805626295 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806806149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806518936 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806572427 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.80552756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808552131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.80629719 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.805817392 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8066419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806664289 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.805820948 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.806479156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805933305 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807814766 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808634072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.809270979 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810967554 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810175577 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809743707 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.8103139 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.811578391 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810920711 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.808660199 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807776649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807430718 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806636856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806618395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808024192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806722414 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808001187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.808992062 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807581328 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808694083 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.808599907 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.807996395 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808408546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808136939 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.809005462 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.809159989 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808549608 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808207412 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808966219 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.808456338 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810337112 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.811923467 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808530404 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.809060374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.808685893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808561545 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.810634492 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808332133 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80904917 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808237007 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80812611 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.807515544 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809739045 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809171323 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809183573 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809159848 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809357564 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.809659211 seconds)
  done (took 113.851774672 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807027369 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808760999 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.805550913 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.805425495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809533519 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805407087 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80773642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.809138168 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808324686 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.809472993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808411993 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805976176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808218346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808879629 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80636118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80790142 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806551422 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807486363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810029581 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806229359 seconds)
  done (took 37.890498222 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.80677971 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.809019975 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.807444054 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807072816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.810177358 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807573204 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.810451633 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810627297 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807704437 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810735223 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8108076 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811925463 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807989132 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808046928 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81045075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.807080475 seconds)
  done (took 30.682861616 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.808374304 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.809692217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.813057574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.811647252 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807836066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.808627079 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.810747428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.807986814 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.808136913 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.810172088 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.811649052 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.810262532 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.810615564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.812265313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.808052685 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810223943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.809550146 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.807736513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.810842278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.811055759 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.808961391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.808679652 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.811222265 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.811412192 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.809003486 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.808912767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.809457284 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.809432432 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.809683019 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.811726094 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.809841331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.809226303 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.809818944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.810102695 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.812252681 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.809311658 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.811716566 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.812513924 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.812241166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.811815622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.810887877 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.809836207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.812509383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.813063257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.809250091 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.812865231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.810815908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.811554013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.809571117 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.811638653 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.812936627 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.814249037 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.813037686 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.813396828 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.815124794 seconds)
  done (took 101.329316239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813800405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814122703 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810745272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813405152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.81482397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.809474475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.813042936 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810791169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814884551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.816790611 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815048671 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816739229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813308376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816358716 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814677516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816830233 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811036713 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.810894762 seconds)
  done (took 34.388839602 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.81051391 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811082987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.81395911 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.812163876 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.811172474 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814303239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810229225 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.813895555 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815058188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811540469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81116074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814293025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814415529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.814675771 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813429846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811437411 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.814257526 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814558711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.814242189 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811251518 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815121971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814798187 seconds)
  done (took 41.630279982 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.813461494 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.815827202 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.831394442 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.834195079 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.837780448 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.846539855 seconds)
  done (took 12.723211213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812842712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815055568 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812672483 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815976385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81586268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813998586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812634051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813576698 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816140908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812475997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813251899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815227146 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815804589 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813548962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815657143 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816435222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813445439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813253458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813829322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815820072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813721507 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817047932 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814147929 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814620728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813078507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816006229 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81648278 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815089618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81313293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816801679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817131773 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813582266 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817104931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815088027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81690964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817922342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813966871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816932642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818555629 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815008203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81819233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818218285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819363397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816763157 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818015293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815838551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815570851 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815622842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814925765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818730845 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817477129 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815282882 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817928954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817635171 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817687117 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817681006 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815052627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815500631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818537855 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815642708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817440338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817710615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815956003 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817415501 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818353347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815821389 seconds)
  done (took 121.589806014 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816302441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815916373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815626665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817258658 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816744874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816550079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816997185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816326777 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81644449 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819490338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821362885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819301661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818431492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818014677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818740491 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819139256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81851621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818741471 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819154639 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821837919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820557622 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81838802 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819312281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8194169 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81969484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821100702 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819640553 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819004496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81870368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819318785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819420455 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819540655 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818626045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818870653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819220246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819952608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819128988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820957465 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820472568 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822223314 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820242931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822715381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821485966 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820317575 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820326389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820061973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821386457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820204652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821095569 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820216757 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820562255 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821223206 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821321147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821532522 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82124569 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820504932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820600042 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820614295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820150474 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823897035 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820562401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82068972 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82371015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821176276 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822249685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82084019 seconds)
  done (took 121.853206109 seconds)
done (took 2493.840472937 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.882465417 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.831786747 seconds)
  done (took 15.466351668 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984207362 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935766513 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821528634 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.847343816 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.821484873 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.839741798 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.838137733 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.821906591 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822093351 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.822152494 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.822107739 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.009581402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.816967433 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.822549429 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821764234 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.916153506 seconds)
  done (took 51.520778486 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.824880274 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.827033482 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836086815 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.828897759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.825975141 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.838084856 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.859518611 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.828875241 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.859249823 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.836875808 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.893756726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834277189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.825786817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874642763 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.838559682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840017064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.920447358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.89706742 seconds)
  done (took 35.043248513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901000004 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.828476985 seconds)
  done (took 10.488794703 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.852681265 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.847844924 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841848645 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.821875034 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.847177203 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.84765326 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826151702 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.828303279 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.825737565 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.864883187 seconds)
  done (took 70.180969441 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.83158882 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.826298324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.826492297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.824801266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.818395266 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822051787 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.825704104 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.820919263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.485170607 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.859634111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831534297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.831336489 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.826390944 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.82706499 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.824679367 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.850214601 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.947930261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.824541249 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.824128968 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831712815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.827122505 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.898825917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.838803113 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.826747479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.854509269 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.486238896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.833562684 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.832092957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.948695105 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.82451473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.827296367 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827802066 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.829869029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.199161912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.101157591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.826095162 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.839480567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.834840843 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.825863878 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955714696 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.828849081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.833151555 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.741080138 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.084268987 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.93410331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871487233 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.169854844 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.842049988 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.828380705 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.858913936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.829914141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.828728572 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.841126348 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.344253353 seconds)
  done (took 130.195346408 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824283416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.088992146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978138145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822828307 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112306829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028403615 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824134577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873358097 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823711696 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052935326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042297654 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932121902 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823967107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.823893814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.823126642 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82230605 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.984129828 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896669391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825266691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.822389706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855161765 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066686888 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.950153672 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.826814181 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.846112706 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035402166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949817266 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931469913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.28908221 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.822276205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890650691 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.824544368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.824443716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823219059 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981284113 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921531521 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912318389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.825562398 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823023314 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825123199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.500363564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020787058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922183323 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.966766091 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075306098 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02854897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.611654518 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.822897889 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.564138959 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985905458 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059020201 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.054641639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.948771391 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.826134334 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.084846935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823997518 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823396012 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060317851 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066715181 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926929836 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826917327 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.824722977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823682893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07212989 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.826108403 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920172368 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82846265 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825976505 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922031001 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928549047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.071789814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038443963 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859087018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.121923261 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.298015266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073300415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894546252 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05728021 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8277392 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824410608 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911155908 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.673737973 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02474973 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075214354 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079081946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864291854 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.549274264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.825833152 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.05395901 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.049317223 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080317072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065792667 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.978338274 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.149747908 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.826441772 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.829508239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066892819 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964672441 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.828137609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.18759747 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061801256 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.398393725 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859236468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137437113 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960137705 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.827808558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.470103714 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826834872 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.055248916 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869452037 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.82797591 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828159334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.04791056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.806414085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828935308 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.520997543 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89176739 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830582316 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061739896 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830382981 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092564496 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828986908 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067406372 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.753356843 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862910673 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.000329246 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.068603999 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.829824262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.083362977 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073687404 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945887517 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100603338 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.748935778 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830166316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118669095 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83035046 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.827714609 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001195549 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830168917 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.063031965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83133182 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11731319 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855302483 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985864042 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831895929 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087058331 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86486081 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882412429 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830904038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.962576828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828605846 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708687109 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983880616 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832882555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829505058 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.353591787 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.830799504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987371834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062260823 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853677747 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903844669 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.501174011 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82874875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917034556 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857570927 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.173730939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830481534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.046183862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.832513314 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.35707757 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.829092972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073754383 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.064422526 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830405846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829358253 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.73689828 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.829847231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829152832 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992223883 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.641454079 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830156178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033812887 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833339164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963276843 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833229709 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.912698277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.184399936 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829948327 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.830465548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.829638202 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.832017059 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831062248 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041056512 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862315692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.35991303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972058721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103144839 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.150654464 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.082593614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.878591494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835737654 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078474835 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832222769 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.89737532 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.833425583 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855605854 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067145831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832883169 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044037231 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113097197 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.762991685 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882779509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.833422043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83377215 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.750313443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985029933 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924464293 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833338726 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.832247261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950984141 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958590485 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048691822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.833247656 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.072058054 seconds)
  done (took 893.752729659 seconds)
done (took 1208.400685696 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.831734603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835013951 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.81966191 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.834405078 seconds)
  done (took 29.089057161 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.840561783 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.836110873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.839896712 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.837164124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.841084399 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.837664158 seconds)
  done (took 12.797509687 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858174482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834778817 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.834826251 seconds)
  done (took 21.295508465 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905800006 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.222316579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.950100703 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.25921176 seconds)
  done (took 10.104343007 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.84113128 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.839040604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.839823742 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841532494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.841969336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.842500816 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.840239383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.8407167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.842583045 seconds)
  done (took 18.338586425 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.185765037 seconds)
done (took 97.579232084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.077255949 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.131590356 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.900303799 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.40391054 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.939671724 seconds)
    (6/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.208165287 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.157649224 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.834831717 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.835270093 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.095074946 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.836434751 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.836344724 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.993884761 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.473832979 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.994848447 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861591857 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.305885247 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.88925621 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050855341 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037567509 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.177457684 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.838816081 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.786775562 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 5.629722638 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.293415605 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.128855859 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.848065119 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.912050684 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.300396775 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.726227842 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.979894865 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.889204509 seconds)
    (33/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.918328004 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.303321897 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.06732934 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.937110872 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.939461969 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.834332949 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.765810654 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.319953684 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.825973998 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.529288253 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.313774134 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.1937455 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.027808826 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.950982025 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.836097725 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.090192837 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.450996763 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.366693565 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.033090649 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.179124808 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.928451136 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.83650327 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.898118088 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103059129 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.924544943 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.836193742 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.867542308 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.839057272 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.006299122 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.822711918 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.973589855 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.836149417 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.935472323 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619414088 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.949499242 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.82169315 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.863278803 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.819435945 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31439427 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.927763727 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.556393651 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.825241381 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.560012536 seconds)
    (76/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.969270948 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.222575269 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.223468741 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635797735 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.842628959 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.017410521 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.843533047 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.824666385 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.981455437 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.055607944 seconds)
    (86/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.097370493 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.869458523 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.400615623 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.832105693 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.00788124 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.877409825 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.838446489 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.062869341 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.022045763 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.867863501 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.137139436 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.866553004 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.044717102 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.092188696 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.828402766 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.855700506 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.841533227 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.534185302 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.87113859 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021804372 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.843442215 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.679102656 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.219107319 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963992995 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.857908312 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.003173051 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.828474203 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.392806341 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 2.292326076 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.871458038 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103001683 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151059819 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17743995 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.088672044 seconds)
    (120/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.980086574 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994788219 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.105501482 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.834174274 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.610650396 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.917423131 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.8353817 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.434959083 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.942404713 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.931177644 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.951512426 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.908936202 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855472014 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.08326767 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.855486585 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955187472 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097852922 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.880560401 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.958999449 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.959329182 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.867751994 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.835622177 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.928501347 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.625060798 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.869808724 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.783502635 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.106275916 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.041982934 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858274314 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.838656044 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.328384504 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.877250248 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.937394112 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.969625231 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.83677406 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.220336264 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.215095685 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.857704276 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.179712107 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.009096892 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.387050933 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.045568579 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.076356659 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.929922709 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870161901 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.043560353 seconds)
    (166/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.997043941 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 6.857617377 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191778551 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.773848351 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.281914818 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.800856312 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887721192 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.878081233 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541956847 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.152797746 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.945073455 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.925465038 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.087186495 seconds)
    (179/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372835338 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.897359386 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869006686 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.193852755 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.856300308 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.956911327 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.013220898 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.053280506 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.860304979 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.073539723 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.837877466 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.801111926 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.843875665 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.022285212 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.989154386 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.536393391 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.026589315 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.990495326 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.982550768 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.85434551 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.07599314 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.394565949 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.005454451 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203725126 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.844851968 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.576873386 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.063183347 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55068141 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.891015512 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.181503421 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.796560762 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858153729 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.299589277 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.876518489 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.855657531 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.977577617 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.961938636 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.864287748 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.873043551 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.155462971 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.243675708 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.949856277 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.902642064 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.856760719 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950405162 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.198859698 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.937856792 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.85328913 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.155470409 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.329113585 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.847685977 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.058241674 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.161024778 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924193251 seconds)
    (233/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.985395323 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.105015664 seconds)
    (235/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.972890825 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159798714 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.966237032 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.016936176 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.982462017 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.964221388 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.832885613 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.938923426 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.950496615 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.78484899 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225493553 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.998040292 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.893805737 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.97375743 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.928894849 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.862530228 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.845846722 seconds)
    (252/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.316848411 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.029474214 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.822551482 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.408661749 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.053168824 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886833719 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.043968801 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.864322112 seconds)
    (260/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.054014639 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.225422883 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.457750343 seconds)
    (263/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.041298001 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.72988754 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.088201149 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.01133852 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187291132 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.413212378 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.229492092 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.861535816 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.254997244 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876806895 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.184614288 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.942954973 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.854752833 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.598718676 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.943676099 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.177773841 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.118786961 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.891410032 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531291006 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.971014326 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.166222071 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.356589601 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.861231115 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.620983869 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.863248348 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.202566566 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.424494031 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.956379924 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.047495533 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.172672166 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898181207 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57567457 seconds)
    (295/309) benchmarking ("sort", Int8, false)...
    done (took 4.822252633 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.81813687 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.044444839 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.253642588 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.507933613 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.865398163 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879948134 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.478896415 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957025449 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884566482 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 5.567307641 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892264869 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.866406111 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.85869546 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.849838296 seconds)
  done (took 1005.992128815 seconds)
done (took 1007.811544142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.889929545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883795868 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.866956956 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888930677 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.979079301 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.899081181 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.878491382 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.869636508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.914304947 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.917164897 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.866038168 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.900128319 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.869882733 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.867509264 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.867590745 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882466268 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.184655465 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.899390457 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.885184784 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.876465088 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.884368292 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.867112746 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.919422582 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.900349539 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.871977051 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86952324 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.871525826 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.888307397 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.98012187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.872531469 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870991631 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.88062169 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184907764 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897619854 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.863590024 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.888524232 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.880417677 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.880677186 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.872532936 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.901134271 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.278101216 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.91046531 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.872690144 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.870150901 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871624319 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.874086145 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.870588203 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.87602268 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883842799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883749279 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.272880941 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.925957813 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.872638336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.87155245 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.880376688 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.870714991 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.873643916 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886996907 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.890685746 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887106222 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.175355586 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.905975131 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.872806386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.888926001 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.878446922 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.311138375 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.907053769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.874683035 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279923479 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.915494775 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.311155735 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.919997289 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.871926852 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.886499908 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.904665661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.186144771 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.897030401 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.871059512 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.880197664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.870788798 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.881532086 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885306361 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.876780348 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.872783169 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887050853 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.905505025 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883704284 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.874081261 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882859597 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.89322449 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.880728347 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884462016 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877434239 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.86818426 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.884261238 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877513585 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.876534293 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.876445341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.876908723 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.88344569 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280679389 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.927577824 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870276663 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.869337061 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.872244942 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.888000164 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.278542661 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.913136814 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.895303823 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.920347096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875505184 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.177563302 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.906315428 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889619596 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.881412972 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87751301 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868903409 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.178056119 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307697489 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.928543402 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.876817298 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.87243941 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889719463 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875228888 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.870249248 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.635894216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908049545 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888049653 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.995874959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883848236 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.908569083 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.874211307 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.878886032 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.908142864 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890750333 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906482473 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.878107744 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890128777 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.892027539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.871539129 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.885962761 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.886885808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876260576 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.879837057 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.869926573 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909041194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888602837 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88901779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.897092563 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.996566063 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873839036 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.180703293 seconds)
done (took 294.830441785 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.944132776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.870405212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.973102213 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.872330509 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.95597144 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.967463841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.870943848 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.871832025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.871492376 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.246963966 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.873887234 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.871441277 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.865514197 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.87463728 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.956493737 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.87304309 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.871298895 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.209754742 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.878881137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.945581174 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.873689178 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.872382929 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.875519285 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.2481161 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872694044 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.877549343 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.95681327 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.876731612 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213699173 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.869848942 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875293204 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216801373 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976415709 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.89649191 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887674898 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884996325 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.966143278 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882558162 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.962799696 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.957515349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.977170678 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.919317375 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.867852417 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.872152654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.879174713 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876690565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.873775497 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.902947148 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871421666 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.875121323 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211745928 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.885519804 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.88274544 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.873037522 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.876077997 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.898677236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.873810599 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879151444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.967621346 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.881175991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.945709439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.250235959 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.248900949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.877830444 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878334221 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.8737694 seconds)
  done (took 184.730053223 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944019706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.949607145 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.944331262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.880558476 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.924659245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.947582385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.882701725 seconds)
  done (took 15.27678297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.883401774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877539576 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.929912435 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926523327 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878766616 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.048982327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87776639 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.889336383 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878230081 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.929677836 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880372224 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879173607 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.884360092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871528998 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926110748 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.88880547 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.995613065 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.879592463 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880824164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.030170907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877380824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888925253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.941845555 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.890269558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880580188 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.885649802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.464647693 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880865334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876060159 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.878924337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877144297 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.924529193 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879505233 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.872032074 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879691988 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995139531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880379639 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877606621 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880814489 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.877153181 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.881206592 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.879589982 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883069381 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.876960501 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.879872511 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.902813789 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880460707 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.882333996 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.879268791 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.8805127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.938068217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880295085 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.881668447 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877125371 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.934509317 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887987749 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.881745716 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879410155 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880364466 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877081052 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.03055583 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.927110575 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.881078658 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929857643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880102493 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880699939 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.880743567 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.880486036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.97619791 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880809937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.927900274 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.87897643 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.039065863 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906200766 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881190367 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.884085825 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.882815383 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881967378 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.877335115 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.887146902 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.877476173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.884646914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.887582389 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879106651 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878617216 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.992205976 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.988602909 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.879130202 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.893762259 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.887912652 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.878629359 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941812285 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.881822547 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.879384293 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93597903 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.997957064 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.940367177 seconds)
  done (took 206.896400787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.887962002 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890813648 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.884363164 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.899778276 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.881679659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.881225134 seconds)
  done (took 13.13491887 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.883976047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.882800809 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.881240396 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.882096466 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.882823524 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.883530278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.882778618 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884107738 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.887003906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.883245558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.884369073 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.883330804 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885379975 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.88558773 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.884233448 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.882124574 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.884358328 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880439996 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884397683 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884172539 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.031760512 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.883700259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883488173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.886451027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.888671394 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.882797112 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891036542 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.883447006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.885265248 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.891723998 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888568881 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.884237556 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.884394323 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.889415232 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891758131 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.884817136 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887395406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.885039651 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.879706606 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.888161023 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.884547414 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885131114 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883602855 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.884757811 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.887406833 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.888878624 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.888177853 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891290058 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.885234375 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.884997666 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.884728977 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.88405595 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.886605872 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.884508041 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.884866961 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888919242 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.88844344 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.885198927 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.884077522 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884692382 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886304776 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.885916026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885565277 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.889018167 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.890976963 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.885679063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.885697325 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889656479 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885549786 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.884514717 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.885257071 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.881745738 seconds)
  done (took 138.710230082 seconds)
done (took 560.565332689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.097570132 seconds)
  done (took 8.907044863 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.027275458 seconds)
  done (took 8.879772613 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.262099496 seconds)
  done (took 10.077810183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887057631 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.899155677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.894820294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.885502528 seconds)
  done (took 29.401091839 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.006870685 seconds)
  done (took 8.819039705 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.903758827 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.87881737 seconds)
  done (took 15.629017696 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.998616385 seconds)
  done (took 8.810027738 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.013665677 seconds)
  done (took 8.852421545 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.900984304 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.915205535 seconds)
  done (took 15.645046886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.866566549 seconds)
  done (took 8.680671311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.501124089 seconds)
  done (took 11.418844093 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.896683676 seconds)
  done (took 8.821099013 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.91098822 seconds)
  done (took 8.725233315 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.931280274 seconds)
  done (took 8.745305131 seconds)
done (took 163.223844706 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.885282713 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.886468868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.884489714 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887035739 seconds)
  done (took 29.3573306 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.923319106 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.923821485 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.923427593 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.933079843 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.925863083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.922173293 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.916233633 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.915931101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.933962687 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.92607903 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.924530407 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926767238 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.922751686 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.914962055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.926159535 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.925789759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.934417164 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.924015369 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.915739169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926189918 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.890735687 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.934420876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.927366322 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.890010817 seconds)
  done (took 47.941197927 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.09015656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.961171628 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.043333384 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941638301 seconds)
  done (took 9.852177881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.942743034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.944904118 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.956147321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.994124222 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.016749016 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.952450055 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.916796948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.912251791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897723804 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.945027946 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.01848405 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937126791 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033365523 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.891716432 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077614818 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890666597 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.891009995 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.943516609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.9955677 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.007728285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.891460027 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942898989 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.947342431 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.937597289 seconds)
  done (took 48.701741073 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.889873207 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.898399446 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.897742304 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891525524 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.89105393 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.890986391 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.896964553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.892642241 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.913548869 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893038732 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.889380231 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.891430379 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.890049924 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.892524964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.890474308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.904003848 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.904647862 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.89097546 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.895440235 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.897312936 seconds)
  done (took 39.719810658 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.885720164 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.740429506 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.237683762 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.141912763 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.889791435 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.885145214 seconds)
  done (took 31.598299301 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.90487991 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898704489 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.892583454 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.949307409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032504909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899267673 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.892300523 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905879318 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.940154772 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957530868 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914025214 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92219357 seconds)
  done (took 24.92666008 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.889026332 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.90004312 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888825293 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.9136024 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.903603636 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.900748588 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.899396748 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.888663273 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906816334 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911325802 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.901004119 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.904244164 seconds)
  done (took 44.632808581 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976304683 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777077966 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.961910656 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612455637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36548472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099711171 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411771706 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227745366 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.891271186 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161045743 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977802547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144750564 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142038771 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887463968 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.979036275 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.391022746 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190235502 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126440532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920367612 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655132354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015391975 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431144878 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.690024284 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023862588 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100387939 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.020304281 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149484074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846769538 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027706534 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931449399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899611806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888715097 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163263013 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291619902 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990970776 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899849606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542956488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.610054381 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.947193902 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.66881263 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.892306123 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.031433128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898179137 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890439289 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826266354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460062476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239378935 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.895598652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.602244586 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889634189 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901744742 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978401827 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.894968584 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.7065033 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842556071 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175489543 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.888415461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897141631 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462226726 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00653579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545649023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.833412324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.086119756 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665434183 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386477172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047819001 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.894775085 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896121278 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826171302 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676555439 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027190188 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037972064 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.912174426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542920777 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199890261 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.050657881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989597652 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187616172 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.712717531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832420179 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11963231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844726068 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826513571 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.754247587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827045021 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170552873 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936102056 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.541952412 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938350557 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227484608 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904563364 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909692457 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898710454 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115446225 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.773650573 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892390734 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.743431398 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197276298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915004399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232709427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829112189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.896370935 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148795421 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104362547 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.144801461 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392348598 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058612039 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894573013 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.984263723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.837854301 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908194598 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.177203624 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954956759 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.019855239 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030709645 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853063577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204112379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926369467 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068224546 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.014166905 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171696573 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.233698545 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191457764 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958871398 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893741858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893603731 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685287822 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530737319 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.160096781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.894980101 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419190924 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906059497 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.895399197 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82962505 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.494946852 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004520201 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.023926981 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120516128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853209863 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171355741 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82884556 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042324553 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009681341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.118384678 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.558169904 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98498912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153452167 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409768506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.160761713 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910541081 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915344751 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985543724 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917591479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.34178952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152520832 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.900537163 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900244984 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688463476 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975580019 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89660188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.901726019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701131435 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195423733 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927772965 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901069997 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785400355 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.909771748 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962346039 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902822936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907535909 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.444596931 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664959854 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912010425 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.516668552 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132488037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906124814 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.676815919 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093557783 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.9785482 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182312715 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961302755 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.831838264 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.608449402 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.59140273 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898661669 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831859009 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897512818 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906500876 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910408035 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.281994715 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188496099 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949741243 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.679172274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.020447453 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908759629 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902664509 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89730245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.420054487 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025488936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432292146 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017236712 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037228939 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.912067138 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832429326 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901700761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904219247 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897704388 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.858927875 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951981533 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.774861788 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366670218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159580148 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.545383833 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92009438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.709324708 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.038685605 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.925378855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766240714 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884777353 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.000877016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963325601 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.910806284 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.682314931 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.68075073 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470056803 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216619841 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227629122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359318236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.288162077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275115785 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239198619 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135126122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429309107 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96050327 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247625806 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844727158 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986670557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.563749962 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265371771 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917400412 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127625139 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304955789 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.823195071 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071857716 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114429788 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934277785 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.708929278 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938635678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.10423735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04327251 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804938938 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129639459 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234806611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770220732 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019675163 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.899764298 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.61011503 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98977315 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.610716302 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262134473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45269575 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030523688 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405201534 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903621563 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350401361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278162573 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276244427 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.98792666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836925381 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910885195 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911302626 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.90013163 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87525662 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.800813755 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.18138968 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911076701 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135661676 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.204014903 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176170044 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.864656786 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.905989853 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900681055 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212422786 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.601895453 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148050788 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.258053145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.48378685 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91160306 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835992395 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835919118 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.592990582 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900691768 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876741144 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133774386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.091522508 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854115189 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307736506 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2186624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155255332 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.913288231 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191894103 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182913303 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636690214 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934397915 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.003510209 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.776890687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.031321335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.170884302 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137745873 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708007721 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138839615 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.956381395 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.725967406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.902501168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118490365 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171883349 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.032502946 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165860783 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.627692411 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.91486708 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271834744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965749471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.033474121 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.083264993 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.098585778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91486408 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987726216 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914018865 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913820663 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914628131 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949385054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055310467 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.050046525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.917432727 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992064744 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046716277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.501949396 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.916565869 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198446691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278915247 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246938619 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96491851 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906197563 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903667277 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838325963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040207918 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352558954 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178946863 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034768364 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.206125735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931236495 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774780023 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.22399771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224191424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182689516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801920034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905601983 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020739586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.175980848 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919352807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.117485369 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149009342 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234686698 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381816478 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.057429032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351648001 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181381344 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275577606 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905890962 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497644575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.918205787 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.664658448 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.949317508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043343355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200884052 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918279888 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290087695 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929203244 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.103414904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.422790057 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799827993 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278485087 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902443191 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972480305 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194626604 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309059367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222022468 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979659494 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920179647 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.622209186 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045487111 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.839884444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.217719985 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909158098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119041697 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.617812793 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917490847 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196036296 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219120331 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905687356 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.871505998 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967781293 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.918896502 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132309518 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191854911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162881867 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917768719 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916862282 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.727363845 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197323464 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973502624 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843178899 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.912893414 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00809135 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157143377 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929071303 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.596143443 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62110581 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215856033 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.833499887 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93151714 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316615342 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366460079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251223011 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447284184 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151900901 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474771544 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755608919 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289234005 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.914994758 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324385247 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290745048 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914114058 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431592108 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025299993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.196519467 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231329324 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.922301445 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788610639 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.963313773 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134569297 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576525848 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857712611 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913049785 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97045418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911922834 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040503128 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924037088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.901491326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816043537 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.743193183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410001578 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.917614008 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.906898625 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.808629377 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.517659662 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024984111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05405857 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923650602 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.632532149 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204852841 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16531084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430562658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.986176714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.915637763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9137965 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840240117 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111239395 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.294335833 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219625573 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.27757696 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.027132943 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918000406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129002672 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125476861 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.055583541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082528387 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314003089 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029514952 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.644465795 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.594676403 seconds)
  done (took 1707.360683869 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932845417 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.942448766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.92586942 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.943669559 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933431171 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996405631 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.949061421 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966858821 seconds)
  done (took 57.435289059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.919456389 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.143972002 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92690795 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.917518693 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.954479562 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918852502 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.115322902 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.929837779 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.945400335 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.927846921 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.918859346 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923876692 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.236623618 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.942099204 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917673709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.945901294 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.926192497 seconds)
  done (took 75.37636373 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.917724949 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.09631644 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.96380019 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939439913 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.862015147 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934743143 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.856775643 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.930672198 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919229115 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.149592497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.257309565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.923193843 seconds)
  done (took 90.600710512 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.931925919 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.924641464 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.924454928 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922918306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.923228427 seconds)
  done (took 11.483131748 seconds)
done (took 2220.816557798 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.164619105 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138195223 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142061443 seconds)
  done (took 6.130108103 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.065883722 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111555701 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232607814 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.252820238 seconds)
  done (took 10.514260123 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.208639045 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.287785859 seconds)
  done (took 6.344368978 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284663061 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.936552434 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.315664554 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.917921403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.919857472 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.919385475 seconds)
  done (took 22.610015571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.920422548 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.923200556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.91986399 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.921923607 seconds)
  done (took 9.532335835 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.901849137 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.662503195 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.902590598 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.917549352 seconds)
  done (took 21.232399948 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669767134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.319507311 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.664846436 seconds)
  done (took 9.502176817 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.653599458 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.187330847 seconds)
  done (took 9.689840251 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.176900614 seconds)
  done (took 4.025628187 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.950329344 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.192578047 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.492558214 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.50548434 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.566284766 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.179609607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.275017778 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.165955847 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.372631874 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.408632687 seconds)
  done (took 25.959150772 seconds)
done (took 141.09200114 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.52263623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.308123929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.124745748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.278923723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.156992233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.12525044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.32725487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.258950381 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.780959668 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.775323594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.327742794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.156420157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.279741446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.293988288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.277879452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.165009822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.147532131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.344907727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.015055734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.207248182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.349899226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.898655543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.153855431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914612565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.164773574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.077035641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.468171383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.168157753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.150170444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.480141338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.081420438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349469245 seconds)
  done (took 173.982534115 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912070812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.920824845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.91993578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.921071344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.290051661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924202056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.921933999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.920548598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232719592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.197025092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922098901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.275456427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922515379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.920855765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92157805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.921099044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.39601391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.92215715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.922949146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.920613164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923899968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111356135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.922419186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.125513045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.359295141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923245825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92260578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.922109547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.92163711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.921495085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921939674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.921848457 seconds)
  done (took 209.956926868 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.921051914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92362534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.923163721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.922611776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.923846132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.921400414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922598362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.923297691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.508916073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.503613826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922805319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.9243728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92164811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923482616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923383114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922709154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.923610646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.92307824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92512113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924974841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.927398409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.539323698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926387452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.560443494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.928643422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931090248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.923163003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935789474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937831167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.939656689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.94321563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927886898 seconds)
  done (took 221.904267753 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.128416587 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.929083043 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.930926632 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.863398255 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.931892247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.930036964 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.872763227 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.120899795 seconds)
  done (took 19.585463359 seconds)
done (took 627.28731001 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.402506198 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.250797541 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.111388059 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.954988553 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.188111959 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.991839742 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.951459379 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.024896737 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.682134848 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03086248 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.643175865 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.973507936 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.732015532 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.979131195 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.074066209 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.013507644 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.496471671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589557344 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132023075 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008324651 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.130389496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.896559966 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.043025718 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.700841211 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.754108488 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939384643 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.14061056 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.509486269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.963994917 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117938126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.738473826 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.361134798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.968508353 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.950219389 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.008460824 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.986614662 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316461698 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.967710159 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.069805591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.69572672 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.013293626 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.566015795 seconds)
  done (took 105.926304418 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.921727602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.921034613 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.919407309 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.920756631 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.92144499 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.920456488 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.919108377 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.91904726 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.920978105 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.919473462 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.919188741 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.92068423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.920715537 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.920693343 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.919597919 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.920077686 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.920594079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.921781638 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.919717759 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.919456058 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.920619185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.920392958 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.935849227 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.920187112 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.920962358 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.921477418 seconds)
  done (took 51.815579649 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.933950658 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.083760662 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.200643209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956370694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.933202746 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.937501706 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.953848235 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.939329063 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936047539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.936687961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.028399707 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.941723524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956010628 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.203460865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955401842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.936931639 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.93690132 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.936211477 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.094402322 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953072161 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954484543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.940170629 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.953536794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.948689312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.935988626 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935021586 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.939320833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.408142662 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.944869549 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.028374977 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.991745932 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.964291086 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.351839728 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.211698088 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.993690883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.948704654 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.935993058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030308303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.94167326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.936063418 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.954789912 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.941170334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.199110938 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.434614433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.952726503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.936402193 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.418451946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.039835702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978986043 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.949528461 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.201775347 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.957452083 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.93839578 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.937392714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.973544616 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.94885112 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.937305368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.265241071 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.949498643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.955738372 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.943021978 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.937517977 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098266827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.946707431 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.087101257 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.946982314 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.944070338 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937817758 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.201177921 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.957961113 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436751324 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.95343687 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.938151247 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02972007 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.09215326 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.449847321 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.951855034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100065229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.369661749 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.963047481 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.945789291 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.397865283 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.967818981 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.946914626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.940614463 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.940151136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939793745 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.983937723 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.954421289 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.364622165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.441370023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282408462 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.965781742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.954627266 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939379878 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.264100111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.949185224 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939667953 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.194598192 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.450281208 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.954386331 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.946872177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.425092067 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.957029308 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.957671426 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.94892956 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.205232275 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.958624316 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.984648399 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.940033349 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.946962483 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.943210826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.958190493 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.94812881 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.940745703 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.415356791 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.053188546 seconds)
  done (took 240.314807595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.93337598 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961230729 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.934921891 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.963017621 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.932552422 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.939191006 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.933639058 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.932692566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.939509034 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.934365984 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.934345869 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.935499968 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.937718836 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.941259216 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.048445403 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.942169431 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.590182626 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934442203 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.935049425 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.949264222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.582823035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.942132785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.935832065 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.950211397 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.936539465 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.933847668 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94177666 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.034319534 seconds)
  done (took 169.678951967 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.942779449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.058198098 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.962570257 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.97110801 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.952179469 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.94111432 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.966689739 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.957999886 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.947725649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94103612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.941043278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.002783369 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.954290878 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.044362826 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.975929231 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.974655582 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.047224596 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.953452708 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.942185168 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.940640404 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971354794 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.93715753 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002882001 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.070490364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.962330561 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.061447722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.948877152 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.943739688 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.94237025 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060147849 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.958531442 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.004080387 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.970986115 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.960928037 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068346566 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062643524 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.05182793 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.974547034 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.947418317 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.941487267 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943510978 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.931607126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.061684462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963481308 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.94441487 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.051732937 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.962577211 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.945162749 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.951832464 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.941337401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.957160555 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.961646764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.011397725 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.076080391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.982255853 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.97036517 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.969580422 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.2415276 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.955336847 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.042828904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.9397825 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063698457 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.965962082 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.932611924 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.944362852 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.949254439 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.972264962 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.976266443 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.050265832 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.954194776 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.045966173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.982756177 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.95229897 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.943933225 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.947908562 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061762838 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067708777 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.981899896 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983317889 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.976181535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.941005571 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.944394615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.933957262 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.963493225 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.949898375 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063975888 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067352528 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.955769368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.947827878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.947494224 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94774767 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.972034354 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.070408309 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.984786134 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043546843 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.015433622 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019950705 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.959597511 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.958984887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.949931035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.010597705 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.961227281 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.957866143 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.292204931 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.018209531 seconds)
  done (took 210.566336877 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.396621561 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.000842846 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.00509581 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.271067081 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.374413715 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.869709721 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.995984443 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.996651621 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.019836256 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.183818027 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.068832843 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.014870362 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.983117559 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969452795 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.997046544 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.016073153 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.004637934 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326022375 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.117461611 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.080227557 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.976267707 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.273613921 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.324251165 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.428399264 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032248828 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337000735 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668924947 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.13859202 seconds)
  done (took 63.750186744 seconds)
done (took 843.907655181 seconds)
SAVING RESULT...
DONE!
